<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="bsp_8h" kind="file" language="C++">
    <compoundname>bsp.h</compoundname>
    <includes refid="bsp__boot_8h" local="no">bsp_boot.h</includes>
    <includes refid="bsp__flash_8h" local="no">bsp_flash.h</includes>
    <includes refid="bsp__rtc_8h" local="no">bsp_rtc.h</includes>
    <includes refid="bsp__gpio_8h" local="no">bsp_gpio.h</includes>
    <includes refid="bsp__gpio__it_8h" local="no">bsp_gpio_it.h</includes>
    <includes refid="bsp__uart_8h" local="no">bsp_uart.h</includes>
    <includes refid="bsp__lp_8h" local="yes">bsp_lp.h</includes>
    <includedby refid="app__entry_8h" local="yes">/home/nono/OpenWize/demo/Nucleo-L476/app/include/app_entry.h</includedby>
    <includedby refid="port_8c" local="yes">/home/nono/OpenWize/demo/Nucleo-L476/app/sys/port.c</includedby>
    <includedby refid="sys__init_8c" local="yes">/home/nono/OpenWize/demo/Nucleo-L476/app/sys/sys_init.c</includedby>
    <includedby refid="main_8c" local="yes">/home/nono/OpenWize/demo/Nucleo-L476/board/src/main.c</includedby>
    <includedby refid="bsp_8c" local="yes">/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp.c</includedby>
    <includedby refid="platform_8c" local="yes">/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/platform.c</includedby>
    <includedby refid="phy__layer_8c" local="no">/home/nono/OpenWize/demo/Nucleo-L476/device/PhyFake/src/phy_layer.c</includedby>
    <incdepgraph>
      <node id="5">
        <label>stdbool.h</label>
      </node>
      <node id="8">
        <label>assert.h</label>
      </node>
      <node id="6">
        <label>stdint.h</label>
      </node>
      <node id="3">
        <label>common.h</label>
        <link refid="common_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>bsp_gpio_it.h</label>
        <link refid="bsp__gpio__it_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>bsp_rtc.h</label>
        <link refid="bsp__rtc_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>stddef.h</label>
      </node>
      <node id="11">
        <label>bsp_flash.h</label>
        <link refid="bsp__flash_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>bsp_gpio.h</label>
        <link refid="bsp__gpio_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>bsp_uart.h</label>
        <link refid="bsp__uart_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>time.h</label>
      </node>
      <node id="1">
        <label>/home/nono/OpenWize/demo/Nucleo-L476/bsp/include/bsp.h</label>
        <link refid="bsp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>bsp_lp.h</label>
        <link refid="bsp__lp_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdio.h</label>
      </node>
      <node id="10">
        <label>machine/endian.h</label>
      </node>
      <node id="2">
        <label>bsp_boot.h</label>
        <link refid="bsp__boot_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5">
        <label>/home/nono/OpenWize/demo/Nucleo-L476/app/sys/sys_init.c</label>
        <link refid="sys__init_8c"/>
      </node>
      <node id="9">
        <label>/home/nono/OpenWize/demo/Nucleo-L476/device/PhyFake/src/phy_layer.c</label>
        <link refid="phy__layer_8c"/>
      </node>
      <node id="2">
        <label>/home/nono/OpenWize/demo/Nucleo-L476/app/include/app_entry.h</label>
        <link refid="app__entry_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/platform.c</label>
        <link refid="platform_8c"/>
      </node>
      <node id="6">
        <label>/home/nono/OpenWize/demo/Nucleo-L476/board/src/main.c</label>
        <link refid="main_8c"/>
      </node>
      <node id="7">
        <label>/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp.c</label>
        <link refid="bsp_8c"/>
      </node>
      <node id="4">
        <label>/home/nono/OpenWize/demo/Nucleo-L476/app/sys/port.c</label>
        <link refid="port_8c"/>
      </node>
      <node id="1">
        <label>/home/nono/OpenWize/demo/Nucleo-L476/bsp/include/bsp.h</label>
        <link refid="bsp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/nono/OpenWize/demo/Nucleo-L476/app/src/app_entry.c</label>
        <link refid="app__entry_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__common_1gaec10efdbac1c7466daf49de48b13cbf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t ascii2hex</definition>
        <argsstring>(uint16_t u16Char)</argsstring>
        <name>ascii2hex</name>
        <param>
          <type>uint16_t</type>
          <declname>u16Char</declname>
        </param>
        <briefdescription>
<para>Function convert a hexa represented as 2 bytes char into hexa value (1 byte). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">u16Char</parametername>
</parameternamelist>
<parameterdescription>
<para>Two byte char to convert</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>converted one byte hex value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp.c" line="55" column="9" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp.c" bodystart="55" bodyend="69" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/include/bsp.h" declline="53" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="group__common_1ga33020db34346d04a6a7ac64c0fdd7f0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t hex2ascii</definition>
        <argsstring>(uint8_t u8Hex)</argsstring>
        <name>hex2ascii</name>
        <param>
          <type>uint8_t</type>
          <declname>u8Hex</declname>
        </param>
        <briefdescription>
<para>Function convert a hexa value (1 byte) into its 2 bytes char representation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">u8Hex</parametername>
</parameternamelist>
<parameterdescription>
<para>One byte hexa value to convert</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>converted two bytes char representation </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp.c" line="78" column="10" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp.c" bodystart="78" bodyend="92" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/include/bsp.h" declline="54" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__common_1gadfc63b674e9e335fd191663ad1784ee0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void msleep</definition>
        <argsstring>(uint32_t milisecond)</argsstring>
        <name>msleep</name>
        <param>
          <type>uint32_t</type>
          <declname>milisecond</declname>
        </param>
        <briefdescription>
<para>Alias for HAL_Delay function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">milisecond</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of milisecond to wait </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp.c" line="103" column="6" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp.c" bodystart="103" bodyend="103" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/include/bsp.h" declline="55" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__common_1ga1730ffe1e560465665eb47d9264826f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Error_Handler</definition>
        <argsstring>(void)</argsstring>
        <name>Error_Handler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function is executed in case of error occurrence. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/include/bsp.h" line="56" column="13" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/board/src/main.c" bodystart="459" bodyend="465" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/include/bsp.h" declline="56" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__common_1ga903e37e356fc981619694cc2ab3d8388" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BSP_Init</definition>
        <argsstring>(uint32_t u32BootState)</argsstring>
        <name>BSP_Init</name>
        <param>
          <type>uint32_t</type>
          <declname>u32BootState</declname>
        </param>
        <briefdescription>
<para>This function initialize the bsp. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">u32BootState</parametername>
</parameternamelist>
<parameterdescription>
<para>The current boot state</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp.c" line="155" column="6" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp.c" bodystart="155" bodyend="175" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/include/bsp.h" declline="57" declcolumn="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This file defines functions to initialize the BSP. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para>2019, GRDF, Inc. All rights reserved.</para>
</simplesect>
Redistribution and use in source and binary forms, with or without modification, are permitted (subject to the limitations in the disclaimer below) provided that the following conditions are met:<itemizedlist>
<listitem><para>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</para>
</listitem><listitem><para>Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</para>
</listitem><listitem><para>Neither the name of GRDF, Inc. nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="par"><title>Revision history</title><para></para>
</simplesect>
<simplesect kind="par"><title>1.0.0 : 2020/04/23 [GBI]</title><para>Initial version </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="36"><highlight class="preprocessor">#ifndef<sp/>_BSP_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_BSP_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="bsp__boot_8h" kindref="compound">bsp_boot.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="bsp__flash_8h" kindref="compound">bsp_flash.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="bsp__rtc_8h" kindref="compound">bsp_rtc.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="bsp__gpio_8h" kindref="compound">bsp_gpio.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="bsp__gpio__it_8h" kindref="compound">bsp_gpio_it.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="bsp__uart_8h" kindref="compound">bsp_uart.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAS_BSP_PWRLINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;bsp_pwrlines.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bsp__lp_8h" kindref="compound">bsp_lp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="group__common_1gaec10efdbac1c7466daf49de48b13cbf0" kindref="member">ascii2hex</ref>(uint16_t<sp/>u16Char);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__common_1ga33020db34346d04a6a7ac64c0fdd7f0e" kindref="member">hex2ascii</ref>(uint8_t<sp/>u8Hex);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__common_1gadfc63b674e9e335fd191663ad1784ee0" kindref="member">msleep</ref>(uint32_t<sp/>milisecond);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__common_1ga1730ffe1e560465665eb47d9264826f9" kindref="member">Error_Handler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__common_1ga903e37e356fc981619694cc2ab3d8388" kindref="member">BSP_Init</ref>(uint32_t<sp/>u32BootState);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>USE_FULL_ASSERT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>assert_failed(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,<sp/>uint32_t<sp/>line);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_FULL_ASSERT<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_BSP_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/include/bsp.h"/>
  </compounddef>
</doxygen>
