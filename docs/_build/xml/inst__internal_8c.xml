<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="inst__internal_8c" kind="file" language="C++">
    <compoundname>inst_internal.c</compoundname>
    <includes refid="inst__internal_8h" local="yes">inst_internal.h</includes>
    <includes refid="parameters_8h" local="yes">parameters.h</includes>
    <includes refid="parameters__lan__ids_8h" local="yes">parameters_lan_ids.h</includes>
    <includes local="no">stddef.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">time.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/home/nono/OpenWize/sources/WizeCore/app/src/internal/inst_internal.c</label>
        <link refid="inst__internal_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>inst_internal.h</label>
        <link refid="inst__internal_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdint.h</label>
      </node>
      <node id="6">
        <label>parameters.h</label>
        <link refid="parameters_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>proto.h</label>
        <link refid="proto_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>stddef.h</label>
      </node>
      <node id="10">
        <label>string.h</label>
      </node>
      <node id="11">
        <label>time.h</label>
      </node>
      <node id="8">
        <label>parameters_lan_ids.h</label>
        <link refid="parameters__lan__ids_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>app_layer.h</label>
        <link refid="app__layer_8h"/>
      </node>
      <node id="7">
        <label>parameters_def.h</label>
        <link refid="parameters__def_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__wize__inst__layer_1ga893acfa844d4a7ba1f43c27adbe219e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InstInt_Init</definition>
        <argsstring>(struct ping_reply_ctx_s *ping_reply_ctx, net_msg_t *pNetMsg)</argsstring>
        <name>InstInt_Init</name>
        <param>
          <type>struct <ref refid="structping__reply__ctx__s" kindref="compound">ping_reply_ctx_s</ref> *</type>
          <declname>ping_reply_ctx</declname>
        </param>
        <param>
          <type><ref refid="group__wize__proto_1gaa869d642cfdd1c06d14478f701389342" kindref="member">net_msg_t</ref> *</type>
          <declname>pNetMsg</declname>
        </param>
        <briefdescription>
<para>This function initialize the ping_reply context. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">ping_reply_ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer on the current context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">pNetMsg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer on ping message to send</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/WizeCore/app/src/internal/inst_internal.c" line="90" column="6" bodyfile="/home/nono/OpenWize/sources/WizeCore/app/src/internal/inst_internal.c" bodystart="90" bodyend="135" declfile="/home/nono/OpenWize/sources/WizeCore/app/include/internal/inst_internal.h" declline="98" declcolumn="6"/>
        <references refid="structnet__msg__s_1afe7bd3b4d167a78b1320114b9720c1a2" compoundref="proto_8h" startline="167">net_msg_s::pData</references>
        <references refid="structping__reply__ctx__s_1ac422924292ca1e4dd9292a2b75c30f9d" compoundref="inst__internal_8h" startline="94">ping_reply_ctx_s::u8NbPong</references>
        <references refid="structping__reply__ctx__s_1acedd4eeb9c07cbe67855f15231b0e945" compoundref="inst__internal_8h" startline="92">ping_reply_ctx_s::pBest</references>
        <references refid="structping__reply__ctx__s_1a506cd34a650b3606aed79ca9c388e7bb" compoundref="inst__internal_8h" startline="90">ping_reply_ctx_s::aPingReplyList</references>
        <references refid="structping__reply__ctx__s_1aca4cb6275c9b7a7a7fcd0d6b26ace36d" compoundref="inst__internal_8h" startline="91">ping_reply_ctx_s::pWorst</references>
        <references refid="structping__reply__list__s_1a7f4e0e7af80aa33c61cd19e7cc4285e3" compoundref="inst__internal_8h" startline="78">ping_reply_list_s::pNext</references>
        <references refid="structping__reply__list__s_1a7d460bf74d062bca5f3aa0d458f5acc8" compoundref="inst__internal_8h" startline="79">ping_reply_list_s::xPingReply</references>
        <references refid="structping__reply__list__s_1a197ec56434ab16d8eceee0be76bf32d9" compoundref="inst__internal_8h" startline="80">ping_reply_list_s::u32RecvEpoch</references>
        <references refid="structping__reply__list__s_1a070b16f4b7baa9e4f18c52e96546206e" compoundref="inst__internal_8h" startline="81">ping_reply_list_s::u32PongEpoch</references>
        <references refid="structping__reply__list__s_1abc7cb73f341cdfebd8c510f35245de4e" compoundref="inst__internal_8h" startline="82">ping_reply_list_s::i16PongFreqOff</references>
        <references refid="group__parameters_1gaa6884ee37e011e23391af79b6a6cb6f7" compoundref="parameters_8c" startline="411" endline="425">Param_Access</references>
        <references refid="group__parameters_1gga9c642374fbdaae99ed43e1fe43318ac0a92d7ed82d7e079cbeddb40a901a17c67" compoundref="parameters__lan__ids_8h" startline="54">RF_DOWNLINK_CHANNEL</references>
        <references refid="group__parameters_1gga9c642374fbdaae99ed43e1fe43318ac0a0356d0b6740da1e87357fa61c9642206" compoundref="parameters__lan__ids_8h" startline="56">RF_DOWNLINK_MOD</references>
        <references refid="group__parameters_1gga9c642374fbdaae99ed43e1fe43318ac0ab182a57062f656fbe03d7f87e18ff186" compoundref="parameters__lan__ids_8h" startline="72">PING_RX_DELAY</references>
        <references refid="group__parameters_1gga9c642374fbdaae99ed43e1fe43318ac0a3ce5f49938b37554e99a28ffc72c33ef" compoundref="parameters__lan__ids_8h" startline="73">PING_RX_LENGTH</references>
        <references refid="structnet__msg__s_1a40f5980da2c93845e841e85a02d221e6" compoundref="proto_8h" startline="170">net_msg_s::u8Size</references>
        <references refid="structnet__msg__s_1a742adf101885837a2bb1310790b00b05" compoundref="proto_8h" startline="169">net_msg_s::u16Id</references>
        <references refid="structnet__msg__s_1abe67e8bc4bda4a76780b7fc53873c150" compoundref="proto_8h" startline="173">net_msg_s::u8KeyId</references>
        <references refid="structnet__msg__s_1a126eb90bceff21320fd2f0c63027430b" compoundref="proto_8h" startline="171">net_msg_s::u8Type</references>
        <references refid="group__wize__proto_1gga790b42ad60fd4ed13797deb456010723a9377b7d549cf79015cf1007fa5939962" compoundref="proto_8h" startline="72">APP_INSTALL</references>
        <references refid="structping__reply__ctx__s_1ad3bf343c5d587431b2f235a5049564f7" compoundref="inst__internal_8h" startline="93">ping_reply_ctx_s::u32PingEpoch</references>
      </memberdef>
      <memberdef kind="function" id="group__wize__inst__layer_1ga1e06e51e59c219852463fd29876e45bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InstInt_Add</definition>
        <argsstring>(struct ping_reply_ctx_s *ping_reply_ctx, net_msg_t *pNetMsg)</argsstring>
        <name>InstInt_Add</name>
        <param>
          <type>struct <ref refid="structping__reply__ctx__s" kindref="compound">ping_reply_ctx_s</ref> *</type>
          <declname>ping_reply_ctx</declname>
        </param>
        <param>
          <type><ref refid="group__wize__proto_1gaa869d642cfdd1c06d14478f701389342" kindref="member">net_msg_t</ref> *</type>
          <declname>pxNetMsg</declname>
          <defname>pNetMsg</defname>
        </param>
        <briefdescription>
<para>This function add a pong to the &quot;ping_reply&quot;. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">ping_reply_ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer on the current context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">pNetMsg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer on received pong message</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/WizeCore/app/src/internal/inst_internal.c" line="145" column="6" bodyfile="/home/nono/OpenWize/sources/WizeCore/app/src/internal/inst_internal.c" bodystart="145" bodyend="214" declfile="/home/nono/OpenWize/sources/WizeCore/app/include/internal/inst_internal.h" declline="100" declcolumn="6"/>
        <references refid="structping__reply__ctx__s_1ac422924292ca1e4dd9292a2b75c30f9d" compoundref="inst__internal_8h" startline="94">ping_reply_ctx_s::u8NbPong</references>
        <references refid="structping__reply__ctx__s_1a506cd34a650b3606aed79ca9c388e7bb" compoundref="inst__internal_8h" startline="90">ping_reply_ctx_s::aPingReplyList</references>
        <references refid="structping__reply__list__s_1a7d460bf74d062bca5f3aa0d458f5acc8" compoundref="inst__internal_8h" startline="79">ping_reply_list_s::xPingReply</references>
        <references refid="structnet__msg__s_1afe7bd3b4d167a78b1320114b9720c1a2" compoundref="proto_8h" startline="167">net_msg_s::pData</references>
        <references refid="structping__reply__ctx__s_1aca4cb6275c9b7a7a7fcd0d6b26ace36d" compoundref="inst__internal_8h" startline="91">ping_reply_ctx_s::pWorst</references>
        <references refid="structnet__msg__s_1a5ac6b192df372f84048b86d166a4424a" compoundref="proto_8h" startline="172">net_msg_s::u8Rssi</references>
        <references refid="structping__reply__ctx__s_1acedd4eeb9c07cbe67855f15231b0e945" compoundref="inst__internal_8h" startline="92">ping_reply_ctx_s::pBest</references>
        <references refid="structping__reply__list__s_1a7f4e0e7af80aa33c61cd19e7cc4285e3" compoundref="inst__internal_8h" startline="78">ping_reply_list_s::pNext</references>
        <references refid="structping__reply__list__s_1a197ec56434ab16d8eceee0be76bf32d9" compoundref="inst__internal_8h" startline="80">ping_reply_list_s::u32RecvEpoch</references>
        <references refid="structping__reply__list__s_1a070b16f4b7baa9e4f18c52e96546206e" compoundref="inst__internal_8h" startline="81">ping_reply_list_s::u32PongEpoch</references>
        <references refid="structnet__msg__s_1a043145383f69aba81e45ac8582d5e5de" compoundref="proto_8h" startline="168">net_msg_s::u32Epoch</references>
        <references refid="structping__reply__list__s_1abc7cb73f341cdfebd8c510f35245de4e" compoundref="inst__internal_8h" startline="82">ping_reply_list_s::i16PongFreqOff</references>
        <references refid="structnet__msg__s_1a176f722127cf553cef8e45411e862562" compoundref="proto_8h" startline="176">net_msg_s::i16TxFreqOffset</references>
      </memberdef>
      <memberdef kind="function" id="group__wize__inst__layer_1ga15d215ac56ac9e3c42bf73946e22eb04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t InstInt_End</definition>
        <argsstring>(struct ping_reply_ctx_s *ping_reply_ctx)</argsstring>
        <name>InstInt_End</name>
        <param>
          <type>struct <ref refid="structping__reply__ctx__s" kindref="compound">ping_reply_ctx_s</ref> *</type>
          <declname>ping_reply_ctx</declname>
        </param>
        <briefdescription>
<para>This function terminate the ping_reply (aka. write ping_reply values into the parameters table). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">ping_reply_ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer on the current context</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>: no pong received </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>: at least one pong has been received </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/WizeCore/app/src/internal/inst_internal.c" line="225" column="9" bodyfile="/home/nono/OpenWize/sources/WizeCore/app/src/internal/inst_internal.c" bodystart="225" bodyend="266" declfile="/home/nono/OpenWize/sources/WizeCore/app/include/internal/inst_internal.h" declline="99" declcolumn="9"/>
        <references refid="structping__reply__ctx__s_1aca4cb6275c9b7a7a7fcd0d6b26ace36d" compoundref="inst__internal_8h" startline="91">ping_reply_ctx_s::pWorst</references>
        <references refid="structping__reply__ctx__s_1ac422924292ca1e4dd9292a2b75c30f9d" compoundref="inst__internal_8h" startline="94">ping_reply_ctx_s::u8NbPong</references>
        <references refid="structping__reply__ctx__s_1acedd4eeb9c07cbe67855f15231b0e945" compoundref="inst__internal_8h" startline="92">ping_reply_ctx_s::pBest</references>
        <references refid="structping__reply__list__s_1a7d460bf74d062bca5f3aa0d458f5acc8" compoundref="inst__internal_8h" startline="79">ping_reply_list_s::xPingReply</references>
        <references refid="structping__reply__ctx__s_1a1339db20594a821eaac614b594a58ee5" compoundref="inst__internal_8h" startline="95">ping_reply_ctx_s::sPingReplyConfig</references>
        <references refid="structping__reply__config__s_1abc0bfc62af4eda7d9bc8463a8ca1e4cc" compoundref="inst__internal_8h" startline="71">ping_reply_config_s::AutoAdj_Rssi</references>
        <references refid="structping__reply__config__s_1aa2e9027f392ccf8095fb54af84d43e6a" compoundref="inst__internal_8h" startline="67">ping_reply_config_s::AutoClk</references>
        <references refid="structping__reply__list__s_1a197ec56434ab16d8eceee0be76bf32d9" compoundref="inst__internal_8h" startline="80">ping_reply_list_s::u32RecvEpoch</references>
        <references refid="structping__reply__ctx__s_1ad3bf343c5d587431b2f235a5049564f7" compoundref="inst__internal_8h" startline="93">ping_reply_ctx_s::u32PingEpoch</references>
        <references refid="structping__reply__list__s_1a070b16f4b7baa9e4f18c52e96546206e" compoundref="inst__internal_8h" startline="81">ping_reply_list_s::u32PongEpoch</references>
        <references refid="group__parameters_1gaa6884ee37e011e23391af79b6a6cb6f7" compoundref="parameters_8c" startline="411" endline="425">Param_Access</references>
        <references refid="group__parameters_1gga9c642374fbdaae99ed43e1fe43318ac0aa16f6a91fd03bfe0af60b37f655eaff8" compoundref="parameters__lan__ids_8h" startline="66">CLOCK_CURRENT_EPOC</references>
        <references refid="structping__reply__config__s_1a3a4d77ba7cdd097f48780f2a1c731b62" compoundref="inst__internal_8h" startline="68">ping_reply_config_s::AutoFreq</references>
        <references refid="structping__reply__list__s_1abc7cb73f341cdfebd8c510f35245de4e" compoundref="inst__internal_8h" startline="82">ping_reply_list_s::i16PongFreqOff</references>
        <references refid="group__parameters_1gga9c642374fbdaae99ed43e1fe43318ac0ac544786fa1711bf15c7807f9fc6425a6" compoundref="parameters__lan__ids_8h" startline="59">TX_FREQ_OFFSET</references>
        <references refid="group__parameters_1gga9c642374fbdaae99ed43e1fe43318ac0abb1365e19169300db76145b834ce945a" compoundref="parameters__lan__ids_8h" startline="78">PING_REPLY1</references>
        <references refid="structping__reply__list__s_1a7f4e0e7af80aa33c61cd19e7cc4285e3" compoundref="inst__internal_8h" startline="78">ping_reply_list_s::pNext</references>
        <references refid="group__parameters_1gga9c642374fbdaae99ed43e1fe43318ac0ac47f4a3a34b8f5d6a73dc65d33ac4518" compoundref="parameters__lan__ids_8h" startline="76">PING_LAST_EPOCH</references>
        <references refid="group__parameters_1gga9c642374fbdaae99ed43e1fe43318ac0a6e77bb526054adb3227167be3c6b4151" compoundref="parameters__lan__ids_8h" startline="77">PING_NBFOUND</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This file implement the functions to treat the install L7 content. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para>2019, GRDF, Inc. All rights reserved.</para>
</simplesect>
Redistribution and use in source and binary forms, with or without modification, are permitted (subject to the limitations in the disclaimer below) provided that the following conditions are met:<itemizedlist>
<listitem><para>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</para>
</listitem><listitem><para>Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</para>
</listitem><listitem><para>Neither the name of GRDF, Inc. nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="par"><title>Revision history</title><para></para>
</simplesect>
<simplesect kind="par"><title>1.0.0 : 2020/10/11[GBI]</title><para>Initial version </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="36"><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="inst__internal_8h" kindref="compound">inst_internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="parameters_8h" kindref="compound">parameters.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="parameters__lan__ids_8h" kindref="compound">parameters_lan_ids.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>Note<sp/>:<sp/>The<sp/>ping_reply_list_t<sp/>is<sp/>a<sp/>linked<sp/>list<sp/>organization<sp/>as<sp/>follow<sp/>:</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>___</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>pWorst<sp/><sp/><sp/>]-----&gt;|<sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|_<sp/>_|&lt;--</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNext<sp/>_v_<sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>|<sp/><sp/>|</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|___|<sp/><sp/>|</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNext<sp/><sp/>v<sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNext<sp/>_v_<sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>|<sp/><sp/>|</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|___|<sp/><sp/>|</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNext<sp/>_v_<sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/>pBest<sp/><sp/><sp/><sp/><sp/>]----&gt;|<sp/><sp/><sp/>|<sp/><sp/>|</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|___|<sp/><sp/>|</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNext<sp/><sp/>|____|</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/>-<sp/>It<sp/>can<sp/>accept<sp/>at<sp/>most<sp/>&quot;NB_PING_REPLPY&quot;<sp/>pong<sp/>values</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/>-<sp/>Pointer<sp/>&quot;pWorst&quot;<sp/>and<sp/>&quot;pBest&quot;<sp/>gives<sp/>respectively<sp/>the<sp/>worst<sp/>and<sp/>best<sp/>pong<sp/>in<sp/>term<sp/>of<sp/>received<sp/>RSSI</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*<sp/>-<sp/>If<sp/>the<sp/>couple<sp/>(Gateway,<sp/>MLAN<sp/>id)<sp/>is<sp/>already<sp/>in<sp/>the<sp/>list,<sp/>this<sp/>pong<sp/>is<sp/>discarded</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="group__wize__inst__layer_1ga893acfa844d4a7ba1f43c27adbe219e7" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__wize__inst__layer_1ga893acfa844d4a7ba1f43c27adbe219e7" kindref="member">InstInt_Init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structping__reply__ctx__s" kindref="compound">ping_reply_ctx_s</ref><sp/>*ping_reply_ctx,<sp/><ref refid="structnet__msg__s" kindref="compound">net_msg_t</ref><sp/>*pNetMsg)</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>idx;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structinst__ping__t" kindref="compound">inst_ping_t</ref><sp/>*pInstPing<sp/>=<sp/>(<ref refid="structinst__ping__t" kindref="compound">inst_ping_t</ref>*)pNetMsg-&gt;<ref refid="structnet__msg__s_1afe7bd3b4d167a78b1320114b9720c1a2" kindref="member">pData</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>ping_reply_ctx-&gt;<ref refid="structping__reply__ctx__s_1ac422924292ca1e4dd9292a2b75c30f9d" kindref="member">u8NbPong</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>first<sp/>in<sp/>table<sp/>as<sp/>the<sp/>&quot;best&quot;<sp/>one<sp/>(arbitrary)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>ping_reply_ctx-&gt;<ref refid="structping__reply__ctx__s_1acedd4eeb9c07cbe67855f15231b0e945" kindref="member">pBest</ref><sp/>=<sp/>&amp;(ping_reply_ctx-&gt;<ref refid="structping__reply__ctx__s_1a506cd34a650b3606aed79ca9c388e7bb" kindref="member">aPingReplyList</ref>[0]);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>last<sp/>in<sp/>table<sp/>as<sp/>the<sp/>&quot;worst&quot;<sp/>one<sp/>(arbitrary)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>ping_reply_ctx-&gt;<ref refid="structping__reply__ctx__s_1aca4cb6275c9b7a7a7fcd0d6b26ace36d" kindref="member">pWorst</ref><sp/>=<sp/>&amp;(ping_reply_ctx-&gt;<ref refid="structping__reply__ctx__s_1a506cd34a650b3606aed79ca9c388e7bb" kindref="member">aPingReplyList</ref>[NB_PING_REPLPY-1]);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>link<sp/>both</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>ping_reply_ctx-&gt;<ref refid="structping__reply__ctx__s_1acedd4eeb9c07cbe67855f15231b0e945" kindref="member">pBest</ref>-&gt;<ref refid="structping__reply__list__s_1a7f4e0e7af80aa33c61cd19e7cc4285e3" kindref="member">pNext</ref><sp/>=<sp/>ping_reply_ctx-&gt;<ref refid="structping__reply__ctx__s_1aca4cb6275c9b7a7a7fcd0d6b26ace36d" kindref="member">pWorst</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>link<sp/>and<sp/>initialize<sp/>internal<sp/>ones</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(idx<sp/>=<sp/>0;<sp/>idx<sp/>&lt;<sp/><sp/>NB_PING_REPLPY;<sp/>idx++)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>content<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;(ping_reply_ctx-&gt;<ref refid="structping__reply__ctx__s_1a506cd34a650b3606aed79ca9c388e7bb" kindref="member">aPingReplyList</ref>[idx].<ref refid="structping__reply__list__s_1a7d460bf74d062bca5f3aa0d458f5acc8" kindref="member">xPingReply</ref>),<sp/>0,<sp/>7);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>all<sp/>to<sp/>the<sp/>&quot;worst&quot;<sp/>value<sp/>(0<sp/>represent<sp/>the<sp/>worst<sp/>rssi<sp/>-147.5<sp/>dBm<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ping_reply_ctx-&gt;<ref refid="structping__reply__ctx__s_1a506cd34a650b3606aed79ca9c388e7bb" kindref="member">aPingReplyList</ref>[idx].<ref refid="structping__reply__list__s_1a7d460bf74d062bca5f3aa0d458f5acc8" kindref="member">xPingReply</ref>.L7RssiUpstream<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ping_reply_ctx-&gt;<ref refid="structping__reply__ctx__s_1a506cd34a650b3606aed79ca9c388e7bb" kindref="member">aPingReplyList</ref>[idx].<ref refid="structping__reply__list__s_1a7d460bf74d062bca5f3aa0d458f5acc8" kindref="member">xPingReply</ref>.L7RssiDownstream<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ping_reply_ctx-&gt;<ref refid="structping__reply__ctx__s_1a506cd34a650b3606aed79ca9c388e7bb" kindref="member">aPingReplyList</ref>[idx].<ref refid="structping__reply__list__s_1a197ec56434ab16d8eceee0be76bf32d9" kindref="member">u32RecvEpoch</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ping_reply_ctx-&gt;<ref refid="structping__reply__ctx__s_1a506cd34a650b3606aed79ca9c388e7bb" kindref="member">aPingReplyList</ref>[idx].<ref refid="structping__reply__list__s_1a070b16f4b7baa9e4f18c52e96546206e" kindref="member">u32PongEpoch</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ping_reply_ctx-&gt;<ref refid="structping__reply__ctx__s_1a506cd34a650b3606aed79ca9c388e7bb" kindref="member">aPingReplyList</ref>[idx].<ref refid="structping__reply__list__s_1abc7cb73f341cdfebd8c510f35245de4e" kindref="member">i16PongFreqOff</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>idx)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ping_reply_ctx-&gt;<ref refid="structping__reply__ctx__s_1a506cd34a650b3606aed79ca9c388e7bb" kindref="member">aPingReplyList</ref>[idx].<ref refid="structping__reply__list__s_1a7f4e0e7af80aa33c61cd19e7cc4285e3" kindref="member">pNext</ref><sp/>=<sp/>&amp;(ping_reply_ctx-&gt;<ref refid="structping__reply__ctx__s_1a506cd34a650b3606aed79ca9c388e7bb" kindref="member">aPingReplyList</ref>[idx-1]);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>prepare<sp/>the<sp/>ping<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Param_Access(RF_UPLINK_CHANNEL,<sp/>(uint8_t*)&amp;(pInstPing-&gt;L7DownChannel),<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Param_Access(RF_UPLINK_MOD,<sp/>(uint8_t*)&amp;(pInstPing-&gt;L7DownMod),<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__parameters_1gaa6884ee37e011e23391af79b6a6cb6f7" kindref="member">Param_Access</ref>(<ref refid="group__parameters_1gga9c642374fbdaae99ed43e1fe43318ac0a92d7ed82d7e079cbeddb40a901a17c67" kindref="member">RF_DOWNLINK_CHANNEL</ref>,<sp/>(uint8_t*)&amp;(pInstPing-&gt;L7DownChannel),<sp/>0);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__parameters_1gaa6884ee37e011e23391af79b6a6cb6f7" kindref="member">Param_Access</ref>(<ref refid="group__parameters_1gga9c642374fbdaae99ed43e1fe43318ac0a0356d0b6740da1e87357fa61c9642206" kindref="member">RF_DOWNLINK_MOD</ref>,<sp/>(uint8_t*)&amp;(pInstPing-&gt;L7DownMod),<sp/>0);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__parameters_1gaa6884ee37e011e23391af79b6a6cb6f7" kindref="member">Param_Access</ref>(<ref refid="group__parameters_1gga9c642374fbdaae99ed43e1fe43318ac0ab182a57062f656fbe03d7f87e18ff186" kindref="member">PING_RX_DELAY</ref>,<sp/>(uint8_t*)&amp;(pInstPing-&gt;L7PingRxDelay),<sp/>0);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__parameters_1gaa6884ee37e011e23391af79b6a6cb6f7" kindref="member">Param_Access</ref>(<ref refid="group__parameters_1gga9c642374fbdaae99ed43e1fe43318ac0a3ce5f49938b37554e99a28ffc72c33ef" kindref="member">PING_RX_LENGTH</ref>,<sp/>(uint8_t*)&amp;(pInstPing-&gt;L7PingRxLength),<sp/>0);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>pNetMsg-&gt;<ref refid="structnet__msg__s_1a40f5980da2c93845e841e85a02d221e6" kindref="member">u8Size</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>pNetMsg-&gt;<ref refid="structnet__msg__s_1a742adf101885837a2bb1310790b00b05" kindref="member">u16Id</ref>++;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>pNetMsg-&gt;<ref refid="structnet__msg__s_1abe67e8bc4bda4a76780b7fc53873c150" kindref="member">u8KeyId</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>pNetMsg-&gt;<ref refid="structnet__msg__s_1a126eb90bceff21320fd2f0c63027430b" kindref="member">u8Type</ref><sp/>=<sp/><ref refid="group__wize__proto_1gga790b42ad60fd4ed13797deb456010723a9377b7d549cf79015cf1007fa5939962" kindref="member">APP_INSTALL</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>time_t<sp/>t;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>time(&amp;t);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>ping_reply_ctx-&gt;<ref refid="structping__reply__ctx__s_1ad3bf343c5d587431b2f235a5049564f7" kindref="member">u32PingEpoch</ref><sp/>=<sp/>t<sp/>-<sp/>EPOCH_UNIX_TO_OURS;</highlight><highlight class="comment">//<sp/>TODO<sp/>:<sp/>time<sp/>take<sp/>stack<sp/>but<sp/>doesn&apos;t<sp/>release<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="group__wize__inst__layer_1ga1e06e51e59c219852463fd29876e45bb" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__wize__inst__layer_1ga1e06e51e59c219852463fd29876e45bb" kindref="member">InstInt_Add</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structping__reply__ctx__s" kindref="compound">ping_reply_ctx_s</ref><sp/>*ping_reply_ctx,<sp/><ref refid="structnet__msg__s" kindref="compound">net_msg_t</ref><sp/>*pNetMsg)</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>warning<sp/>RSSI<sp/>=&gt;<sp/>0<sp/>:<sp/>best;<sp/>255<sp/>:<sp/>worst</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>idx;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>time_t<sp/>t;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structping__reply__list__s" kindref="compound">ping_reply_list_t</ref><sp/>*pCurrent;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structping__reply__list__s" kindref="compound">ping_reply_list_t</ref><sp/>*pNew;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>increment<sp/>the<sp/>number<sp/>of<sp/>received<sp/>pong</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ping_reply_ctx-&gt;<ref refid="structping__reply__ctx__s_1ac422924292ca1e4dd9292a2b75c30f9d" kindref="member">u8NbPong</ref><sp/>&lt;<sp/>255)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ping_reply_ctx-&gt;<ref refid="structping__reply__ctx__s_1ac422924292ca1e4dd9292a2b75c30f9d" kindref="member">u8NbPong</ref>++;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>couple<sp/>concentrator<sp/>ID<sp/>-<sp/>MLAN<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(idx<sp/>=<sp/>0;<sp/>idx<sp/>&lt;<sp/>NB_PING_REPLPY;<sp/>idx++)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>memcmp(<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)&amp;(ping_reply_ctx-&gt;<ref refid="structping__reply__ctx__s_1a506cd34a650b3606aed79ca9c388e7bb" kindref="member">aPingReplyList</ref>[idx].<ref refid="structping__reply__list__s_1a7d460bf74d062bca5f3aa0d458f5acc8" kindref="member">xPingReply</ref>),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(pNetMsg-&gt;<ref refid="structnet__msg__s_1afe7bd3b4d167a78b1320114b9720c1a2" kindref="member">pData</ref>),<sp/>7)<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>couple<sp/>Concentrator,MLAN<sp/>is<sp/>already<sp/>in<sp/>the<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...should<sp/>never<sp/>happened<sp/>:<sp/>1<sp/>pong<sp/>per<sp/>K-MLAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>Current<sp/>as<sp/>the<sp/>worst</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>pCurrent<sp/>=<sp/>ping_reply_ctx-&gt;<ref refid="structping__reply__ctx__s_1aca4cb6275c9b7a7a7fcd0d6b26ace36d" kindref="member">pWorst</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>we<sp/>must<sp/>drop<sp/>the<sp/>new<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNetMsg-&gt;<ref refid="structnet__msg__s_1a5ac6b192df372f84048b86d166a4424a" kindref="member">u8Rssi</ref><sp/>&lt;<sp/>pCurrent-&gt;<ref refid="structping__reply__list__s_1a7d460bf74d062bca5f3aa0d458f5acc8" kindref="member">xPingReply</ref>.L7RssiDownstream)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>new<sp/>entry<sp/>RSSI<sp/>is<sp/>worst<sp/>than<sp/>worst,<sp/>so<sp/>drop<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>the<sp/>right<sp/>&quot;place/position&quot;<sp/>to<sp/>insert<sp/>the<sp/>new<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pCurrent<sp/>!=<sp/>ping_reply_ctx-&gt;<ref refid="structping__reply__ctx__s_1acedd4eeb9c07cbe67855f15231b0e945" kindref="member">pBest</ref>)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNetMsg-&gt;<ref refid="structnet__msg__s_1a5ac6b192df372f84048b86d166a4424a" kindref="member">u8Rssi</ref><sp/>&gt;=<sp/>pCurrent-&gt;<ref refid="structping__reply__list__s_1a7f4e0e7af80aa33c61cd19e7cc4285e3" kindref="member">pNext</ref>-&gt;<ref refid="structping__reply__list__s_1a7d460bf74d062bca5f3aa0d458f5acc8" kindref="member">xPingReply</ref>.L7RssiDownstream)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>go<sp/>to<sp/>the<sp/>next</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCurrent<sp/>=<sp/>pCurrent-&gt;<ref refid="structping__reply__list__s_1a7f4e0e7af80aa33c61cd19e7cc4285e3" kindref="member">pNext</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>pNetMsg-&gt;u8Rssi<sp/>&gt;<sp/>pCurrent-&gt;pNext-&gt;xPingReply.L7RssiDownstream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>prepare<sp/>to<sp/>take<sp/>the<sp/>container<sp/>of<sp/>the<sp/>worst<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>pNew<sp/>=<sp/>ping_reply_ctx-&gt;<ref refid="structping__reply__ctx__s_1aca4cb6275c9b7a7a7fcd0d6b26ace36d" kindref="member">pWorst</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>replace<sp/>the<sp/>&quot;worst&quot;<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>ping_reply_ctx-&gt;<ref refid="structping__reply__ctx__s_1acedd4eeb9c07cbe67855f15231b0e945" kindref="member">pBest</ref>-&gt;<ref refid="structping__reply__list__s_1a7f4e0e7af80aa33c61cd19e7cc4285e3" kindref="member">pNext</ref><sp/>=<sp/>ping_reply_ctx-&gt;<ref refid="structping__reply__ctx__s_1aca4cb6275c9b7a7a7fcd0d6b26ace36d" kindref="member">pWorst</ref>-&gt;<ref refid="structping__reply__list__s_1a7f4e0e7af80aa33c61cd19e7cc4285e3" kindref="member">pNext</ref>;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>ping_reply_ctx-&gt;<ref refid="structping__reply__ctx__s_1aca4cb6275c9b7a7a7fcd0d6b26ace36d" kindref="member">pWorst</ref><sp/>=<sp/>ping_reply_ctx-&gt;<ref refid="structping__reply__ctx__s_1acedd4eeb9c07cbe67855f15231b0e945" kindref="member">pBest</ref>-&gt;<ref refid="structping__reply__list__s_1a7f4e0e7af80aa33c61cd19e7cc4285e3" kindref="member">pNext</ref>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>the<sp/>new<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;(pNew-&gt;<ref refid="structping__reply__list__s_1a7d460bf74d062bca5f3aa0d458f5acc8" kindref="member">xPingReply</ref>),<sp/>pNetMsg-&gt;<ref refid="structnet__msg__s_1afe7bd3b4d167a78b1320114b9720c1a2" kindref="member">pData</ref>,<sp/>8);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>pNew-&gt;<ref refid="structping__reply__list__s_1a7d460bf74d062bca5f3aa0d458f5acc8" kindref="member">xPingReply</ref>.L7RssiDownstream<sp/>=<sp/>pNetMsg-&gt;<ref refid="structnet__msg__s_1a5ac6b192df372f84048b86d166a4424a" kindref="member">u8Rssi</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>time(&amp;t);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>pNew-&gt;<ref refid="structping__reply__list__s_1a197ec56434ab16d8eceee0be76bf32d9" kindref="member">u32RecvEpoch</ref><sp/>=<sp/>t<sp/>-<sp/>EPOCH_UNIX_TO_OURS;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>pNew-&gt;<ref refid="structping__reply__list__s_1a070b16f4b7baa9e4f18c52e96546206e" kindref="member">u32PongEpoch</ref><sp/>=<sp/>pNetMsg-&gt;<ref refid="structnet__msg__s_1a043145383f69aba81e45ac8582d5e5de" kindref="member">u32Epoch</ref>;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>pNew-&gt;<ref refid="structping__reply__list__s_1abc7cb73f341cdfebd8c510f35245de4e" kindref="member">i16PongFreqOff</ref><sp/>=<sp/>pNetMsg-&gt;<ref refid="structnet__msg__s_1a176f722127cf553cef8e45411e862562" kindref="member">i16TxFreqOffset</ref>;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>insert<sp/>between<sp/>pCurrent<sp/>and<sp/>pCurrent-&gt;pNext</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>pNew-&gt;<ref refid="structping__reply__list__s_1a7f4e0e7af80aa33c61cd19e7cc4285e3" kindref="member">pNext</ref><sp/>=<sp/>pCurrent-&gt;<ref refid="structping__reply__list__s_1a7f4e0e7af80aa33c61cd19e7cc4285e3" kindref="member">pNext</ref>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>pCurrent-&gt;<ref refid="structping__reply__list__s_1a7f4e0e7af80aa33c61cd19e7cc4285e3" kindref="member">pNext</ref><sp/>=<sp/>pNew;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>it<sp/>is<sp/>the<sp/>&quot;new<sp/>best&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCurrent<sp/>==<sp/>ping_reply_ctx-&gt;<ref refid="structping__reply__ctx__s_1acedd4eeb9c07cbe67855f15231b0e945" kindref="member">pBest</ref>)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ping_reply_ctx-&gt;<ref refid="structping__reply__ctx__s_1acedd4eeb9c07cbe67855f15231b0e945" kindref="member">pBest</ref><sp/>=<sp/>pNew;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="group__wize__inst__layer_1ga15d215ac56ac9e3c42bf73946e22eb04" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="group__wize__inst__layer_1ga15d215ac56ac9e3c42bf73946e22eb04" kindref="member">InstInt_End</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structping__reply__ctx__s" kindref="compound">ping_reply_ctx_s</ref><sp/>*ping_reply_ctx)</highlight></codeline>
<codeline lineno="226"><highlight class="normal">{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/>idx;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structping__reply__list__s" kindref="compound">ping_reply_list_t</ref><sp/>*pCurrent<sp/>=<sp/>ping_reply_ctx-&gt;<ref refid="structping__reply__ctx__s_1aca4cb6275c9b7a7a7fcd0d6b26ace36d" kindref="member">pWorst</ref>;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ping_reply_ctx-&gt;<ref refid="structping__reply__ctx__s_1ac422924292ca1e4dd9292a2b75c30f9d" kindref="member">u8NbPong</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>tmp;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>diff_time;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ping_reply_ctx-&gt;<ref refid="structping__reply__ctx__s_1acedd4eeb9c07cbe67855f15231b0e945" kindref="member">pBest</ref>-&gt;<ref refid="structping__reply__list__s_1a7d460bf74d062bca5f3aa0d458f5acc8" kindref="member">xPingReply</ref>.L7RssiDownstream<sp/>&gt;<sp/>ping_reply_ctx-&gt;<ref refid="structping__reply__ctx__s_1a1339db20594a821eaac614b594a58ee5" kindref="member">sPingReplyConfig</ref>.<ref refid="structping__reply__config__s_1abc0bfc62af4eda7d9bc8463a8ca1e4cc" kindref="member">AutoAdj_Rssi</ref>)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ping_reply_ctx-&gt;<ref refid="structping__reply__ctx__s_1a1339db20594a821eaac614b594a58ee5" kindref="member">sPingReplyConfig</ref>.<ref refid="structping__reply__config__s_1aa2e9027f392ccf8095fb54af84d43e6a" kindref="member">AutoClk</ref>)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Adjust<sp/>the<sp/>Last<sp/>Install<sp/>request<sp/>epoch<sp/>to<sp/>the<sp/>new<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diff_time<sp/>=<sp/>ping_reply_ctx-&gt;<ref refid="structping__reply__ctx__s_1acedd4eeb9c07cbe67855f15231b0e945" kindref="member">pBest</ref>-&gt;<ref refid="structping__reply__list__s_1a197ec56434ab16d8eceee0be76bf32d9" kindref="member">u32RecvEpoch</ref><sp/>-<sp/>ping_reply_ctx-&gt;<ref refid="structping__reply__ctx__s_1ad3bf343c5d587431b2f235a5049564f7" kindref="member">u32PingEpoch</ref>;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ping_reply_ctx-&gt;<ref refid="structping__reply__ctx__s_1ad3bf343c5d587431b2f235a5049564f7" kindref="member">u32PingEpoch</ref><sp/>=<sp/>ping_reply_ctx-&gt;<ref refid="structping__reply__ctx__s_1acedd4eeb9c07cbe67855f15231b0e945" kindref="member">pBest</ref>-&gt;<ref refid="structping__reply__list__s_1a070b16f4b7baa9e4f18c52e96546206e" kindref="member">u32PongEpoch</ref><sp/>-<sp/>diff_time;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>the<sp/>CLOCK_CURRENT_EPOC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>__htonl(ping_reply_ctx-&gt;<ref refid="structping__reply__ctx__s_1acedd4eeb9c07cbe67855f15231b0e945" kindref="member">pBest</ref>-&gt;<ref refid="structping__reply__list__s_1a070b16f4b7baa9e4f18c52e96546206e" kindref="member">u32PongEpoch</ref>);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__parameters_1gaa6884ee37e011e23391af79b6a6cb6f7" kindref="member">Param_Access</ref>(<ref refid="group__parameters_1gga9c642374fbdaae99ed43e1fe43318ac0aa16f6a91fd03bfe0af60b37f655eaff8" kindref="member">CLOCK_CURRENT_EPOC</ref>,<sp/>(uint8_t*)&amp;(<sp/>tmp<sp/>),<sp/>1);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ping_reply_ctx-&gt;<ref refid="structping__reply__ctx__s_1a1339db20594a821eaac614b594a58ee5" kindref="member">sPingReplyConfig</ref>.<ref refid="structping__reply__config__s_1a3a4d77ba7cdd097f48780f2a1c731b62" kindref="member">AutoFreq</ref>)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>(uint32_t)__htons(ping_reply_ctx-&gt;<ref refid="structping__reply__ctx__s_1acedd4eeb9c07cbe67855f15231b0e945" kindref="member">pBest</ref>-&gt;<ref refid="structping__reply__list__s_1abc7cb73f341cdfebd8c510f35245de4e" kindref="member">i16PongFreqOff</ref>);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__parameters_1gaa6884ee37e011e23391af79b6a6cb6f7" kindref="member">Param_Access</ref>(<ref refid="group__parameters_1gga9c642374fbdaae99ed43e1fe43318ac0ac544786fa1711bf15c7807f9fc6425a6" kindref="member">TX_FREQ_OFFSET</ref>,<sp/>(uint8_t*)&amp;(<sp/>tmp<sp/>),<sp/>1);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(idx<sp/>=<sp/>(NB_PING_REPLPY-1);<sp/>idx<sp/>&gt;=<sp/>0;<sp/>idx--)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__parameters_1gaa6884ee37e011e23391af79b6a6cb6f7" kindref="member">Param_Access</ref>(<ref refid="group__parameters_1gga9c642374fbdaae99ed43e1fe43318ac0abb1365e19169300db76145b834ce945a" kindref="member">PING_REPLY1</ref><sp/>+<sp/>idx,<sp/>(uint8_t*)&amp;(pCurrent-&gt;<ref refid="structping__reply__list__s_1a7d460bf74d062bca5f3aa0d458f5acc8" kindref="member">xPingReply</ref>),<sp/>1);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCurrent<sp/>=<sp/>pCurrent-&gt;<ref refid="structping__reply__list__s_1a7f4e0e7af80aa33c61cd19e7cc4285e3" kindref="member">pNext</ref>;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>__htonl(ping_reply_ctx-&gt;<ref refid="structping__reply__ctx__s_1ad3bf343c5d587431b2f235a5049564f7" kindref="member">u32PingEpoch</ref>);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__parameters_1gaa6884ee37e011e23391af79b6a6cb6f7" kindref="member">Param_Access</ref>(<ref refid="group__parameters_1gga9c642374fbdaae99ed43e1fe43318ac0ac47f4a3a34b8f5d6a73dc65d33ac4518" kindref="member">PING_LAST_EPOCH</ref>,<sp/>(uint8_t*)&amp;(tmp),<sp/>1);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__parameters_1gaa6884ee37e011e23391af79b6a6cb6f7" kindref="member">Param_Access</ref>(<ref refid="group__parameters_1gga9c642374fbdaae99ed43e1fe43318ac0a6e77bb526054adb3227167be3c6b4151" kindref="member">PING_NBFOUND</ref>,<sp/>(uint8_t*)&amp;(ping_reply_ctx-&gt;<ref refid="structping__reply__ctx__s_1ac422924292ca1e4dd9292a2b75c30f9d" kindref="member">u8NbPong</ref>),<sp/>1);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/nono/OpenWize/sources/WizeCore/app/src/internal/inst_internal.c"/>
  </compounddef>
</doxygen>
