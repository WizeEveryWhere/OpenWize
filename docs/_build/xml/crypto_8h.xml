<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="crypto_8h" kind="file" language="C++">
    <compoundname>crypto.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includedby refid="adm__internal_8c" local="yes">/home/nono/OpenWize/sources/WizeCore/app/src/internal/adm_internal.c</includedby>
    <includedby refid="ses__dispatcher_8c" local="yes">/home/nono/OpenWize/sources/WizeCore/app/src/ses_dispatcher.c</includedby>
    <includedby refid="proto_8c" local="yes">/home/nono/OpenWize/sources/WizeCore/proto/src/proto.c</includedby>
    <includedby refid="key__priv_8h" local="yes">/home/nono/OpenWize/sources/Samples/Crypto/include/key_priv.h</includedby>
    <includedby refid="img__storage_8c" local="yes">/home/nono/OpenWize/sources/Samples/ImgStorage/src/img_storage.c</includedby>
    <includedby refid="app__entry_8h" local="yes">/home/nono/OpenWize/demo/Nucleo-L476/app/include/app_entry.h</includedby>
    <includedby refid="storage_8c" local="yes">/home/nono/OpenWize/demo/Nucleo-L476/app/src/storage.c</includedby>
    <includedby refid="sys__init_8c" local="yes">/home/nono/OpenWize/demo/Nucleo-L476/app/sys/sys_init.c</includedby>
    <incdepgraph>
      <node id="2">
        <label>stdint.h</label>
      </node>
      <node id="1">
        <label>/home/nono/OpenWize/sources/Samples/Crypto/include/crypto.h</label>
        <link refid="crypto_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="13">
        <label>/home/nono/OpenWize/demo/Nucleo-L476/app/sys/sys_init.c</label>
        <link refid="sys__init_8c"/>
      </node>
      <node id="3">
        <label>/home/nono/OpenWize/sources/WizeCore/app/src/ses_dispatcher.c</label>
        <link refid="ses__dispatcher_8c"/>
      </node>
      <node id="8">
        <label>/home/nono/OpenWize/sources/Samples/Crypto/src/key.c</label>
        <link refid="key_8c"/>
      </node>
      <node id="11">
        <label>/home/nono/OpenWize/demo/Nucleo-L476/app/include/app_entry.h</label>
        <link refid="app__entry_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/nono/OpenWize/sources/WizeCore/proto/src/proto.c</label>
        <link refid="proto_8c"/>
      </node>
      <node id="6">
        <label>/home/nono/OpenWize/sources/Samples/Crypto/src/confidentiality.c</label>
        <link refid="confidentiality_8c"/>
      </node>
      <node id="7">
        <label>/home/nono/OpenWize/sources/Samples/Crypto/src/integrity.c</label>
        <link refid="integrity_8c"/>
      </node>
      <node id="5">
        <label>/home/nono/OpenWize/sources/Samples/Crypto/include/key_priv.h</label>
        <link refid="key__priv_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>/home/nono/OpenWize/sources/Samples/ImgStorage/src/img_storage.c</label>
        <link refid="img__storage_8c"/>
      </node>
      <node id="12">
        <label>/home/nono/OpenWize/demo/Nucleo-L476/app/src/app_entry.c</label>
        <link refid="app__entry_8c"/>
      </node>
      <node id="2">
        <label>/home/nono/OpenWize/sources/WizeCore/app/src/internal/adm_internal.c</label>
        <link refid="adm__internal_8c"/>
      </node>
      <node id="1">
        <label>/home/nono/OpenWize/sources/Samples/Crypto/include/crypto.h</label>
        <link refid="crypto_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>/home/nono/OpenWize/demo/Nucleo-L476/app/src/storage.c</label>
        <link refid="storage_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__crypto_1gadbf672e4592d8a9cdcb4e3866fbc26e4" prot="public" static="no">
        <name>KEY_STORE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/Crypto/include/crypto.h" line="47" column="10" bodyfile="/home/nono/OpenWize/sources/Samples/Crypto/include/crypto.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__crypto_1ga189381496bdc6329d20d84cb8dd755e4" prot="public" static="no">
        <name>KEY_MAX_NB</name>
        <initializer>20</initializer>
        <briefdescription>
<para>Define the maximum number of key. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/Crypto/include/crypto.h" line="66" column="9" bodyfile="/home/nono/OpenWize/sources/Samples/Crypto/include/crypto.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__crypto_1ga537ea021d38b5a49fc0fce829134438b" prot="public" static="no">
        <name>KEY_NONE_ID</name>
        <initializer>0</initializer>
        <briefdescription>
<para>Define the key id for no encryption. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/Crypto/include/crypto.h" line="72" column="9" bodyfile="/home/nono/OpenWize/sources/Samples/Crypto/include/crypto.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__crypto_1ga34a3087269df4035dbaaf854ef20d9a2" prot="public" static="no">
        <name>KEY_ENC_MIN</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Define the first key id for the kenc key. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/Crypto/include/crypto.h" line="78" column="9" bodyfile="/home/nono/OpenWize/sources/Samples/Crypto/include/crypto.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__crypto_1ga0c8f3ab073964c8a891734d0444c95fd" prot="public" static="no">
        <name>KEY_ENC_MAX</name>
        <initializer>14</initializer>
        <briefdescription>
<para>Define the last key id for the kenc key. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/Crypto/include/crypto.h" line="84" column="9" bodyfile="/home/nono/OpenWize/sources/Samples/Crypto/include/crypto.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__crypto_1gafd8fe54632552c3967ba59667e6fa9ee" prot="public" static="no">
        <name>KEY_CHG_ID</name>
        <initializer>15</initializer>
        <briefdescription>
<para>Define the key id for the kchg key. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/Crypto/include/crypto.h" line="90" column="9" bodyfile="/home/nono/OpenWize/sources/Samples/Crypto/include/crypto.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__crypto_1gad3aed3bae39513f051f65131ccb0ab09" prot="public" static="no">
        <name>KEY_MOB_ID</name>
        <initializer>16</initializer>
        <briefdescription>
<para>Define the key id for the kmob key. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/Crypto/include/crypto.h" line="96" column="9" bodyfile="/home/nono/OpenWize/sources/Samples/Crypto/include/crypto.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__crypto_1gab76bbd9bd618178561644c64376be30b" prot="public" static="no">
        <name>KEY_MAC_ID</name>
        <initializer>17</initializer>
        <briefdescription>
<para>Define the key id for the kmac key. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/Crypto/include/crypto.h" line="102" column="9" bodyfile="/home/nono/OpenWize/sources/Samples/Crypto/include/crypto.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__crypto_1ga38635bd797d1a5a9eaa17b9167c02288" prot="public" static="no">
        <name>KEY_LOG_ID</name>
        <initializer>18</initializer>
        <briefdescription>
<para>Define the key id for the klog key. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/Crypto/include/crypto.h" line="108" column="9" bodyfile="/home/nono/OpenWize/sources/Samples/Crypto/include/crypto.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__crypto_1gaba880ecd29a19ea1bfe55d32bf0176c9" prot="public" static="no" strong="no">
        <type></type>
        <name>crypto_code_e</name>
        <enumvalue id="group__crypto_1ggaba880ecd29a19ea1bfe55d32bf0176c9a25cff552c7f5b5a4502b9e25cc0f9093" prot="public">
          <name>CRYPTO_KO</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>Crypto function failed. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__crypto_1ggaba880ecd29a19ea1bfe55d32bf0176c9a60a843bc26ee85510e68d53b85e52683" prot="public">
          <name>CRYPTO_OK</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Crypto function success. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__crypto_1ggaba880ecd29a19ea1bfe55d32bf0176c9a77c3cd579f2a2120039dc18a0958771a" prot="public">
          <name>CRYPTO_KID_UNK_ERR</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>The key id is unknown. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__crypto_1ggaba880ecd29a19ea1bfe55d32bf0176c9a0cb87f7d3f8ec289a92832dea4fdcda6" prot="public">
          <name>CRYPTO_INT_NULL_ERR</name>
          <initializer>= 4</initializer>
          <briefdescription>
<para>Error due to a NULL pointer. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Returned code from Crypto functions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/Crypto/include/crypto.h" line="53" column="14" bodyfile="/home/nono/OpenWize/sources/Samples/Crypto/include/crypto.h" bodystart="53" bodyend="58"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__crypto_1gaa323defb572bfa6496f11d714395ae3d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t Crypto_Encrypt</definition>
        <argsstring>(uint8_t *p_Out, uint8_t *p_In, uint8_t u8_Sz, uint8_t p_Ctr[CTR_SIZE], uint8_t u8_KeyId)</argsstring>
        <name>Crypto_Encrypt</name>
        <param>
          <type>uint8_t *</type>
          <declname>p_Out</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>p_In</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>u8_Sz</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>p_Ctr</declname>
          <array>[CTR_SIZE]</array>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>u8_KeyId</declname>
        </param>
        <briefdescription>
<para>Wrapper around <emphasis>crypt</emphasis> function. </para>
        </briefdescription>
        <detaileddescription>
<para>This function encrypt (with the AES128 in CTR mode) a given message.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">p_Out</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer on output buffer (Cipher text). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">p_In</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer on input buffer (Plain text). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">u8_Sz</parametername>
</parameternamelist>
<parameterdescription>
<para>Input buffer size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_Ctr</parametername>
</parameternamelist>
<parameterdescription>
<para>Counter buffer. Warning : it will be altered by this function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">u8_KeyId</parametername>
</parameternamelist>
<parameterdescription>
<para>The key id to use for encrypt </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>return</parametername>
</parameternamelist>
<parameterdescription>
<para>crypto_code_e::CRYPTO_OK (1) if everything is fine return crypto_code_e::CRYPTO_KO (0) if something goes wrong return crypto_code_e::CRYPTO_KID_UNK_ERR (2) id the key id is out of box return crypto_code_e::CRYPTO_INT_NULL_ERR (4) if one of the given pointer is NULL </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/Crypto/src/confidentiality.c" line="70" column="16" bodyfile="/home/nono/OpenWize/sources/Samples/Crypto/src/confidentiality.c" bodystart="70" bodyend="74" declfile="/home/nono/OpenWize/sources/Samples/Crypto/include/crypto.h" declline="152" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__crypto_1ga95cb4ca092b168f220d4bc0c5caae92f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t Crypto_Decrypt</definition>
        <argsstring>(uint8_t *p_Out, uint8_t *p_In, uint8_t u8_Sz, uint8_t p_Ctr[CTR_SIZE], uint8_t u8_KeyId)</argsstring>
        <name>Crypto_Decrypt</name>
        <param>
          <type>uint8_t *</type>
          <declname>p_Out</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>p_In</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>u8_Sz</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>p_Ctr</declname>
          <array>[CTR_SIZE]</array>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>u8_KeyId</declname>
        </param>
        <briefdescription>
<para>Wrapper around the <emphasis>crypt</emphasis> function. </para>
        </briefdescription>
        <detaileddescription>
<para>This function decrypt (with the AES128 in CTR mode) a given message.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">p_Out</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer on output buffer (Plain text). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">p_In</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer on input buffer (Cipher text). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">u8_Sz</parametername>
</parameternamelist>
<parameterdescription>
<para>Input buffer size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_Ctr</parametername>
</parameternamelist>
<parameterdescription>
<para>Counter buffer. Warning : it will be altered by this function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">u8_KeyId</parametername>
</parameternamelist>
<parameterdescription>
<para>The key id to use for decrypt </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>return</parametername>
</parameternamelist>
<parameterdescription>
<para>crypto_code_e::CRYPTO_OK (1) if everything is fine return crypto_code_e::CRYPTO_KO (0) if something goes wrong return crypto_code_e::CRYPTO_KID_UNK_ERR (2) id the key id is out of box return crypto_code_e::CRYPTO_INT_NULL_ERR (4) if one of the given pointer is NULL </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/Crypto/src/confidentiality.c" line="91" column="16" bodyfile="/home/nono/OpenWize/sources/Samples/Crypto/src/confidentiality.c" bodystart="91" bodyend="95" declfile="/home/nono/OpenWize/sources/Samples/Crypto/include/crypto.h" declline="155" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__crypto_1ga60e30604375785784f6dccb9a8903b2f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t Crypto_AES128_CMAC</definition>
        <argsstring>(uint8_t *p_Hash, uint8_t *p_Msg, uint8_t u8_Sz, uint8_t p_Ctr[CTR_SIZE], uint8_t u8_KeyId)</argsstring>
        <name>Crypto_AES128_CMAC</name>
        <param>
          <type>uint8_t *</type>
          <declname>p_Hash</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>p_Msg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>u8_Sz</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>p_Ctr</declname>
          <array>[CTR_SIZE]</array>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>u8_KeyId</declname>
        </param>
        <briefdescription>
<para>Wrapper around the <emphasis>AES128_CMAC</emphasis> function. </para>
        </briefdescription>
        <detaileddescription>
<para>This function compute the footprint (with the AES128 in CMAC mode) of a given message.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">p_Hash</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer on output buffer (footprint). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">p_Msg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer on input buffer (the message on which the footprint is computed) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">u8_Sz</parametername>
</parameternamelist>
<parameterdescription>
<para>Input buffer size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_Ctr</parametername>
</parameternamelist>
<parameterdescription>
<para>Counter buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">u8_KeyId</parametername>
</parameternamelist>
<parameterdescription>
<para>The key id to use for compute the footprint </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>return</parametername>
</parameternamelist>
<parameterdescription>
<para>crypto_code_e::CRYPTO_OK (1) if everything is fine return crypto_code_e::CRYPTO_KO (0) if something goes wrong return crypto_code_e::CRYPTO_KID_UNK_ERR (2) id the key id is out of box return crypto_code_e::CRYPTO_INT_NULL_ERR (4) if one of the given pointer is NULL </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/Crypto/src/integrity.c" line="69" column="16" bodyfile="/home/nono/OpenWize/sources/Samples/Crypto/src/integrity.c" bodystart="69" bodyend="73" declfile="/home/nono/OpenWize/sources/Samples/Crypto/include/crypto.h" declline="159" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__crypto_1ga14ac8fca562dab920a6f403d248021c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t Crypto_SHA256</definition>
        <argsstring>(uint8_t p_Sha256[SHA256_SIZE], uint8_t *p_Data, uint32_t u32_Sz)</argsstring>
        <name>Crypto_SHA256</name>
        <param>
          <type>uint8_t</type>
          <declname>p_Sha256</declname>
          <array>[SHA256_SIZE]</array>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>p_Data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>u32_Sz</declname>
        </param>
        <briefdescription>
<para>Wrapper around the <emphasis>SHA256</emphasis> function. </para>
        </briefdescription>
        <detaileddescription>
<para>This function compute the SHA256 of given buffer..</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_Sha256</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer on output buffer (sha256, 32 bytes). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p_Data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer on input buffer (the message on which the footprint is computed) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">u32_Sz</parametername>
</parameternamelist>
<parameterdescription>
<para>Input buffer size </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>return</parametername>
</parameternamelist>
<parameterdescription>
<para>crypto_code_e::CRYPTO_OK (1) if everything is fine return crypto_code_e::CRYPTO_KO (0) if something goes wrong return crypto_code_e::CRYPTO_INT_NULL_ERR (4) if one of the given pointer is NULL </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/Crypto/src/integrity.c" line="87" column="16" bodyfile="/home/nono/OpenWize/sources/Samples/Crypto/src/integrity.c" bodystart="87" bodyend="90" declfile="/home/nono/OpenWize/sources/Samples/Crypto/include/crypto.h" declline="162" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__crypto_1ga53fb35d3a1884f1c2fcea7ceb45b3b70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t Crypto_WriteKey</definition>
        <argsstring>(uint8_t p_Key[KEY_SIZE], uint8_t u8_KeyId)</argsstring>
        <name>Crypto_WriteKey</name>
        <param>
          <type>uint8_t</type>
          <declname>p_Key</declname>
          <array>[KEY_SIZE]</array>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>u8_KeyId</declname>
        </param>
        <briefdescription>
<para>This function set (write) a key at specified key id. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_Key</parametername>
</parameternamelist>
<parameterdescription>
<para>The given key to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">u8_KeyId</parametername>
</parameternamelist>
<parameterdescription>
<para>The key id to use.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>CRYPTO_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>(1) if everything is fine </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>CRYPTO_KID_UNK_ERR</parametername>
</parameternamelist>
<parameterdescription>
<para>(2) id the key id is out of box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/Crypto/src/key.c" line="99" column="9" bodyfile="/home/nono/OpenWize/sources/Samples/Crypto/src/key.c" bodystart="99" bodyend="102" declfile="/home/nono/OpenWize/sources/Samples/Crypto/include/crypto.h" declline="166" declcolumn="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This file expose the crypto API for integrity and confidentiality. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para>2019, GRDF, Inc. All rights reserved.</para>
</simplesect>
Redistribution and use in source and binary forms, with or without modification, are permitted (subject to the limitations in the disclaimer below) provided that the following conditions are met:<itemizedlist>
<listitem><para>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</para>
</listitem><listitem><para>Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</para>
</listitem><listitem><para>Neither the name of GRDF, Inc. nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="par"><title>Revision history</title><para></para>
</simplesect>
<simplesect kind="par"><title>1.0.0 : 2020/12/31[GBI]</title><para>Initial version </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="36"><highlight class="preprocessor">#ifndef<sp/>Crypto_CRYPTO_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Crypto_CRYPTO_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAS_KEY_STORE_IN_FLASH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>KEY_STORE<sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>KEY_STORE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="group__crypto_1gaba880ecd29a19ea1bfe55d32bf0176c9" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="54" refid="group__crypto_1ggaba880ecd29a19ea1bfe55d32bf0176c9a25cff552c7f5b5a4502b9e25cc0f9093" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__crypto_1ggaba880ecd29a19ea1bfe55d32bf0176c9a25cff552c7f5b5a4502b9e25cc0f9093" kindref="member">CRYPTO_KO</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55" refid="group__crypto_1ggaba880ecd29a19ea1bfe55d32bf0176c9a60a843bc26ee85510e68d53b85e52683" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__crypto_1ggaba880ecd29a19ea1bfe55d32bf0176c9a60a843bc26ee85510e68d53b85e52683" kindref="member">CRYPTO_OK</ref><sp/>=<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56" refid="group__crypto_1ggaba880ecd29a19ea1bfe55d32bf0176c9a77c3cd579f2a2120039dc18a0958771a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__crypto_1ggaba880ecd29a19ea1bfe55d32bf0176c9a77c3cd579f2a2120039dc18a0958771a" kindref="member">CRYPTO_KID_UNK_ERR</ref><sp/>=<sp/>2,<sp/><sp/></highlight></codeline>
<codeline lineno="57" refid="group__crypto_1ggaba880ecd29a19ea1bfe55d32bf0176c9a0cb87f7d3f8ec289a92832dea4fdcda6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__crypto_1ggaba880ecd29a19ea1bfe55d32bf0176c9a0cb87f7d3f8ec289a92832dea4fdcda6" kindref="member">CRYPTO_INT_NULL_ERR</ref><sp/>=<sp/>4,<sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal">}<ref refid="group__crypto_1gaba880ecd29a19ea1bfe55d32bf0176c9" kindref="member">crypto_code_e</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Keys<sp/>management</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="group__crypto_1ga189381496bdc6329d20d84cb8dd755e4" refkind="member"><highlight class="preprocessor">#define<sp/>KEY_MAX_NB<sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="group__crypto_1ga537ea021d38b5a49fc0fce829134438b" refkind="member"><highlight class="preprocessor">#define<sp/>KEY_NONE_ID<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="group__crypto_1ga34a3087269df4035dbaaf854ef20d9a2" refkind="member"><highlight class="preprocessor">#define<sp/>KEY_ENC_MIN<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="group__crypto_1ga0c8f3ab073964c8a891734d0444c95fd" refkind="member"><highlight class="preprocessor">#define<sp/>KEY_ENC_MAX<sp/>14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="group__crypto_1gafd8fe54632552c3967ba59667e6fa9ee" refkind="member"><highlight class="preprocessor">#define<sp/>KEY_CHG_ID<sp/>15</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="group__crypto_1gad3aed3bae39513f051f65131ccb0ab09" refkind="member"><highlight class="preprocessor">#define<sp/>KEY_MOB_ID<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="group__crypto_1gab76bbd9bd618178561644c64376be30b" refkind="member"><highlight class="preprocessor">#define<sp/>KEY_MAC_ID<sp/>17</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="group__crypto_1ga38635bd797d1a5a9eaa17b9167c02288" refkind="member"><highlight class="preprocessor">#define<sp/>KEY_LOG_ID<sp/>18</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="preprocessor">#define<sp/>KEY_TOTAL_BYTE_SIZE<sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="preprocessor">#define<sp/>KEY_USED_BYTE_SIZE<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="preprocessor">#define<sp/>KEY_SIZE<sp/>KEY_TOTAL_BYTE_SIZE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="preprocessor">#define<sp/>CTR_SIZE<sp/>KEY_USED_BYTE_SIZE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="preprocessor">#define<sp/>SHA256_SIZE<sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="comment">//<sp/>Data<sp/>confidentiality</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal">uint8_t<sp/><ref refid="group__crypto_1gaa323defb572bfa6496f11d714395ae3d" kindref="member">Crypto_Encrypt</ref>(uint8_t<sp/>*p_Out,<sp/>uint8_t<sp/>*p_In,<sp/>uint8_t<sp/>u8_Sz,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>p_Ctr[CTR_SIZE],<sp/>uint8_t<sp/>u8_KeyId);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal">uint8_t<sp/><ref refid="group__crypto_1ga95cb4ca092b168f220d4bc0c5caae92f" kindref="member">Crypto_Decrypt</ref>(uint8_t<sp/>*p_Out,<sp/>uint8_t<sp/>*p_In,<sp/>uint8_t<sp/>u8_Sz,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>p_Ctr[CTR_SIZE],<sp/>uint8_t<sp/>u8_KeyId);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Data<sp/>integrity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal">uint8_t<sp/><ref refid="group__crypto_1ga60e30604375785784f6dccb9a8903b2f" kindref="member">Crypto_AES128_CMAC</ref>(uint8_t<sp/>*p_Hash,<sp/>uint8_t<sp/>*p_Msg,<sp/>uint8_t<sp/>u8_Sz,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>p_Ctr[CTR_SIZE],<sp/>uint8_t<sp/>u8_KeyId);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal">uint8_t<sp/><ref refid="group__crypto_1ga14ac8fca562dab920a6f403d248021c8" kindref="member">Crypto_SHA256</ref>(uint8_t<sp/>p_Sha256[SHA256_SIZE],<sp/>uint8_t<sp/>*p_Data,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>u32_Sz);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Key<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal">uint8_t<sp/><ref refid="group__crypto_1ga53fb35d3a1884f1c2fcea7ceb45b3b70" kindref="member">Crypto_WriteKey</ref>(uint8_t<sp/>p_Key[KEY_SIZE],<sp/>uint8_t<sp/>u8_KeyId);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>Crypto_CRYPTO_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/nono/OpenWize/sources/Samples/Crypto/include/crypto.h"/>
  </compounddef>
</doxygen>
