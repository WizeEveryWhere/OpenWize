<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="utils__secure_8h" kind="file" language="C++">
    <compoundname>utils_secure.h</compoundname>
    <includes local="no">stddef.h</includes>
    <includedby refid="confidentiality_8c" local="yes">/home/nono/OpenWize/sources/Samples/Crypto/src/confidentiality.c</includedby>
    <includedby refid="integrity_8c" local="yes">/home/nono/OpenWize/sources/Samples/Crypto/src/integrity.c</includedby>
    <includedby refid="key_8c" local="yes">/home/nono/OpenWize/sources/Samples/Crypto/src/key.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>/home/nono/OpenWize/sources/Samples/Crypto/src/utils_secure.h</label>
        <link refid="utils__secure_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>/home/nono/OpenWize/sources/Samples/Crypto/src/utils_secure.h</label>
        <link refid="utils__secure_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/nono/OpenWize/sources/Samples/Crypto/src/key.c</label>
        <link refid="key_8c"/>
      </node>
      <node id="2">
        <label>/home/nono/OpenWize/sources/Samples/Crypto/src/confidentiality.c</label>
        <link refid="confidentiality_8c"/>
      </node>
      <node id="3">
        <label>/home/nono/OpenWize/sources/Samples/Crypto/src/integrity.c</label>
        <link refid="integrity_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__crypto_1ga35410547162bf6973941d8e6fb7773ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * secure_memcpy</definition>
        <argsstring>(void *__restrict __dest, const void *__restrict __src, size_t __n)</argsstring>
        <name>secure_memcpy</name>
        <param>
          <type>void *__restrict</type>
          <declname>__dest</declname>
        </param>
        <param>
          <type>const void *__restrict</type>
          <declname>__src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>__n</declname>
        </param>
        <briefdescription>
<para>This function is intended to replaced memcpy into secure area. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">__dest</parametername>
</parameternamelist>
<parameterdescription>
<para>The destination pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">__src</parametername>
</parameternamelist>
<parameterdescription>
<para>The source pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">__n</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of byte to copy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>return</parametername>
</parameternamelist>
<parameterdescription>
<para>the destination pointer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/Crypto/src/utils_secure.c" line="50" column="6" bodyfile="/home/nono/OpenWize/sources/Samples/Crypto/src/utils_secure.c" bodystart="50" bodyend="61" declfile="/home/nono/OpenWize/sources/Samples/Crypto/src/utils_secure.h" declline="43" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__crypto_1ga8c56fa5dc7b67f5a6447c5424fa43dd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * secure_memset</definition>
        <argsstring>(void *__s, int __c, size_t __n)</argsstring>
        <name>secure_memset</name>
        <param>
          <type>void *</type>
          <declname>__s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>__c</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>__n</declname>
        </param>
        <briefdescription>
<para>This function is intended to replaced memset into secure area. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">__s</parametername>
</parameternamelist>
<parameterdescription>
<para>The destination pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">__c</parametername>
</parameternamelist>
<parameterdescription>
<para>The character value to set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">__n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of char to set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>return</parametername>
</parameternamelist>
<parameterdescription>
<para>the destination pointer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/Crypto/src/utils_secure.c" line="72" column="6" bodyfile="/home/nono/OpenWize/sources/Samples/Crypto/src/utils_secure.c" bodystart="72" bodyend="77" declfile="/home/nono/OpenWize/sources/Samples/Crypto/src/utils_secure.h" declline="45" declcolumn="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This file expose some function that required to be in secure area. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para>2019, GRDF, Inc. All rights reserved.</para>
</simplesect>
Redistribution and use in source and binary forms, with or without modification, are permitted (subject to the limitations in the disclaimer below) provided that the following conditions are met:<itemizedlist>
<listitem><para>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</para>
</listitem><listitem><para>Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</para>
</listitem><listitem><para>Neither the name of GRDF, Inc. nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="par"><title>Revision history</title><para></para>
</simplesect>
<simplesect kind="par"><title>1.0.0 : 2020/12/31[GBI]</title><para>Initial version </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="35"><highlight class="preprocessor">#ifndef<sp/>Crypto_UTILS_SECURE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Crypto_UTILS_SECURE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="group__crypto_1ga35410547162bf6973941d8e6fb7773ba" kindref="member">secure_memcpy</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*__restrict<sp/>__dest,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*__restrict<sp/>__src,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>__n);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="group__crypto_1ga8c56fa5dc7b67f5a6447c5424fa43dd9" kindref="member">secure_memset</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*__s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__c,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>__n);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SECURE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>memcpy(...)<sp/>secure_memcpy(__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>memset(...)<sp/>secure_memset(__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>Crypto_UTILS_SECURE_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/nono/OpenWize/sources/Samples/Crypto/src/utils_secure.h"/>
  </compounddef>
</doxygen>
