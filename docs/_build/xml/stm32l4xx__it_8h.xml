<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="stm32l4xx__it_8h" kind="file" language="C++">
    <compoundname>stm32l4xx_it.h</compoundname>
    <includedby refid="stm32l4xx__it_8c" local="yes">/home/nono/OpenWize/demo/Nucleo-L476/board/src/stm32l4xx_it.c</includedby>
      <sectiondef kind="func">
      <memberdef kind="function" id="stm32l4xx__it_8h_1a53a3fe340e323e2fec8d851cd2e83554" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RTC_WKUP_IRQHandler</definition>
        <argsstring>(void)</argsstring>
        <name>RTC_WKUP_IRQHandler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function handles RTC wake-up interrupt through EXTI line 20. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/board/include/stm32l4xx_it.h" line="50" column="6" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/board/src/stm32l4xx_it.c" bodystart="14" bodyend="17" declfile="/home/nono/OpenWize/demo/Nucleo-L476/board/include/stm32l4xx_it.h" declline="50" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="stm32l4xx__it_8h_1a4da4fb52ec579671d337938e78f9a207" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RTC_Alarm_IRQHandler</definition>
        <argsstring>(void)</argsstring>
        <name>RTC_Alarm_IRQHandler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function handles RTC alarm interrupt through EXTI line 18. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/board/include/stm32l4xx_it.h" line="51" column="6" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/board/src/stm32l4xx_it.c" bodystart="22" bodyend="25" declfile="/home/nono/OpenWize/demo/Nucleo-L476/board/include/stm32l4xx_it.h" declline="51" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="stm32l4xx__it_8h_1a0ca6fd0e6f77921dd1123539857ba0a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void USART2_IRQHandler</definition>
        <argsstring>(void)</argsstring>
        <name>USART2_IRQHandler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function handles USART2 global interrupt. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/board/include/stm32l4xx_it.h" line="52" column="6" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/board/src/stm32l4xx_it.c" bodystart="30" bodyend="41" declfile="/home/nono/OpenWize/demo/Nucleo-L476/board/include/stm32l4xx_it.h" declline="52" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="stm32l4xx__it_8h_1a0839a45f331c4c067939b9c4533bbf4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TIM6_DAC_IRQHandler</definition>
        <argsstring>(void)</argsstring>
        <name>TIM6_DAC_IRQHandler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function handles TIM6 global interrupt, DAC channel1 and channel2 underrun error interrupts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/board/include/stm32l4xx_it.h" line="53" column="6" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/board/src/stm32l4xx_it.c" bodystart="78" bodyend="81" declfile="/home/nono/OpenWize/demo/Nucleo-L476/board/include/stm32l4xx_it.h" declline="53" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="stm32l4xx__it_8h_1a49cfdd46eb8d0ef3e1987514aa9343dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EXTI1_IRQHandler</definition>
        <argsstring>(void)</argsstring>
        <name>EXTI1_IRQHandler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function handles EXTI line1 interrupt. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/board/include/stm32l4xx_it.h" line="55" column="6" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/board/src/stm32l4xx_it.c" bodystart="90" bodyend="100" declfile="/home/nono/OpenWize/demo/Nucleo-L476/board/include/stm32l4xx_it.h" declline="55" declcolumn="6"/>
        <references refid="group__gpio__it_1gad35f0b0f4dec2f85814796bde6c0fbd0" compoundref="bsp__gpio__it_8c" startline="337" endline="357">BSP_GpioIt_Handler</references>
      </memberdef>
      <memberdef kind="function" id="stm32l4xx__it_8h_1ab5a1d9e9c8ef50e0cb9ddb5745a20a14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EXTI2_IRQHandler</definition>
        <argsstring>(void)</argsstring>
        <name>EXTI2_IRQHandler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function handles EXTI line2 interrupt. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/board/include/stm32l4xx_it.h" line="56" column="6" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/board/src/stm32l4xx_it.c" bodystart="105" bodyend="115" declfile="/home/nono/OpenWize/demo/Nucleo-L476/board/include/stm32l4xx_it.h" declline="56" declcolumn="6"/>
        <references refid="group__gpio__it_1gad35f0b0f4dec2f85814796bde6c0fbd0" compoundref="bsp__gpio__it_8c" startline="337" endline="357">BSP_GpioIt_Handler</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This file contains the headers of the interrupt handlers. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="attention"><para></para>
</simplesect>
<heading level="2"><center><copy/> Copyright (c) 2021 STMicroelectronics. All rights reserved.</center></heading>
</para>
<para>This software component is licensed by ST under BSD 3-Clause license, the &quot;License&quot;; You may not use this file except in compliance with the License. You may obtain a copy of the License at: opensource.org/licenses/BSD-3-Clause </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>BEGIN<sp/>Header<sp/>*/</highlight></codeline>
<codeline lineno="19"><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>END<sp/>Header<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Define<sp/>to<sp/>prevent<sp/>recursive<sp/>inclusion<sp/>-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__STM32L4xx_IT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__STM32L4xx_IT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>includes<sp/>----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>BEGIN<sp/>Includes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>END<sp/>Includes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Exported<sp/>types<sp/>------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>BEGIN<sp/>ET<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>END<sp/>ET<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Exported<sp/>constants<sp/>--------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>BEGIN<sp/>EC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>END<sp/>EC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Exported<sp/>macro<sp/>------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>BEGIN<sp/>EM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>END<sp/>EM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Exported<sp/>functions<sp/>prototypes<sp/>---------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stm32l4xx__it_8h_1a53a3fe340e323e2fec8d851cd2e83554" kindref="member">RTC_WKUP_IRQHandler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stm32l4xx__it_8h_1a4da4fb52ec579671d337938e78f9a207" kindref="member">RTC_Alarm_IRQHandler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stm32l4xx__it_8h_1a0ca6fd0e6f77921dd1123539857ba0a8" kindref="member">USART2_IRQHandler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stm32l4xx__it_8h_1a0839a45f331c4c067939b9c4533bbf4d" kindref="member">TIM6_DAC_IRQHandler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>BEGIN<sp/>EFP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stm32l4xx__it_8h_1a49cfdd46eb8d0ef3e1987514aa9343dc" kindref="member">EXTI1_IRQHandler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stm32l4xx__it_8h_1ab5a1d9e9c8ef50e0cb9ddb5745a20a14" kindref="member">EXTI2_IRQHandler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>USER<sp/>CODE<sp/>END<sp/>EFP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__STM32L4xx_IT_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">/************************<sp/>(C)<sp/>COPYRIGHT<sp/>STMicroelectronics<sp/>*****END<sp/>OF<sp/>FILE****/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/nono/OpenWize/demo/Nucleo-L476/board/include/stm32l4xx_it.h"/>
  </compounddef>
</doxygen>
