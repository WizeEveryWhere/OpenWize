<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="key_8c" kind="file" language="C++">
    <compoundname>key.c</compoundname>
    <includes refid="key__priv_8h" local="yes">key_priv.h</includes>
    <includes refid="utils__secure_8h" local="yes">utils_secure.h</includes>
    <incdepgraph>
      <node id="4">
        <label>stdint.h</label>
      </node>
      <node id="5">
        <label>utils_secure.h</label>
        <link refid="utils__secure_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/nono/OpenWize/sources/Samples/Crypto/src/key.c</label>
        <link refid="key_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="2">
        <label>key_priv.h</label>
        <link refid="key__priv_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>crypto.h</label>
        <link refid="crypto_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__crypto_1ga9b52e6f9149815df428c8d974ffcf776" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t _set_key_</definition>
        <argsstring>(uint8_t p_Key[KEY_SIZE], uint8_t u8_KeyId)</argsstring>
        <name>_set_key_</name>
        <param>
          <type>uint8_t</type>
          <declname>p_Key</declname>
          <array>[KEY_SIZE]</array>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>u8_KeyId</declname>
        </param>
        <briefdescription>
<para>This function set (write) a key at specified key id. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_Key</parametername>
</parameternamelist>
<parameterdescription>
<para>The given key to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">u8_KeyId</parametername>
</parameternamelist>
<parameterdescription>
<para>The key id to use. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>CRYPTO_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>(1) if everything is fine </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>CRYPTO_KID_UNK_ERR</parametername>
</parameternamelist>
<parameterdescription>
<para>(2) id the key id is out of box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/Crypto/src/key.c" line="57" column="23" bodyfile="/home/nono/OpenWize/sources/Samples/Crypto/src/key.c" bodystart="57" bodyend="88" declfile="/home/nono/OpenWize/sources/Samples/Crypto/src/key.c" declline="46" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="group__crypto_1ga53fb35d3a1884f1c2fcea7ceb45b3b70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t Crypto_WriteKey</definition>
        <argsstring>(uint8_t p_Key[KEY_SIZE], uint8_t u8_KeyId)</argsstring>
        <name>Crypto_WriteKey</name>
        <param>
          <type>uint8_t</type>
          <declname>p_Key</declname>
          <array>[KEY_SIZE]</array>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>u8_KeyId</declname>
        </param>
        <briefdescription>
<para>This function set (write) a key at specified key id. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p_Key</parametername>
</parameternamelist>
<parameterdescription>
<para>The given key to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">u8_KeyId</parametername>
</parameternamelist>
<parameterdescription>
<para>The key id to use.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>CRYPTO_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>(1) if everything is fine </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>CRYPTO_KID_UNK_ERR</parametername>
</parameternamelist>
<parameterdescription>
<para>(2) id the key id is out of box </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/Crypto/src/key.c" line="99" column="9" bodyfile="/home/nono/OpenWize/sources/Samples/Crypto/src/key.c" bodystart="99" bodyend="102" declfile="/home/nono/OpenWize/sources/Samples/Crypto/include/crypto.h" declline="166" declcolumn="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This file expose some helping function to deal with secured keys. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para>2019, GRDF, Inc. All rights reserved.</para>
</simplesect>
Redistribution and use in source and binary forms, with or without modification, are permitted (subject to the limitations in the disclaimer below) provided that the following conditions are met:<itemizedlist>
<listitem><para>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</para>
</listitem><listitem><para>Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</para>
</listitem><listitem><para>Neither the name of GRDF, Inc. nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="par"><title>Revision history</title><para></para>
</simplesect>
<simplesect kind="par"><title>1.0.0 : 2019/12/27[GBI]</title><para>Initial version </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="35"><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="key__priv_8h" kindref="compound">key_priv.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="utils__secure_8h" kindref="compound">utils_secure.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAS_KEY_STORE_IN_FLASH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">uint8_t<sp/>aFlashCache[FLASH_PAGE_SIZE];</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint8_t<sp/>_set_key_(uint8_t<sp/>p_Key[KEY_SIZE],<sp/>uint8_t<sp/>u8_KeyId);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint8_t<sp/>_set_key_(uint8_t<sp/>p_Key[KEY_SIZE],<sp/>uint8_t<sp/>u8_KeyId)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>u8_ret<sp/>=<sp/><ref refid="group__crypto_1ggaba880ecd29a19ea1bfe55d32bf0176c9a60a843bc26ee85510e68d53b85e52683" kindref="member">CRYPTO_OK</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>key<sp/>id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u8_KeyId<sp/>&gt;<sp/><ref refid="group__crypto_1ga189381496bdc6329d20d84cb8dd755e4" kindref="member">KEY_MAX_NB</ref>)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8_ret<sp/>=<sp/><ref refid="group__crypto_1ggaba880ecd29a19ea1bfe55d32bf0176c9a77c3cd579f2a2120039dc18a0958771a" kindref="member">CRYPTO_KID_UNK_ERR</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAS_KEY_STORE_IN_FLASH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structkey__s" kindref="compound">key_s</ref><sp/>*pKey;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>u32Page;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>flash<sp/>page<sp/>into<sp/>the<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(aFlashCache,<sp/><ref refid="group__crypto_1ga21956ce69b049977e54c004831c9bdcb" kindref="member">_a_Key_</ref>,<sp/>FLASH_PAGE_SIZE);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>the<sp/>new<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>pKey<sp/>=<sp/>&amp;(((<ref refid="structkey__s" kindref="compound">key_s</ref>*)aFlashCache)[u8_KeyId]);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(pKey,<sp/>p_Key,<sp/>KEY_SIZE);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Erase<sp/>the<sp/>Flash<sp/>corresponding<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>u32Page<sp/>=<sp/>((uint32_t)<ref refid="group__crypto_1ga21956ce69b049977e54c004831c9bdcb" kindref="member">_a_Key_</ref><sp/>-<sp/>0x8000000)/FLASH_PAGE_SIZE;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__flash_1ga59e92cf524adf0412037f59b98dc216c" kindref="member">BSP_Flash_Erase</ref>(u32Page);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>back<sp/>into<sp/>the<sp/>Flash</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__flash_1ga578f90253897e2e4f5ae33acc58afc9e" kindref="member">BSP_Flash_Write</ref>(</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint32_t)(&amp;(<ref refid="group__crypto_1ga21956ce69b049977e54c004831c9bdcb" kindref="member">_a_Key_</ref>[0])),</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint64_t*)(aFlashCache),</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FLASH_PAGE_SIZE/8</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//secure_memcpy(&amp;(_a_Key_[u8_KeyId].key),<sp/>p_Key,<sp/>KEY_SIZE);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;(<ref refid="group__crypto_1ga21956ce69b049977e54c004831c9bdcb" kindref="member">_a_Key_</ref>[u8_KeyId].key),<sp/>p_Key,<sp/>KEY_SIZE);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u8_ret;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="group__crypto_1ga53fb35d3a1884f1c2fcea7ceb45b3b70" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="group__crypto_1ga53fb35d3a1884f1c2fcea7ceb45b3b70" kindref="member">Crypto_WriteKey</ref>(uint8_t<sp/>p_Key[KEY_SIZE],<sp/>uint8_t<sp/>u8_KeyId)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_set_key_(p_Key,<sp/>u8_KeyId);</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/nono/OpenWize/sources/Samples/Crypto/src/key.c"/>
  </compounddef>
</doxygen>
