<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="bsp__lp_8c" kind="file" language="C++">
    <compoundname>bsp_lp.c</compoundname>
    <includes refid="bsp__lp_8h" local="yes">bsp_lp.h</includes>
    <includes refid="platform_8h" local="yes">platform.h</includes>
    <includes local="no">stm32l4xx_hal.h</includes>
    <includes refid="pin__cfg_8h" local="yes">pin_cfg.h</includes>
    <includes refid="bsp__gpio__it_8h" local="yes">bsp_gpio_it.h</includes>
    <incdepgraph>
      <node id="5">
        <label>stdbool.h</label>
      </node>
      <node id="8">
        <label>assert.h</label>
      </node>
      <node id="6">
        <label>stdint.h</label>
      </node>
      <node id="3">
        <label>common.h</label>
        <link refid="common_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>stm32l4xx_hal.h</label>
      </node>
      <node id="14">
        <label>bsp_gpio_it.h</label>
        <link refid="bsp__gpio__it_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>stddef.h</label>
      </node>
      <node id="15">
        <label>bsp_gpio.h</label>
        <link refid="bsp__gpio_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_lp.c</label>
        <link refid="bsp__lp_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>time.h</label>
      </node>
      <node id="11">
        <label>platform.h</label>
        <link refid="platform_8h"/>
      </node>
      <node id="13">
        <label>pin_cfg.h</label>
        <link refid="pin__cfg_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>bsp_lp.h</label>
        <link refid="bsp__lp_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdio.h</label>
      </node>
      <node id="10">
        <label>machine/endian.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__low__power_1gac7b56a7e55221f8b95af7d07bd2185c7" prot="public" static="no">
        <name>WAKEUP_PIN</name>
        <initializer>PC13_WKUP_PIN</initializer>
        <briefdescription>
<para>This define the current wake-up pin. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_lp.c" line="318" column="9" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_lp.c" bodystart="318" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__low__power_1gaa0c7fca836406ade332e1e3f1039d8ab" prot="public" static="no" mutable="no">
        <type>RTC_HandleTypeDef</type>
        <definition>RTC_HandleTypeDef hrtc</definition>
        <argsstring></argsstring>
        <name>hrtc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_lp.c" line="65" column="26" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/board/src/main.c" bodystart="45" bodyend="-1" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_lp.c" declline="65" declcolumn="26"/>
      </memberdef>
      <memberdef kind="variable" id="group__low__power_1ga9370b7747f3b63b87070292b95b5314e" prot="public" static="no" mutable="no">
        <type>UART_HandleTypeDef *</type>
        <definition>UART_HandleTypeDef* paUART_BusHandle[UART_ID_MAX]</definition>
        <argsstring>[UART_ID_MAX]</argsstring>
        <name>paUART_BusHandle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_lp.c" line="66" column="27" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_lp.c" declline="66" declcolumn="27"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__low__power_1gaa1cfd268c238ce160d970cfb5d9335cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BSP_LowPower_Enter</definition>
        <argsstring>(lp_mode_e eLpMode)</argsstring>
        <name>BSP_LowPower_Enter</name>
        <param>
          <type><ref refid="group__low__power_1ga89c08aa0d5391e11da484d4b30b2b4b3" kindref="member">lp_mode_e</ref></type>
          <declname>eLpMode</declname>
        </param>
        <briefdescription>
<para>This function enter in the given low power mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">eLpMode</parametername>
</parameternamelist>
<parameterdescription>
<para>The low power mode (see <ref refid="group__low__power_1ga89c08aa0d5391e11da484d4b30b2b4b3" kindref="member">lp_mode_e</ref>) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_lp.c" line="326" column="6" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_lp.c" bodystart="326" bodyend="358" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/include/bsp_lp.h" declline="55" declcolumn="6"/>
        <references refid="stm32l4xx__hal__timebase__tim_8c_1aaf651af2afe688a991c657f64f8fa5f9" compoundref="stm32l4xx__hal__timebase__tim_8c" startline="95" endline="99">HAL_SuspendTick</references>
        <references refid="group__low__power_1gac7b56a7e55221f8b95af7d07bd2185c7" compoundref="bsp__lp_8c" startline="318">WAKEUP_PIN</references>
        <references refid="group__low__power_1gga89c08aa0d5391e11da484d4b30b2b4b3a292a2fae5b6bf02b90afacdc724166f7" compoundref="bsp__lp_8h" startline="52">LP_SHTDWN_MODE</references>
        <references refid="group__low__power_1gga89c08aa0d5391e11da484d4b30b2b4b3a810ff0b824779f414797c47a19cada6f" compoundref="bsp__lp_8h" startline="51">LP_STDBY_MODE</references>
        <references refid="group__low__power_1gga89c08aa0d5391e11da484d4b30b2b4b3a5265b34f9a45f92480dc48e5aa0fb5c0" compoundref="bsp__lp_8h" startline="49">LP_STOP1_MODE</references>
        <references refid="group__low__power_1gga89c08aa0d5391e11da484d4b30b2b4b3a745c9aec2d57a37530926cbe7f19701b" compoundref="bsp__lp_8h" startline="50">LP_STOP2_MODE</references>
        <references refid="group__low__power_1gga89c08aa0d5391e11da484d4b30b2b4b3a6c8362ed4e333b36aea475fc27bb9a87" compoundref="bsp__lp_8h" startline="48">LP_SLEEP_MODE</references>
        <references refid="stm32l4xx__hal__timebase__tim_8c_1a24e0ee9dae1ec0f9d19200f5575ff790" compoundref="stm32l4xx__hal__timebase__tim_8c" startline="106" endline="110">HAL_ResumeTick</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This implement the bsp function to accesss the low power. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para>2019, GRDF, Inc. All rights reserved.</para>
</simplesect>
Redistribution and use in source and binary forms, with or without modification, are permitted (subject to the limitations in the disclaimer below) provided that the following conditions are met:<itemizedlist>
<listitem><para>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</para>
</listitem><listitem><para>Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</para>
</listitem><listitem><para>Neither the name of GRDF, Inc. nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="par"><title>Revision history</title><para></para>
</simplesect>
<simplesect kind="par"><title>1.0.0 : 2021/11/04 [GBI]</title><para>Initial version </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="36"><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bsp__lp_8h" kindref="compound">bsp_lp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="platform_8h" kindref="compound">platform.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stm32l4xx_hal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pin__cfg_8h" kindref="compound">pin_cfg.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor">#define<sp/>GP_PORT_NAME(name)<sp/>name<sp/>##_GPIO_Port</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GP_PIN_NAME(name)<sp/>name##_Pin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GP_PORT(name)<sp/>(uint32_t)(GP_PORT_NAME(name))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GP_PIN(name)<sp/><sp/>GP_PIN_NAME(name)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LINE_INIT(name)<sp/>GP_PORT(name),<sp/>GP_PIN(name)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bsp__gpio__it_8h" kindref="compound">bsp_gpio_it.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>RTC_HandleTypeDef<sp/>hrtc;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>UART_HandleTypeDef<sp/>*paUART_BusHandle[UART_ID_MAX];</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor">#define<sp/>WKUP_PIN_NAME<sp/>DEBUG_RXD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WKUP_UART_ID<sp/>UART_ID_CONSOLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>UART_IS_DEINIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_lp_clk_cfg_<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>CLK_CFG_HSE_PLL_HSI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>CLK_CFG_MSI_HSI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_lp_clk_cfg_<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(<sp/>CLK_CFG_HSE_PLL_HSI<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>RCC_OscInitTypeDef<sp/>RCC_OscInitStruct<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>RCC_ClkInitTypeDef<sp/>RCC_ClkInitStruct<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>pFLatency<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>HAL_RCC_GetOscConfig(&amp;RCC_OscInitStruct);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>RCC_OscInitStruct.OscillatorType<sp/>=<sp/>RCC_OSCILLATORTYPE_HSE<sp/>|<sp/>RCC_OSCILLATORTYPE_HSI;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>RCC_OscInitStruct.HSEState<sp/>=<sp/>RCC_HSE_ON;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>RCC_OscInitStruct.PLL.PLLState<sp/>=<sp/>RCC_PLL_ON;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>RCC_OscInitStruct.PLL.PLLSource<sp/>=<sp/>RCC_PLLSOURCE_HSE;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//RCC_OscInitStruct.OscillatorType<sp/>|=<sp/>RCC_OSCILLATORTYPE_HSI;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//RCC_OscInitStruct.HSIState<sp/>=<sp/>RCC_HSI_ON;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//RCC_OscInitStruct.HSICalibrationValue<sp/>=<sp/>RCC_HSICALIBRATION_DEFAULT;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HAL_RCC_OscConfig(&amp;RCC_OscInitStruct)<sp/>!=<sp/>HAL_OK)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8h_1a1730ffe1e560465665eb47d9264826f9" kindref="member">Error_Handler</ref>();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>HAL_RCC_GetClockConfig(&amp;RCC_ClkInitStruct,<sp/>&amp;pFLatency);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>RCC_ClkInitStruct.ClockType<sp/>=<sp/>RCC_CLOCKTYPE_SYSCLK;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>RCC_ClkInitStruct.SYSCLKSource<sp/>=<sp/>RCC_SYSCLKSOURCE_PLLCLK;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HAL_RCC_ClockConfig(&amp;RCC_ClkInitStruct,<sp/>pFLatency)<sp/>!=<sp/>HAL_OK)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8h_1a1730ffe1e560465665eb47d9264826f9" kindref="member">Error_Handler</ref>();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>(CLK_CFG_MSI_HSI<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>HAL_RCC_GetOscConfig(&amp;RCC_OscInitStruct);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>RCC_OscInitStruct.OscillatorType<sp/>=<sp/>RCC_OSCILLATORTYPE_MSI<sp/>|<sp/>RCC_OSCILLATORTYPE_HSI;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HAL_RCC_OscConfig(&amp;RCC_OscInitStruct)<sp/>!=<sp/>HAL_OK)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8h_1a1730ffe1e560465665eb47d9264826f9" kindref="member">Error_Handler</ref>();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>HAL_RCC_GetClockConfig(&amp;RCC_ClkInitStruct,<sp/>&amp;pFLatency);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>RCC_ClkInitStruct.ClockType<sp/>=<sp/>RCC_CLOCKTYPE_SYSCLK;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>RCC_ClkInitStruct.SYSCLKSource<sp/>=<sp/>RCC_SYSCLKSOURCE_MSI;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HAL_RCC_ClockConfig(&amp;RCC_ClkInitStruct,<sp/>pFLatency)<sp/>!=<sp/>HAL_OK)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8h_1a1730ffe1e560465665eb47d9264826f9" kindref="member">Error_Handler</ref>();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/>//<sp/>(CLK_CFG_MSI)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nothing<sp/>to<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_wkup_cb_(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pParam,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pArg)</highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_lp_entry_<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/>i8LineId;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UART_IS_DEINIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HAL_UART_DeInit(<sp/>paUART_BusHandle[WKUP_UART_ID]<sp/>)<sp/>!=<sp/>HAL_OK)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8h_1a1730ffe1e560465665eb47d9264826f9" kindref="member">Error_Handler</ref>();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__gpio_1ga89d7a458e32590e59c774793cfa2584f" kindref="member">BSP_Gpio_InputEnable</ref>(<sp/>LINE_INIT(WKUP_PIN_NAME),<sp/>1);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__gpio__it_1ga1faf7648b4fc23ba486bbcb8f74b178f" kindref="member">BSP_GpioIt_ConfigLine</ref>(<sp/>LINE_INIT(WKUP_PIN_NAME),<sp/><ref refid="group__gpio__it_1gga599f4fc0ff790b99ecb76b5c83f8e97ca602a91261e70038ba4c5c27e820bb22b" kindref="member">GPIO_IRQ_FALLING_EDGE</ref>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__gpio__it_1ga6a7db0f6a32cf4197c995dc83e67e7ea" kindref="member">BSP_GpioIt_SetLine</ref>(<sp/>LINE_INIT(WKUP_PIN_NAME),<sp/>1);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__gpio__it_1ga3fa85ab0085df2541d576df88bed2573" kindref="member">BSP_GpioIt_SetCallback</ref>(<sp/>LINE_INIT(WKUP_PIN_NAME),<sp/>&amp;_wkup_cb_,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>i8LineId<sp/>=<sp/><ref refid="group__gpio__it_1ga7839d3870b65918ac9670031e191d813" kindref="member">BSP_GpioIt_GetLineId</ref>(<sp/>GP_PIN(WKUP_PIN_NAME));</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i8LineId<sp/>&lt;<sp/>5)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IT<sp/>line<sp/>from<sp/>0,<sp/>1,<sp/>2,<sp/>3<sp/>and<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAL_NVIC_EnableIRQ(EXTI0_IRQn<sp/>+<sp/>i8LineId);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i8LineId<sp/>&lt;<sp/>10)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IT<sp/>line<sp/>from<sp/>5<sp/>to<sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IT<sp/>line<sp/>from<sp/>10<sp/>to<sp/>15</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(CLK_CFG_HSE_PLL_HSI)<sp/>||<sp/>defined<sp/>(CLK_CFG_MSI_HSI)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Auto<sp/>enable<sp/>HSI<sp/>when<sp/>MSI<sp/>is<sp/>ready</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>SET_BIT(RCC-&gt;CR,<sp/>RCC_CR_HSIASFS<sp/>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_lp_exit_<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__gpio__it_1ga6a7db0f6a32cf4197c995dc83e67e7ea" kindref="member">BSP_GpioIt_SetLine</ref>(<sp/>LINE_INIT(WKUP_PIN_NAME),<sp/>0);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>_lp_clk_cfg_();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UART_IS_DEINIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HAL_UART_Init(<sp/>paUART_BusHandle[WKUP_UART_ID]<sp/>)<sp/>!=<sp/>HAL_OK)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8h_1a1730ffe1e560465665eb47d9264826f9" kindref="member">Error_Handler</ref>();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BSP_LowPower_Init<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/>*<sp/>Power<sp/>control<sp/>register<sp/>1<sp/>(PWR_CR1)<sp/>:<sp/>This<sp/>register<sp/>is<sp/>reset<sp/>after<sp/>wakeup</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from<sp/>Standby<sp/>mode.</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/>*<sp/>Bit<sp/>8<sp/>DBP:<sp/>Disable<sp/>backup<sp/>domain<sp/>write<sp/>protection<sp/>In<sp/>reset<sp/>state,<sp/>the<sp/>RTC<sp/>and<sp/>backup<sp/>registers<sp/>are</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/>*<sp/>Power<sp/>control<sp/>register<sp/>3<sp/>(PWR_CR3)<sp/>:<sp/>This<sp/>register<sp/>is<sp/>not<sp/>reset<sp/>when<sp/>exiting</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Standby<sp/>modes<sp/>and<sp/>with<sp/>the<sp/>PWRRST<sp/>bit</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>the<sp/>RCC_APB1RSTR1<sp/>register.</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/>*<sp/>Bit<sp/>15<sp/>EIWUL:<sp/>Enable<sp/>internal<sp/>wakeup<sp/>line</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/>*<sp/>Bit<sp/>11<sp/>ENULP:<sp/>Enable<sp/>ULP<sp/>sampling</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>*<sp/>Bit<sp/>10<sp/>APC:<sp/>Apply<sp/>pull-up<sp/>and<sp/>pull-down<sp/>configuration</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>*<sp/>Bit<sp/>8<sp/>RRS:<sp/>SRAM2<sp/>retention<sp/>in<sp/>Standby<sp/>mode</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/>*<sp/>Bit<sp/>4-0<sp/>EWUP[5-1]:<sp/>Enable<sp/>Wakeup<sp/>pin<sp/>WKUP<sp/>5-1</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/>*<sp/>Power<sp/>control<sp/>register<sp/>4<sp/>(PWR_CR4)<sp/>:<sp/>This<sp/>register<sp/>is<sp/>not<sp/>reset<sp/>when<sp/>exiting</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Standby<sp/>modes<sp/>and<sp/>with<sp/>the<sp/>PWRRST<sp/>bit</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>the<sp/>RCC_APB1RSTR1<sp/>register.</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/>*<sp/>Bit<sp/>4-0<sp/>WP[5-1]:<sp/>Wakeup<sp/>pin<sp/>WKUP<sp/>5-1<sp/>polarity</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/>*<sp/>Power<sp/>status<sp/>register<sp/>1<sp/>(PWR_SR1)<sp/>:<sp/>This<sp/>register<sp/>is<sp/>not<sp/>reset<sp/>when<sp/>exiting</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Standby<sp/>modes<sp/>and<sp/>with<sp/>the<sp/>PWRRST<sp/>bit</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>the<sp/>RCC_APB1RSTR1<sp/>register.</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/>*<sp/>Bit<sp/>15<sp/>WUFI:<sp/>Wakeup<sp/>flag<sp/>internal</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/>*<sp/>Bit<sp/>8<sp/>SBF:<sp/>Standby<sp/>flag</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/>*<sp/>Bit<sp/>4-0<sp/>WUF[5-1]:<sp/>Wakeup<sp/>flag<sp/>5-1</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/>*<sp/>Power<sp/>status<sp/>clear<sp/>register<sp/>(PWR_SCR)</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/>*<sp/>Bit<sp/>8<sp/>CSBF:<sp/>Clear<sp/>standby<sp/>flag</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/>*<sp/>Bit<sp/>4-0<sp/>CWUF[5-1]:<sp/>Clear<sp/>wakeup<sp/>flag<sp/>5-1</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/>*<sp/>Power<sp/>Port<sp/>A<sp/>pull-down<sp/>control<sp/>register<sp/>(PWR_PDCRA)</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/>*<sp/>Power<sp/>Port<sp/>A<sp/>pull-up<sp/>control<sp/>register<sp/>(PWR_PUCRA)<sp/>:<sp/>This<sp/>register<sp/>is<sp/>not</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reset<sp/>when<sp/>exiting</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Standby<sp/>modes<sp/>and<sp/>with</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>PWRRST<sp/>bit<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCC_APB1RSTR1<sp/>register.</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/>*<sp/>Flash<sp/>option<sp/>register<sp/>(FLASH_OPTR)</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/>*<sp/>Bit<sp/>25<sp/>SRAM2_RST:<sp/>SRAM2<sp/>Erase<sp/>when<sp/>system<sp/>reset</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/>*<sp/>Bit<sp/>18<sp/>IWDG_STDBY:<sp/>Independent<sp/>watchdog<sp/>counter<sp/>freeze<sp/>in<sp/>Standby<sp/>mode</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/>*<sp/>Bit<sp/>17<sp/>IWDG_STOP:<sp/>Independent<sp/>watchdog<sp/>counter<sp/>freeze<sp/>in<sp/>Stop<sp/>mode</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/>*<sp/>Bit<sp/>14<sp/>nRST_SHDW</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/>*<sp/>Bit<sp/>13<sp/>nRST_STDBY</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/>*<sp/>Bit<sp/>12<sp/>nRST_STOP</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/>*<sp/>SYSCFG<sp/>SRAM2<sp/>control<sp/>and<sp/>status<sp/>register<sp/>(SYSCFG_SCSR)<sp/>:<sp/>System<sp/>reset<sp/>value:</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0000<sp/>0000</highlight></codeline>
<codeline lineno="248"><highlight class="comment"><sp/>*<sp/>Bit<sp/>1SRAM2BSY:<sp/>SRAM2<sp/>busy<sp/>by<sp/>erase<sp/>operation</highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/>*<sp/>Bit<sp/>0<sp/>SRAM2ER:<sp/>SRAM2<sp/>Erase</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/>*<sp/>*****************************</highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/>*<sp/>Reset<sp/>and<sp/>clock<sp/>control<sp/>(RCC)</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/>*<sp/>Control/status<sp/>register<sp/>(RCC_CSR)</highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/>*<sp/>Bits<sp/>11:8MSISRANGE[3:1]<sp/>MSI<sp/>range<sp/>after<sp/>Standby<sp/>mode</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/>*<sp/>On<sp/>LP<sp/>exit</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/>*<sp/>-<sp/>from<sp/>SHUTDOWN</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/>*<sp/>-<sp/>from<sp/>STANDBY</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/>*<sp/>-<sp/>from<sp/>STOP2</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/>*<sp/>-<sp/>from<sp/>STOP1</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/>*<sp/>-<sp/>from<sp/>STOP0</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/>*<sp/>-<sp/>from<sp/>SLEEP</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/><sp/><sp/><sp/>CLEAR_BIT(SysTick-&gt;CTRL,<sp/>SysTick_CTRL_ENABLE_Msk);</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/><sp/><sp/><sp/>bPaState<sp/>=<sp/>Phy_GetPa();</highlight></codeline>
<codeline lineno="276"><highlight class="comment"></highlight></codeline>
<codeline lineno="277"><highlight class="comment"></highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/><sp/><sp/><sp/>Phy_OnOff(&amp;sPhyDev,<sp/>0);</highlight></codeline>
<codeline lineno="279"><highlight class="comment"></highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/><sp/><sp/><sp/>BSP_LowPower_Enter(LP_STOP2_MODE);</highlight></codeline>
<codeline lineno="281"><highlight class="comment"></highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/><sp/><sp/><sp/>Phy_OnOff(&amp;sPhyDev,<sp/>1);</highlight></codeline>
<codeline lineno="283"><highlight class="comment"></highlight></codeline>
<codeline lineno="284"><highlight class="comment"></highlight></codeline>
<codeline lineno="285"><highlight class="comment"></highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/><sp/><sp/><sp/>Phy_SetPa(bPaState);</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/><sp/><sp/><sp/>SET_BIT(SysTick-&gt;CTRL,<sp/>SysTick_CTRL_ENABLE_Msk);</highlight></codeline>
<codeline lineno="288"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="comment">//<sp/>PA0,<sp/>PC13,<sp/>PE6,<sp/>PA2,<sp/>PC5.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PA0_WKUP_PIN<sp/><sp/>PWR_WAKEUP_PIN1<sp/>//<sp/>PWR_CR3_EWUP1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PC13_WKUP_PIN<sp/>PWR_WAKEUP_PIN2_LOW<sp/>//PWR_WAKEUP_PIN2<sp/>//<sp/>PWR_CR3_EWUP2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PE6_WKUP_PIN<sp/><sp/>PWR_WAKEUP_PIN3<sp/>//<sp/>PWR_CR3_EWUP3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PA2_WKUP_PIN<sp/><sp/>PWR_WAKEUP_PIN4<sp/>//<sp/>PWR_CR3_EWUP4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PC5_WKUP_PIN<sp/><sp/>PWR_WAKEUP_PIN5<sp/>//<sp/>PWR_CR3_EWUP5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="318" refid="group__low__power_1gac7b56a7e55221f8b95af7d07bd2185c7" refkind="member"><highlight class="preprocessor">#define<sp/>WAKEUP_PIN<sp/>PC13_WKUP_PIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="326" refid="group__low__power_1gaa1cfd268c238ce160d970cfb5d9335cd" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__low__power_1gaa1cfd268c238ce160d970cfb5d9335cd" kindref="member">BSP_LowPower_Enter</ref><sp/>(<ref refid="group__low__power_1ga89c08aa0d5391e11da484d4b30b2b4b3" kindref="member">lp_mode_e</ref><sp/>eLpMode)</highlight></codeline>
<codeline lineno="327"><highlight class="normal">{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stm32l4xx__hal__timebase__tim_8c_1aaf651af2afe688a991c657f64f8fa5f9" kindref="member">HAL_SuspendTick</ref>();</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//HAL_RTCEx_DeactivateWakeUpTimer(&amp;hrtc);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//_lp_entry_();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>HAL_PWR_EnableWakeUpPin(<ref refid="group__low__power_1gac7b56a7e55221f8b95af7d07bd2185c7" kindref="member">WAKEUP_PIN</ref>);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>HAL_PWREx_EnableInternalWakeUpLine();</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>HAL_PWREx_EnableSRAM2ContentRetention();</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(eLpMode)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__low__power_1gga89c08aa0d5391e11da484d4b30b2b4b3a292a2fae5b6bf02b90afacdc724166f7" kindref="member">LP_SHTDWN_MODE</ref>:</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAL_PWREx_EnterSHUTDOWNMode();</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__low__power_1gga89c08aa0d5391e11da484d4b30b2b4b3a810ff0b824779f414797c47a19cada6f" kindref="member">LP_STDBY_MODE</ref>:</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAL_PWR_EnterSTANDBYMode();</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__low__power_1gga89c08aa0d5391e11da484d4b30b2b4b3a5265b34f9a45f92480dc48e5aa0fb5c0" kindref="member">LP_STOP1_MODE</ref>:</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAL_PWREx_EnterSTOP1Mode(PWR_STOPENTRY_WFI);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__low__power_1gga89c08aa0d5391e11da484d4b30b2b4b3a745c9aec2d57a37530926cbe7f19701b" kindref="member">LP_STOP2_MODE</ref>:</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAL_PWREx_EnterSTOP2Mode(PWR_STOPENTRY_WFI);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__low__power_1gga89c08aa0d5391e11da484d4b30b2b4b3a6c8362ed4e333b36aea475fc27bb9a87" kindref="member">LP_SLEEP_MODE</ref>:</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAL_PWR_EnterSLEEPMode(PWR_MAINREGULATOR_ON,<sp/>PWR_SLEEPENTRY_WFI);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//_lp_exit_();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stm32l4xx__hal__timebase__tim_8c_1a24e0ee9dae1ec0f9d19200f5575ff790" kindref="member">HAL_ResumeTick</ref>();</highlight></codeline>
<codeline lineno="358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/>*<sp/>Flash<sp/>option<sp/>register<sp/>(FLASH_OPTR)</highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/>*<sp/>OB_USER_nRST_STOP</highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/>*<sp/>OB_USER_nRST_STDBY</highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/>*<sp/>OB_USER_nRST_SHDW</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/>*<sp/>OB_USER_IWDG_SW</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/>*<sp/>OB_USER_IWDG_STOP</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/>*<sp/>OB_USER_IWDG_STDBY</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/>*<sp/>OB_USER_WWDG_SW</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_lp.c"/>
  </compounddef>
</doxygen>
