<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="time__evt_8c" kind="file" language="C++">
    <compoundname>time_evt.c</compoundname>
    <includes refid="time__evt_8h" local="yes">time_evt.h</includes>
    <includes local="no">assert.h</includes>
    <includes local="yes">rtos_macro.h</includes>
    <incdepgraph>
      <node id="7">
        <label>assert.h</label>
      </node>
      <node id="4">
        <label>stdint.h</label>
      </node>
      <node id="2">
        <label>time_evt.h</label>
        <link refid="time__evt_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
      <node id="5">
        <label>string.h</label>
      </node>
      <node id="8">
        <label>rtos_macro.h</label>
      </node>
      <node id="6">
        <label>time.h</label>
      </node>
      <node id="1">
        <label>/home/nono/OpenWize/sources/Samples/TimeEvt/src/time_evt.c</label>
        <link refid="time__evt_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structtime__evt__ctx__s" prot="public">time_evt_ctx_s</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__time__evt_1ga3010a0142990f4db0f2222c8cee7a517" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structtime__evt__ctx__s" kindref="compound">time_evt_ctx_s</ref></type>
        <definition>struct time_evt_ctx_s sTimeEvtCtx</definition>
        <argsstring></argsstring>
        <name>sTimeEvtCtx</name>
        <briefdescription>
<para>This define the TimeEvt context instance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/TimeEvt/src/time_evt.c" line="1" column="0" bodyfile="/home/nono/OpenWize/sources/Samples/TimeEvt/src/time_evt.c" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__time__evt_1ga7c59534f9e854577f5c3527ee579812a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t TimeEvt_TimerInit</definition>
        <argsstring>(time_evt_t *pTimeEvt, void(*pvTaskHandle)(uint32_t evt), time_evt_cfg_e eCfg)</argsstring>
        <name>TimeEvt_TimerInit</name>
        <param>
          <type><ref refid="group__time__evt_1ga2450508d973fc558596571e5d0639057" kindref="member">time_evt_t</ref> *</type>
          <declname>pTimeEvt</declname>
        </param>
        <param>
          <type>void(*)(uint32_t evt)</type>
          <declname>pvTaskHandle</declname>
        </param>
        <param>
          <type><ref refid="group__time__evt_1ga8fcf7b8fdc4fc8ab6ccc2d6a79de908e" kindref="member">time_evt_cfg_e</ref></type>
          <declname>eCfg</declname>
        </param>
        <briefdescription>
<para>Initialize the given timer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pTimeEvt</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer a Timer to initialize </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pvTaskHandle</parametername>
</parameternamelist>
<parameterdescription>
<para>Task handler to notify </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">eCfg</parametername>
</parameternamelist>
<parameterdescription>
<para>The timer configuration </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Success </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Failed (given is/are null) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/TimeEvt/src/time_evt.c" line="95" column="9" bodyfile="/home/nono/OpenWize/sources/Samples/TimeEvt/src/time_evt.c" bodystart="95" bodyend="116" declfile="/home/nono/OpenWize/sources/Samples/TimeEvt/include/time_evt.h" declline="100" declcolumn="9"/>
        <references refid="structtime__evt__s_1a943e74b5053c368d3b201d98b3590c8e" compoundref="time__evt_8h" startline="67">time_evt_s::pNext</references>
      </memberdef>
      <memberdef kind="function" id="group__time__evt_1gac2dd6309cfdcb775e0dd564c7224293f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t TimeEvt_TimerStart</definition>
        <argsstring>(time_evt_t *pTimeEvt, uint32_t u32Value, int16_t i16DeltaMs, uint32_t u32Event)</argsstring>
        <name>TimeEvt_TimerStart</name>
        <param>
          <type><ref refid="group__time__evt_1ga2450508d973fc558596571e5d0639057" kindref="member">time_evt_t</ref> *</type>
          <declname>pTimeEvt</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>u32Elapse</declname>
          <defname>u32Value</defname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>i16DeltaMs</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>u32Event</declname>
        </param>
        <briefdescription>
<para>Start the given timer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pTimeEvt</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer a Timer to start (insert) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">u32Value</parametername>
</parameternamelist>
<parameterdescription>
<para>The Timer value in second </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">i16DeltaMs</parametername>
</parameternamelist>
<parameterdescription>
<para>The Delta timer value in millisecond </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">u32Event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to notify on timer expire </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Success </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Failed (the given time value is passed or negative) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/TimeEvt/src/time_evt.c" line="128" column="9" bodyfile="/home/nono/OpenWize/sources/Samples/TimeEvt/src/time_evt.c" bodystart="128" bodyend="177" declfile="/home/nono/OpenWize/sources/Samples/TimeEvt/include/time_evt.h" declline="102" declcolumn="9"/>
        <references refid="structtime__evt__s_1a943e74b5053c368d3b201d98b3590c8e" compoundref="time__evt_8h" startline="67">time_evt_s::pNext</references>
        <references refid="structtime__evt__s_1a9ad1d379f74eab2100203cd898f86b79" compoundref="time__evt_8h" startline="76">time_evt_s::u32Event</references>
        <references refid="structtime__evt__s_1a5b6714edfae9fc2e9b89f1adc8e1d9bf" compoundref="time__evt_8h" startline="73">time_evt_s::u64InitVal</references>
        <references refid="structtime__evt__s_1a39578dde1bdc5d0218e7d1917efce072" compoundref="time__evt_8h" startline="74">time_evt_s::u64Value</references>
        <references refid="group__time__evt_1ga3010a0142990f4db0f2222c8cee7a517" compoundref="time__evt_8c" startline="60">sTimeEvtCtx</references>
        <references refid="structtime__evt__ctx__s_1aa4006b47b482e0730b8d4fcd76523710" compoundref="time__evt_8c" startline="53">time_evt_ctx_s::pLock</references>
        <references refid="group__time__evt_1ga6c1c724f4f79c767ab3269a3fe94048f" compoundref="port_8c" startline="92" endline="95">_timer_stop</references>
        <references refid="group__time__evt_1gab77e74a906fd2459377db9707b1494d6" compoundref="time__evt_8h" startline="50">TIME_EVT_ALARM_ID</references>
        <references refid="group__time__evt_1ga0d6fb4497d012663fd946c539eaf566b" compoundref="port_8c" startline="104" endline="107">_get_current_time_ms</references>
      </memberdef>
      <memberdef kind="function" id="group__time__evt_1gac722a1c1aba48d94eca9fa649594a93d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TimeEvt_TimerStop</definition>
        <argsstring>(time_evt_t *pTimeEvt)</argsstring>
        <name>TimeEvt_TimerStop</name>
        <param>
          <type><ref refid="group__time__evt_1ga2450508d973fc558596571e5d0639057" kindref="member">time_evt_t</ref> *</type>
          <declname>pTimeEvt</declname>
        </param>
        <briefdescription>
<para>Stop the given timer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pTimeEvt</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer a Timer to stop (remove) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/TimeEvt/src/time_evt.c" line="185" column="6" bodyfile="/home/nono/OpenWize/sources/Samples/TimeEvt/src/time_evt.c" bodystart="185" bodyend="209" declfile="/home/nono/OpenWize/sources/Samples/TimeEvt/include/time_evt.h" declline="103" declcolumn="6"/>
        <references refid="group__time__evt_1ga3010a0142990f4db0f2222c8cee7a517" compoundref="time__evt_8c" startline="60">sTimeEvtCtx</references>
        <references refid="structtime__evt__ctx__s_1aa4006b47b482e0730b8d4fcd76523710" compoundref="time__evt_8c" startline="53">time_evt_ctx_s::pLock</references>
        <references refid="structtime__evt__ctx__s_1aa18cab8ddb14dbbe722179b59f11eb94" compoundref="time__evt_8c" startline="52">time_evt_ctx_s::pCurrent</references>
        <references refid="group__time__evt_1ga6c1c724f4f79c767ab3269a3fe94048f" compoundref="port_8c" startline="92" endline="95">_timer_stop</references>
        <references refid="group__time__evt_1gab77e74a906fd2459377db9707b1494d6" compoundref="time__evt_8h" startline="50">TIME_EVT_ALARM_ID</references>
        <references refid="structtime__evt__s_1a943e74b5053c368d3b201d98b3590c8e" compoundref="time__evt_8h" startline="67">time_evt_s::pNext</references>
        <references refid="group__time__evt_1ga0d6fb4497d012663fd946c539eaf566b" compoundref="port_8c" startline="104" endline="107">_get_current_time_ms</references>
      </memberdef>
      <memberdef kind="function" id="group__time__evt_1ga648724158b910c64f69643f9ea250a1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TimeEvt_Setup</definition>
        <argsstring>(void)</argsstring>
        <name>TimeEvt_Setup</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize the TimeEvt Context. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/TimeEvt/src/time_evt.c" line="218" column="6" bodyfile="/home/nono/OpenWize/sources/Samples/TimeEvt/src/time_evt.c" bodystart="218" bodyend="226" declfile="/home/nono/OpenWize/sources/Samples/TimeEvt/include/time_evt.h" declline="105" declcolumn="6"/>
        <references refid="group__time__evt_1ga3010a0142990f4db0f2222c8cee7a517" compoundref="time__evt_8c" startline="60">sTimeEvtCtx</references>
        <references refid="structtime__evt__ctx__s_1aa4006b47b482e0730b8d4fcd76523710" compoundref="time__evt_8c" startline="53">time_evt_ctx_s::pLock</references>
        <references refid="group__time__evt_1ga7c1dbc42a9f86f4a0fad9ebd8a97f0df" compoundref="time__evt_8c" startline="233" endline="239">TimeEvt_Init</references>
        <references refid="group__time__evt_1gac1e60744a3a1ed20486a3e2369b0372c" compoundref="port_8c" startline="59" endline="62">_timer_set_handler</references>
        <references refid="group__time__evt_1gab77e74a906fd2459377db9707b1494d6" compoundref="time__evt_8h" startline="50">TIME_EVT_ALARM_ID</references>
        <references refid="group__time__evt_1ga37c8674ccfbb8dd46b1512ea6b1fb8b9" compoundref="time__evt_8c" startline="307" endline="355">TimeEvt_EventHandler</references>
      </memberdef>
      <memberdef kind="function" id="group__time__evt_1ga7c1dbc42a9f86f4a0fad9ebd8a97f0df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TimeEvt_Init</definition>
        <argsstring>(void)</argsstring>
        <name>TimeEvt_Init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize the TimeEvt module. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/TimeEvt/src/time_evt.c" line="233" column="6" bodyfile="/home/nono/OpenWize/sources/Samples/TimeEvt/src/time_evt.c" bodystart="233" bodyend="239" declfile="/home/nono/OpenWize/sources/Samples/TimeEvt/include/time_evt.h" declline="106" declcolumn="6"/>
        <references refid="group__time__evt_1ga6c1c724f4f79c767ab3269a3fe94048f" compoundref="port_8c" startline="92" endline="95">_timer_stop</references>
        <references refid="group__time__evt_1gab77e74a906fd2459377db9707b1494d6" compoundref="time__evt_8h" startline="50">TIME_EVT_ALARM_ID</references>
      </memberdef>
      <memberdef kind="function" id="group__time__evt_1gafa337b1821d93adc27263524dc349444" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TimeEvt_UpdateTime</definition>
        <argsstring>(time_t t)</argsstring>
        <name>TimeEvt_UpdateTime</name>
        <param>
          <type>time_t</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>This function update time and internal structure. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">t</parametername>
</parameternamelist>
<parameterdescription>
<para>The new time value to update</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/TimeEvt/src/time_evt.c" line="248" column="6" bodyfile="/home/nono/OpenWize/sources/Samples/TimeEvt/src/time_evt.c" bodystart="248" bodyend="300" declfile="/home/nono/OpenWize/sources/Samples/TimeEvt/include/time_evt.h" declline="107" declcolumn="6"/>
        <references refid="group__time__evt_1ga3010a0142990f4db0f2222c8cee7a517" compoundref="time__evt_8c" startline="60">sTimeEvtCtx</references>
        <references refid="structtime__evt__ctx__s_1aa4006b47b482e0730b8d4fcd76523710" compoundref="time__evt_8c" startline="53">time_evt_ctx_s::pLock</references>
        <references refid="structtime__evt__ctx__s_1aa18cab8ddb14dbbe722179b59f11eb94" compoundref="time__evt_8c" startline="52">time_evt_ctx_s::pCurrent</references>
        <references refid="group__time__evt_1ga6c1c724f4f79c767ab3269a3fe94048f" compoundref="port_8c" startline="92" endline="95">_timer_stop</references>
        <references refid="group__time__evt_1gab77e74a906fd2459377db9707b1494d6" compoundref="time__evt_8h" startline="50">TIME_EVT_ALARM_ID</references>
        <references refid="group__time__evt_1ga0d6fb4497d012663fd946c539eaf566b" compoundref="port_8c" startline="104" endline="107">_get_current_time_ms</references>
      </memberdef>
      <memberdef kind="function" id="group__time__evt_1ga37c8674ccfbb8dd46b1512ea6b1fb8b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TimeEvt_EventHandler</definition>
        <argsstring>(void)</argsstring>
        <name>TimeEvt_EventHandler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Callback handler on alarm interrupt. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/TimeEvt/src/time_evt.c" line="307" column="6" bodyfile="/home/nono/OpenWize/sources/Samples/TimeEvt/src/time_evt.c" bodystart="307" bodyend="355" declfile="/home/nono/OpenWize/sources/Samples/TimeEvt/include/time_evt.h" declline="108" declcolumn="6"/>
        <references refid="group__time__evt_1ga3010a0142990f4db0f2222c8cee7a517" compoundref="time__evt_8c" startline="60">sTimeEvtCtx</references>
        <references refid="structtime__evt__ctx__s_1aa4006b47b482e0730b8d4fcd76523710" compoundref="time__evt_8c" startline="53">time_evt_ctx_s::pLock</references>
        <references refid="structtime__evt__ctx__s_1aa18cab8ddb14dbbe722179b59f11eb94" compoundref="time__evt_8c" startline="52">time_evt_ctx_s::pCurrent</references>
        <references refid="group__time__evt_1ga0d6fb4497d012663fd946c539eaf566b" compoundref="port_8c" startline="104" endline="107">_get_current_time_ms</references>
      </memberdef>
      <memberdef kind="function" id="group__time__evt_1ga62b7c375a92c70697c2754804f902366" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _reset</definition>
        <argsstring>(struct time_evt_ctx_s *pCtx)</argsstring>
        <name>_reset</name>
        <param>
          <type>struct <ref refid="structtime__evt__ctx__s" kindref="compound">time_evt_ctx_s</ref> *</type>
          <declname>pCtx</declname>
        </param>
        <briefdescription>
<para>Reset the TimeEvt context. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pCtx</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer a TimeEvt context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/TimeEvt/src/time_evt.c" line="366" column="6" bodyfile="/home/nono/OpenWize/sources/Samples/TimeEvt/src/time_evt.c" bodystart="366" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="group__time__evt_1ga1fa2b7225235be88dc01b1a659691d56" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* _current</definition>
        <argsstring>(struct time_evt_ctx_s *pCtx)</argsstring>
        <name>_current</name>
        <param>
          <type>struct <ref refid="structtime__evt__ctx__s" kindref="compound">time_evt_ctx_s</ref> *</type>
          <declname>pCtx</declname>
        </param>
        <briefdescription>
<para>Get the pointer on the current timer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pCtx</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer a TimeEvt context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the pointer on the current timer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/TimeEvt/src/time_evt.c" line="382" column="7" bodyfile="/home/nono/OpenWize/sources/Samples/TimeEvt/src/time_evt.c" bodystart="382" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="group__time__evt_1ga8f00121aaaf593ce8fbed3a194f10a31" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _update</definition>
        <argsstring>(struct time_evt_ctx_s *pCtx, uint64_t u64Now)</argsstring>
        <name>_update</name>
        <param>
          <type>struct <ref refid="structtime__evt__ctx__s" kindref="compound">time_evt_ctx_s</ref> *</type>
          <declname>pCtx</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>u64Now</declname>
        </param>
        <briefdescription>
<para>Update the TimeEvt. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pCtx</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer a TimeEvt context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">u64Now</parametername>
</parameternamelist>
<parameterdescription>
<para>Current time to update with </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/TimeEvt/src/time_evt.c" line="395" column="6" bodyfile="/home/nono/OpenWize/sources/Samples/TimeEvt/src/time_evt.c" bodystart="395" bodyend="421"/>
      </memberdef>
      <memberdef kind="function" id="group__time__evt_1gaad5108930aa179c66dedbae8b5331149" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _insert</definition>
        <argsstring>(struct time_evt_ctx_s *pCtx, struct time_evt_s *pNew)</argsstring>
        <name>_insert</name>
        <param>
          <type>struct <ref refid="structtime__evt__ctx__s" kindref="compound">time_evt_ctx_s</ref> *</type>
          <declname>pCtx</declname>
        </param>
        <param>
          <type>struct <ref refid="structtime__evt__s" kindref="compound">time_evt_s</ref> *</type>
          <declname>pNew</declname>
        </param>
        <briefdescription>
<para>Insert a Timer from the TimeEvt. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pCtx</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer a TimeEvt context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pNew</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer on Timer to insert </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/TimeEvt/src/time_evt.c" line="431" column="6" bodyfile="/home/nono/OpenWize/sources/Samples/TimeEvt/src/time_evt.c" bodystart="431" bodyend="480"/>
      </memberdef>
      <memberdef kind="function" id="group__time__evt_1ga28778f2828b8d0d7d43fdc957159617f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _remove</definition>
        <argsstring>(struct time_evt_ctx_s *pCtx, struct time_evt_s *pDel)</argsstring>
        <name>_remove</name>
        <param>
          <type>struct <ref refid="structtime__evt__ctx__s" kindref="compound">time_evt_ctx_s</ref> *</type>
          <declname>pCtx</declname>
        </param>
        <param>
          <type>struct <ref refid="structtime__evt__s" kindref="compound">time_evt_s</ref> *</type>
          <declname>pDel</declname>
        </param>
        <briefdescription>
<para>Remove a Timer from the TimeEvt. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pCtx</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer a TimeEvt context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pDel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer on Timer to remove </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/TimeEvt/src/time_evt.c" line="490" column="6" bodyfile="/home/nono/OpenWize/sources/Samples/TimeEvt/src/time_evt.c" bodystart="490" bodyend="518"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This file implement a basic time event management. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para>2019, GRDF, Inc. All rights reserved.</para>
</simplesect>
Redistribution and use in source and binary forms, with or without modification, are permitted (subject to the limitations in the disclaimer below) provided that the following conditions are met:<itemizedlist>
<listitem><para>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</para>
</listitem><listitem><para>Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</para>
</listitem><listitem><para>Neither the name of GRDF, Inc. nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="par"><title>Revision history</title><para></para>
</simplesect>
<simplesect kind="par"><title>1.0.0 : 2020/09/09[GBI]</title><para>Initial version </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="36"><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="time__evt_8h" kindref="compound">time_evt.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;rtos_macro.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="structtime__evt__ctx__s" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtime__evt__ctx__s" kindref="compound">time_evt_ctx_s</ref></highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52" refid="structtime__evt__ctx__s_1aa18cab8ddb14dbbe722179b59f11eb94" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtime__evt__s" kindref="compound">time_evt_s</ref><sp/>*<ref refid="structtime__evt__ctx__s_1aa18cab8ddb14dbbe722179b59f11eb94" kindref="member">pCurrent</ref>;<sp/></highlight></codeline>
<codeline lineno="53" refid="structtime__evt__ctx__s_1aa4006b47b482e0730b8d4fcd76523710" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structtime__evt__ctx__s_1aa4006b47b482e0730b8d4fcd76523710" kindref="member">pLock</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54" refid="structtime__evt__ctx__s_1a3d9d7c566e5d202b06854f76f69aab47" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="structtime__evt__ctx__s_1a3d9d7c566e5d202b06854f76f69aab47" kindref="member">u64LastUpdate</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal">};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="group__time__evt_1ga3010a0142990f4db0f2222c8cee7a517" refkind="member"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtime__evt__ctx__s" kindref="compound">time_evt_ctx_s</ref><sp/><ref refid="group__time__evt_1ga3010a0142990f4db0f2222c8cee7a517" kindref="member">sTimeEvtCtx</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">SYS_MUTEX_CREATE_DEF(timeevt);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_reset(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtime__evt__ctx__s" kindref="compound">time_evt_ctx_s</ref><sp/>*pCtx);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>_current(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtime__evt__ctx__s" kindref="compound">time_evt_ctx_s</ref><sp/>*pCtx);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_update(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtime__evt__ctx__s" kindref="compound">time_evt_ctx_s</ref><sp/>*pCtx,<sp/>uint64_t<sp/>u64Now);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_insert(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtime__evt__ctx__s" kindref="compound">time_evt_ctx_s</ref><sp/>*pCtx,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtime__evt__s" kindref="compound">time_evt_s</ref><sp/>*pNew);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_remove(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtime__evt__ctx__s" kindref="compound">time_evt_ctx_s</ref><sp/>*pCtx,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtime__evt__s" kindref="compound">time_evt_s</ref><sp/>*pDel);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="comment">/******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor">#if<sp/>defined<sp/>(<sp/>__OS__<sp/>)<sp/>&amp;&amp;<sp/><sp/>(<sp/>OS_FreeRTOS<sp/>==<sp/>1<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">uint8_t<sp/><ref refid="group__time__evt_1ga7c59534f9e854577f5c3527ee579812a" kindref="member">TimeEvt_TimerInit</ref>(<ref refid="structtime__evt__s" kindref="compound">time_evt_t</ref><sp/>*pTimeEvt,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvTaskHandle,<sp/><ref refid="group__time__evt_1ga8fcf7b8fdc4fc8ab6ccc2d6a79de908e" kindref="member">time_evt_cfg_e</ref><sp/>eCfg)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="group__time__evt_1ga7c59534f9e854577f5c3527ee579812a" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="group__time__evt_1ga7c59534f9e854577f5c3527ee579812a" kindref="member">TimeEvt_TimerInit</ref>(<ref refid="structtime__evt__s" kindref="compound">time_evt_t</ref><sp/>*pTimeEvt,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*pvTaskHandle)(uint32_t<sp/>evt),<sp/><ref refid="group__time__evt_1ga8fcf7b8fdc4fc8ab6ccc2d6a79de908e" kindref="member">time_evt_cfg_e</ref><sp/>eCfg)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pTimeEvt<sp/>&amp;&amp;<sp/>pvTaskHandle)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTimeEvt-&gt;<ref refid="structtime__evt__s_1a943e74b5053c368d3b201d98b3590c8e" kindref="member">pNext</ref>)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_remove(&amp;<ref refid="group__time__evt_1ga3010a0142990f4db0f2222c8cee7a517" kindref="member">sTimeEvtCtx</ref>,<sp/>pTimeEvt);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pTimeEvt-&gt;<ref refid="structtime__evt__s_1a4a4abf75ade1c28cc77f5ca0af331e3e" kindref="member">eCfg</ref><sp/>=<sp/>eCfg;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pTimeEvt-&gt;<ref refid="structtime__evt__s_1a5b6714edfae9fc2e9b89f1adc8e1d9bf" kindref="member">u64InitVal</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pTimeEvt-&gt;<ref refid="structtime__evt__s_1a39578dde1bdc5d0218e7d1917efce072" kindref="member">u64Value</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pTimeEvt-&gt;<ref refid="structtime__evt__s_1a9ad1d379f74eab2100203cd898f86b79" kindref="member">u32Event</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pTimeEvt-&gt;<ref refid="structtime__evt__s_1add15c6e76a9b3b84af61a55083389d59" kindref="member">pvTaskHandle</ref><sp/>=<sp/>pvTaskHandle;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pTimeEvt-&gt;<ref refid="structtime__evt__s_1a943e74b5053c368d3b201d98b3590c8e" kindref="member">pNext</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="group__time__evt_1gac2dd6309cfdcb775e0dd564c7224293f" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="group__time__evt_1gac2dd6309cfdcb775e0dd564c7224293f" kindref="member">TimeEvt_TimerStart</ref>(<ref refid="structtime__evt__s" kindref="compound">time_evt_t</ref><sp/>*pTimeEvt,<sp/>uint32_t<sp/>u32Value,<sp/>int16_t<sp/>i16DeltaMs,<sp/>uint32_t<sp/>u32Event)</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>u64temp;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtime__evt__s" kindref="compound">time_evt_t</ref><sp/>*p<sp/>=<sp/>pTimeEvt;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>0<sp/>and<sp/>lesser<sp/>than<sp/>86399<sp/>second<sp/>(1<sp/>day<sp/>minus<sp/>1<sp/>second)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>u64temp<sp/>=<sp/>((uint64_t)u32Value)<sp/>*1000;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u64temp<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>(i16DeltaMs<sp/>&lt;<sp/>0)<sp/>)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>u64temp<sp/>+=<sp/>(int64_t)i16DeltaMs;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>p<sp/>&amp;&amp;<sp/>(p-&gt;<ref refid="structtime__evt__s_1a943e74b5053c368d3b201d98b3590c8e" kindref="member">pNext</ref><sp/>==<sp/>NULL)<sp/>)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structtime__evt__s_1a9ad1d379f74eab2100203cd898f86b79" kindref="member">u32Event</ref><sp/>=<sp/>u32Event;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structtime__evt__s_1a5b6714edfae9fc2e9b89f1adc8e1d9bf" kindref="member">u64InitVal</ref><sp/>=<sp/>u64temp;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structtime__evt__s_1a39578dde1bdc5d0218e7d1917efce072" kindref="member">u64Value</ref><sp/>=<sp/>u64temp;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys_mutex_acquire(<ref refid="group__time__evt_1ga3010a0142990f4db0f2222c8cee7a517" kindref="member">sTimeEvtCtx</ref>.<ref refid="structtime__evt__ctx__s_1aa4006b47b482e0730b8d4fcd76523710" kindref="member">pLock</ref>,<sp/>0xFFFFFFFF);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>Alarm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__time__evt_1ga6c1c724f4f79c767ab3269a3fe94048f" kindref="member">_timer_stop</ref>(<ref refid="group__time__evt_1gab77e74a906fd2459377db9707b1494d6" kindref="member">TIME_EVT_ALARM_ID</ref>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__time__evt_1ga0d6fb4497d012663fd946c539eaf566b" kindref="member">_get_current_time_ms</ref>(&amp;u64temp);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_update(&amp;<ref refid="group__time__evt_1ga3010a0142990f4db0f2222c8cee7a517" kindref="member">sTimeEvtCtx</ref>,<sp/>u64temp);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>case<sp/>not<sp/>absolute<sp/>(so<sp/>elapse)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>p-&gt;<ref refid="structtime__evt__s_1a4a4abf75ade1c28cc77f5ca0af331e3e" kindref="member">eCfg</ref><sp/>==<sp/><ref refid="group__time__evt_1gga8fcf7b8fdc4fc8ab6ccc2d6a79de908ea5ffe0e166fab6df0f135d35aeedd1843" kindref="member">TIMEEVT_CFG_ABSOLUTE</ref>)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Current<sp/>Epoch<sp/>is<sp/>before<sp/>given<sp/>absolute<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>p-&gt;<ref refid="structtime__evt__s_1a39578dde1bdc5d0218e7d1917efce072" kindref="member">u64Value</ref><sp/>&gt;<sp/>u64temp<sp/>)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structtime__evt__s_1a39578dde1bdc5d0218e7d1917efce072" kindref="member">u64Value</ref><sp/>-=<sp/>u64temp;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>given<sp/>absolute<sp/>value<sp/>is<sp/>in<sp/>the<sp/>passed<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_insert(&amp;<ref refid="group__time__evt_1ga3010a0142990f4db0f2222c8cee7a517" kindref="member">sTimeEvtCtx</ref>,<sp/>p);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__time__evt_1ga3010a0142990f4db0f2222c8cee7a517" kindref="member">sTimeEvtCtx</ref>.<ref refid="structtime__evt__ctx__s_1aa18cab8ddb14dbbe722179b59f11eb94" kindref="member">pCurrent</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__time__evt_1gafbc6452a8c175120e44b77c205276da8" kindref="member">_timer_start</ref>(<ref refid="group__time__evt_1gab77e74a906fd2459377db9707b1494d6" kindref="member">TIME_EVT_ALARM_ID</ref>,<sp/><ref refid="group__time__evt_1ga3010a0142990f4db0f2222c8cee7a517" kindref="member">sTimeEvtCtx</ref>.<ref refid="structtime__evt__ctx__s_1aa18cab8ddb14dbbe722179b59f11eb94" kindref="member">pCurrent</ref>-&gt;<ref refid="structtime__evt__s_1a39578dde1bdc5d0218e7d1917efce072" kindref="member">u64Value</ref>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys_mutex_release(<ref refid="group__time__evt_1ga3010a0142990f4db0f2222c8cee7a517" kindref="member">sTimeEvtCtx</ref>.<ref refid="structtime__evt__ctx__s_1aa4006b47b482e0730b8d4fcd76523710" kindref="member">pLock</ref>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="group__time__evt_1gac722a1c1aba48d94eca9fa649594a93d" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__time__evt_1gac722a1c1aba48d94eca9fa649594a93d" kindref="member">TimeEvt_TimerStop</ref>(<ref refid="structtime__evt__s" kindref="compound">time_evt_t</ref><sp/>*pTimeEvt)</highlight></codeline>
<codeline lineno="186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>u64Now;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTimeEvt)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys_mutex_acquire(<ref refid="group__time__evt_1ga3010a0142990f4db0f2222c8cee7a517" kindref="member">sTimeEvtCtx</ref>.<ref refid="structtime__evt__ctx__s_1aa4006b47b482e0730b8d4fcd76523710" kindref="member">pLock</ref>,<sp/>0xFFFFFFFF);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="group__time__evt_1ga3010a0142990f4db0f2222c8cee7a517" kindref="member">sTimeEvtCtx</ref>.<ref refid="structtime__evt__ctx__s_1aa18cab8ddb14dbbe722179b59f11eb94" kindref="member">pCurrent</ref><sp/>==<sp/>pTimeEvt)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__time__evt_1ga6c1c724f4f79c767ab3269a3fe94048f" kindref="member">_timer_stop</ref>(<ref refid="group__time__evt_1gab77e74a906fd2459377db9707b1494d6" kindref="member">TIME_EVT_ALARM_ID</ref>);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__time__evt_1ga3010a0142990f4db0f2222c8cee7a517" kindref="member">sTimeEvtCtx</ref>.<ref refid="structtime__evt__ctx__s_1aa18cab8ddb14dbbe722179b59f11eb94" kindref="member">pCurrent</ref><sp/>=<sp/><ref refid="group__time__evt_1ga3010a0142990f4db0f2222c8cee7a517" kindref="member">sTimeEvtCtx</ref>.<ref refid="structtime__evt__ctx__s_1aa18cab8ddb14dbbe722179b59f11eb94" kindref="member">pCurrent</ref>-&gt;<ref refid="structtime__evt__s_1a943e74b5053c368d3b201d98b3590c8e" kindref="member">pNext</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pTimeEvt-&gt;<ref refid="structtime__evt__s_1a943e74b5053c368d3b201d98b3590c8e" kindref="member">pNext</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__time__evt_1ga0d6fb4497d012663fd946c539eaf566b" kindref="member">_get_current_time_ms</ref>(&amp;u64Now);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_update(&amp;<ref refid="group__time__evt_1ga3010a0142990f4db0f2222c8cee7a517" kindref="member">sTimeEvtCtx</ref>,<sp/>u64Now);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__time__evt_1ga3010a0142990f4db0f2222c8cee7a517" kindref="member">sTimeEvtCtx</ref>.<ref refid="structtime__evt__ctx__s_1aa18cab8ddb14dbbe722179b59f11eb94" kindref="member">pCurrent</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__time__evt_1gafbc6452a8c175120e44b77c205276da8" kindref="member">_timer_start</ref>(<ref refid="group__time__evt_1gab77e74a906fd2459377db9707b1494d6" kindref="member">TIME_EVT_ALARM_ID</ref>,<sp/><ref refid="group__time__evt_1ga3010a0142990f4db0f2222c8cee7a517" kindref="member">sTimeEvtCtx</ref>.<ref refid="structtime__evt__ctx__s_1aa18cab8ddb14dbbe722179b59f11eb94" kindref="member">pCurrent</ref>-&gt;<ref refid="structtime__evt__s_1a39578dde1bdc5d0218e7d1917efce072" kindref="member">u64Value</ref>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_remove(&amp;<ref refid="group__time__evt_1ga3010a0142990f4db0f2222c8cee7a517" kindref="member">sTimeEvtCtx</ref>,<sp/>pTimeEvt);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys_mutex_release(<ref refid="group__time__evt_1ga3010a0142990f4db0f2222c8cee7a517" kindref="member">sTimeEvtCtx</ref>.<ref refid="structtime__evt__ctx__s_1aa4006b47b482e0730b8d4fcd76523710" kindref="member">pLock</ref>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="group__time__evt_1ga648724158b910c64f69643f9ea250a1e" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__time__evt_1ga648724158b910c64f69643f9ea250a1e" kindref="member">TimeEvt_Setup</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>mutex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__time__evt_1ga3010a0142990f4db0f2222c8cee7a517" kindref="member">sTimeEvtCtx</ref>.<ref refid="structtime__evt__ctx__s_1aa4006b47b482e0730b8d4fcd76523710" kindref="member">pLock</ref><sp/>=<sp/>SYS_MUTEX_CREATE_CALL(timeevt);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="group__time__evt_1ga3010a0142990f4db0f2222c8cee7a517" kindref="member">sTimeEvtCtx</ref>.<ref refid="structtime__evt__ctx__s_1aa4006b47b482e0730b8d4fcd76523710" kindref="member">pLock</ref>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__time__evt_1ga7c1dbc42a9f86f4a0fad9ebd8a97f0df" kindref="member">TimeEvt_Init</ref>();</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>register<sp/>RTC<sp/>Alarm<sp/>cb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__time__evt_1gac1e60744a3a1ed20486a3e2369b0372c" kindref="member">_timer_set_handler</ref>(<ref refid="group__time__evt_1gab77e74a906fd2459377db9707b1494d6" kindref="member">TIME_EVT_ALARM_ID</ref>,<sp/><ref refid="group__time__evt_1ga37c8674ccfbb8dd46b1512ea6b1fb8b9" kindref="member">TimeEvt_EventHandler</ref>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="233" refid="group__time__evt_1ga7c1dbc42a9f86f4a0fad9ebd8a97f0df" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__time__evt_1ga7c1dbc42a9f86f4a0fad9ebd8a97f0df" kindref="member">TimeEvt_Init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="234"><highlight class="normal">{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>Alarm<sp/>(just<sp/>to<sp/>be<sp/>sure)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__time__evt_1ga6c1c724f4f79c767ab3269a3fe94048f" kindref="member">_timer_stop</ref>(<ref refid="group__time__evt_1gab77e74a906fd2459377db9707b1494d6" kindref="member">TIME_EVT_ALARM_ID</ref>);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>the<sp/>internal<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>_reset(&amp;<ref refid="group__time__evt_1ga3010a0142990f4db0f2222c8cee7a517" kindref="member">sTimeEvtCtx</ref>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="group__time__evt_1gafa337b1821d93adc27263524dc349444" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__time__evt_1gafa337b1821d93adc27263524dc349444" kindref="member">TimeEvt_UpdateTime</ref>(time_t<sp/>t)</highlight></codeline>
<codeline lineno="249"><highlight class="normal">{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>u64TimeMs;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtime__evt__s" kindref="compound">time_evt_s</ref><sp/>*p;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>sys_mutex_acquire(<ref refid="group__time__evt_1ga3010a0142990f4db0f2222c8cee7a517" kindref="member">sTimeEvtCtx</ref>.<ref refid="structtime__evt__ctx__s_1aa4006b47b482e0730b8d4fcd76523710" kindref="member">pLock</ref>,<sp/>0xFFFFFFFF);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sys_mutex_acquire_isr(sTimeEvtCtx.pLock);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/><ref refid="group__time__evt_1ga3010a0142990f4db0f2222c8cee7a517" kindref="member">sTimeEvtCtx</ref>.<ref refid="structtime__evt__ctx__s_1aa18cab8ddb14dbbe722179b59f11eb94" kindref="member">pCurrent</ref>;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__time__evt_1ga6c1c724f4f79c767ab3269a3fe94048f" kindref="member">_timer_stop</ref>(<ref refid="group__time__evt_1gab77e74a906fd2459377db9707b1494d6" kindref="member">TIME_EVT_ALARM_ID</ref>);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>timers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__time__evt_1ga0d6fb4497d012663fd946c539eaf566b" kindref="member">_get_current_time_ms</ref>(&amp;u64TimeMs);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_update(&amp;<ref refid="group__time__evt_1ga3010a0142990f4db0f2222c8cee7a517" kindref="member">sTimeEvtCtx</ref>,<sp/>u64TimeMs);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u64TimeMs<sp/>=<sp/>(uint64_t)t<sp/>*<sp/>1000;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>absolute<sp/>timers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(p<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structtime__evt__s_1a4a4abf75ade1c28cc77f5ca0af331e3e" kindref="member">eCfg</ref><sp/>==<sp/><ref refid="group__time__evt_1gga8fcf7b8fdc4fc8ab6ccc2d6a79de908ea5ffe0e166fab6df0f135d35aeedd1843" kindref="member">TIMEEVT_CFG_ABSOLUTE</ref>)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structtime__evt__s_1a5b6714edfae9fc2e9b89f1adc8e1d9bf" kindref="member">u64InitVal</ref><sp/>&gt;<sp/>u64TimeMs)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structtime__evt__s_1a39578dde1bdc5d0218e7d1917efce072" kindref="member">u64Value</ref><sp/>=<sp/>p-&gt;<ref refid="structtime__evt__s_1a5b6714edfae9fc2e9b89f1adc8e1d9bf" kindref="member">u64InitVal</ref><sp/>-<sp/>u64TimeMs;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structtime__evt__s_1a39578dde1bdc5d0218e7d1917efce072" kindref="member">u64Value</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>p-&gt;<ref refid="structtime__evt__s_1a943e74b5053c368d3b201d98b3590c8e" kindref="member">pNext</ref>;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>ref.<sp/>time<sp/>with<sp/>the<sp/>new<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__time__evt_1ga3010a0142990f4db0f2222c8cee7a517" kindref="member">sTimeEvtCtx</ref>.<ref refid="structtime__evt__ctx__s_1a3d9d7c566e5d202b06854f76f69aab47" kindref="member">u64LastUpdate</ref><sp/>=<sp/>u64TimeMs;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>new<sp/>clock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__time__evt_1gae10a92692d7f8012be47ddd538ecc644" kindref="member">_set_current_time</ref>(t);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Restart<sp/>Alarm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/><ref refid="group__time__evt_1ga3010a0142990f4db0f2222c8cee7a517" kindref="member">sTimeEvtCtx</ref>.<ref refid="structtime__evt__ctx__s_1aa18cab8ddb14dbbe722179b59f11eb94" kindref="member">pCurrent</ref>;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__time__evt_1gafbc6452a8c175120e44b77c205276da8" kindref="member">_timer_start</ref>(<ref refid="group__time__evt_1gab77e74a906fd2459377db9707b1494d6" kindref="member">TIME_EVT_ALARM_ID</ref>,<sp/>p-&gt;<ref refid="structtime__evt__s_1a39578dde1bdc5d0218e7d1917efce072" kindref="member">u64Value</ref>);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>sys_mutex_release(<ref refid="group__time__evt_1ga3010a0142990f4db0f2222c8cee7a517" kindref="member">sTimeEvtCtx</ref>.<ref refid="structtime__evt__ctx__s_1aa4006b47b482e0730b8d4fcd76523710" kindref="member">pLock</ref>);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sys_mutex_release_isr(sTimeEvtCtx.pLock);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="group__time__evt_1ga37c8674ccfbb8dd46b1512ea6b1fb8b9" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__time__evt_1ga37c8674ccfbb8dd46b1512ea6b1fb8b9" kindref="member">TimeEvt_EventHandler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="308"><highlight class="normal">{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtime__evt__s" kindref="compound">time_evt_t</ref><sp/>*pCurrent,<sp/>*p;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>u64Now;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>sys_mutex_acquire_isr(<ref refid="group__time__evt_1ga3010a0142990f4db0f2222c8cee7a517" kindref="member">sTimeEvtCtx</ref>.<ref refid="structtime__evt__ctx__s_1aa4006b47b482e0730b8d4fcd76523710" kindref="member">pLock</ref>);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__time__evt_1ga3010a0142990f4db0f2222c8cee7a517" kindref="member">sTimeEvtCtx</ref>.<ref refid="structtime__evt__ctx__s_1aa18cab8ddb14dbbe722179b59f11eb94" kindref="member">pCurrent</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__time__evt_1ga0d6fb4497d012663fd946c539eaf566b" kindref="member">_get_current_time_ms</ref>(&amp;u64Now);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_update(&amp;<ref refid="group__time__evt_1ga3010a0142990f4db0f2222c8cee7a517" kindref="member">sTimeEvtCtx</ref>,<sp/>u64Now);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>the<sp/>pCurrent-&gt;u32Value<sp/>=<sp/>0<sp/>and<sp/>potentially<sp/>other<sp/>ones</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCurrent<sp/>=<sp/><ref refid="group__time__evt_1ga3010a0142990f4db0f2222c8cee7a517" kindref="member">sTimeEvtCtx</ref>.<ref refid="structtime__evt__ctx__s_1aa18cab8ddb14dbbe722179b59f11eb94" kindref="member">pCurrent</ref>;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>pCurrent;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCurrent<sp/>=<sp/>pCurrent-&gt;<ref refid="structtime__evt__s_1a943e74b5053c368d3b201d98b3590c8e" kindref="member">pNext</ref>;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structtime__evt__s_1a39578dde1bdc5d0218e7d1917efce072" kindref="member">u64Value</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Notify<sp/>task<sp/>with<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structtime__evt__s_1add15c6e76a9b3b84af61a55083389d59" kindref="member">pvTaskHandle</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(<sp/>__OS__<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>OS_FreeRTOS<sp/>==<sp/>1<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys_flag_set_isr(p-&gt;<ref refid="structtime__evt__s_1add15c6e76a9b3b84af61a55083389d59" kindref="member">pvTaskHandle</ref>,<sp/>p-&gt;<ref refid="structtime__evt__s_1a9ad1d379f74eab2100203cd898f86b79" kindref="member">u32Event</ref>);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structtime__evt__s_1add15c6e76a9b3b84af61a55083389d59" kindref="member">pvTaskHandle</ref>(p-&gt;<ref refid="structtime__evt__s_1a9ad1d379f74eab2100203cd898f86b79" kindref="member">u32Event</ref>);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_remove(&amp;<ref refid="group__time__evt_1ga3010a0142990f4db0f2222c8cee7a517" kindref="member">sTimeEvtCtx</ref>,<sp/>p);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>is<sp/>periodic,<sp/>reprogram<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>p-&gt;<ref refid="structtime__evt__s_1a4a4abf75ade1c28cc77f5ca0af331e3e" kindref="member">eCfg</ref><sp/>==<sp/><sp/><ref refid="group__time__evt_1gga8fcf7b8fdc4fc8ab6ccc2d6a79de908ea86a9a31f083e8d63acb0854692db0515" kindref="member">TIMEEVT_CFG_PERIODIC</ref>)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structtime__evt__s_1a39578dde1bdc5d0218e7d1917efce072" kindref="member">u64Value</ref><sp/>=<sp/>p-&gt;<ref refid="structtime__evt__s_1a5b6714edfae9fc2e9b89f1adc8e1d9bf" kindref="member">u64InitVal</ref>;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_insert(&amp;<ref refid="group__time__evt_1ga3010a0142990f4db0f2222c8cee7a517" kindref="member">sTimeEvtCtx</ref>,<sp/>p);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCurrent<sp/>=<sp/><ref refid="group__time__evt_1ga3010a0142990f4db0f2222c8cee7a517" kindref="member">sTimeEvtCtx</ref>.<ref refid="structtime__evt__ctx__s_1aa18cab8ddb14dbbe722179b59f11eb94" kindref="member">pCurrent</ref>;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pCurrent<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__time__evt_1ga3010a0142990f4db0f2222c8cee7a517" kindref="member">sTimeEvtCtx</ref>.<ref refid="structtime__evt__ctx__s_1aa18cab8ddb14dbbe722179b59f11eb94" kindref="member">pCurrent</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__time__evt_1gafbc6452a8c175120e44b77c205276da8" kindref="member">_timer_start</ref>(<ref refid="group__time__evt_1gab77e74a906fd2459377db9707b1494d6" kindref="member">TIME_EVT_ALARM_ID</ref>,<sp/><ref refid="group__time__evt_1ga3010a0142990f4db0f2222c8cee7a517" kindref="member">sTimeEvtCtx</ref>.<ref refid="structtime__evt__ctx__s_1aa18cab8ddb14dbbe722179b59f11eb94" kindref="member">pCurrent</ref>-&gt;<ref refid="structtime__evt__s_1a39578dde1bdc5d0218e7d1917efce072" kindref="member">u64Value</ref>);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__time__evt_1ga6c1c724f4f79c767ab3269a3fe94048f" kindref="member">_timer_stop</ref>(<ref refid="group__time__evt_1gab77e74a906fd2459377db9707b1494d6" kindref="member">TIME_EVT_ALARM_ID</ref>);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>sys_mutex_release_isr(<ref refid="group__time__evt_1ga3010a0142990f4db0f2222c8cee7a517" kindref="member">sTimeEvtCtx</ref>.<ref refid="structtime__evt__ctx__s_1aa4006b47b482e0730b8d4fcd76523710" kindref="member">pLock</ref>);</highlight></codeline>
<codeline lineno="355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_reset(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtime__evt__ctx__s" kindref="compound">time_evt_ctx_s</ref><sp/>*pCtx)</highlight></codeline>
<codeline lineno="367"><highlight class="normal">{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCtx)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCtx-&gt;<ref refid="structtime__evt__ctx__s_1aa18cab8ddb14dbbe722179b59f11eb94" kindref="member">pCurrent</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCtx-&gt;<ref refid="structtime__evt__ctx__s_1a3d9d7c566e5d202b06854f76f69aab47" kindref="member">u64LastUpdate</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>_current(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtime__evt__ctx__s" kindref="compound">time_evt_ctx_s</ref><sp/>*pCtx)</highlight></codeline>
<codeline lineno="383"><highlight class="normal">{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(pCtx-&gt;<ref refid="structtime__evt__ctx__s_1aa18cab8ddb14dbbe722179b59f11eb94" kindref="member">pCurrent</ref>);</highlight></codeline>
<codeline lineno="385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_update(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtime__evt__ctx__s" kindref="compound">time_evt_ctx_s</ref><sp/>*pCtx,<sp/>uint64_t<sp/>u64Now)</highlight></codeline>
<codeline lineno="396"><highlight class="normal">{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtime__evt__s" kindref="compound">time_evt_s</ref><sp/>*p;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>u64Delta;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>pCtx-&gt;<ref refid="structtime__evt__ctx__s_1aa18cab8ddb14dbbe722179b59f11eb94" kindref="member">pCurrent</ref>;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCtx-&gt;<ref refid="structtime__evt__ctx__s_1a3d9d7c566e5d202b06854f76f69aab47" kindref="member">u64LastUpdate</ref><sp/>=<sp/>u64Now;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>u64Delta<sp/>=<sp/>u64Now<sp/>-<sp/>pCtx-&gt;<ref refid="structtime__evt__ctx__s_1a3d9d7c566e5d202b06854f76f69aab47" kindref="member">u64LastUpdate</ref>;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>u64Delta<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(p<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structtime__evt__s_1a39578dde1bdc5d0218e7d1917efce072" kindref="member">u64Value</ref><sp/>&gt;=<sp/>u64Delta)</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structtime__evt__s_1a39578dde1bdc5d0218e7d1917efce072" kindref="member">u64Value</ref><sp/>-=<sp/>u64Delta;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structtime__evt__s_1a39578dde1bdc5d0218e7d1917efce072" kindref="member">u64Value</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>p-&gt;<ref refid="structtime__evt__s_1a943e74b5053c368d3b201d98b3590c8e" kindref="member">pNext</ref>;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>pCtx-&gt;<ref refid="structtime__evt__ctx__s_1a3d9d7c566e5d202b06854f76f69aab47" kindref="member">u64LastUpdate</ref><sp/>=<sp/>u64Now;</highlight></codeline>
<codeline lineno="421"><highlight class="normal">}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_insert(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtime__evt__ctx__s" kindref="compound">time_evt_ctx_s</ref><sp/>*pCtx,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtime__evt__s" kindref="compound">time_evt_s</ref><sp/>*pNew)</highlight></codeline>
<codeline lineno="432"><highlight class="normal">{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtime__evt__s" kindref="compound">time_evt_s</ref><sp/>*pCurrent,<sp/>*p;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pNew<sp/>==<sp/>NULL)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>pCurrent<sp/>=<sp/>pCtx-&gt;<ref refid="structtime__evt__ctx__s_1aa18cab8ddb14dbbe722179b59f11eb94" kindref="member">pCurrent</ref>;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pCurrent)<sp/></highlight><highlight class="comment">//<sp/>at<sp/>least<sp/>one<sp/>element<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>pCurrent;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(pCurrent<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>insert<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNew-&gt;<ref refid="structtime__evt__s_1a39578dde1bdc5d0218e7d1917efce072" kindref="member">u64Value</ref><sp/>&lt;<sp/>pCurrent-&gt;<ref refid="structtime__evt__s_1a39578dde1bdc5d0218e7d1917efce072" kindref="member">u64Value</ref>)</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCurrent<sp/>==<sp/>p)<sp/></highlight><highlight class="comment">//<sp/>no<sp/>predecessor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNew-&gt;<ref refid="structtime__evt__s_1a943e74b5053c368d3b201d98b3590c8e" kindref="member">pNext</ref><sp/>=<sp/>pCurrent;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCtx-&gt;<ref refid="structtime__evt__ctx__s_1aa18cab8ddb14dbbe722179b59f11eb94" kindref="member">pCurrent</ref><sp/>=<sp/>pNew;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNew-&gt;<ref refid="structtime__evt__s_1a943e74b5053c368d3b201d98b3590c8e" kindref="member">pNext</ref><sp/>=<sp/>p-&gt;<ref refid="structtime__evt__s_1a943e74b5053c368d3b201d98b3590c8e" kindref="member">pNext</ref>;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structtime__evt__s_1a943e74b5053c368d3b201d98b3590c8e" kindref="member">pNext</ref><sp/>=<sp/>pNew;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>insert<sp/>after</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCurrent-&gt;<ref refid="structtime__evt__s_1a943e74b5053c368d3b201d98b3590c8e" kindref="member">pNext</ref><sp/>==<sp/>NULL)<sp/></highlight><highlight class="comment">//<sp/>no<sp/>successor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCurrent-&gt;<ref refid="structtime__evt__s_1a943e74b5053c368d3b201d98b3590c8e" kindref="member">pNext</ref><sp/>=<sp/>pNew;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNew-&gt;<ref refid="structtime__evt__s_1a943e74b5053c368d3b201d98b3590c8e" kindref="member">pNext</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>pCurrent;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCurrent<sp/>=<sp/>pCurrent-&gt;<ref refid="structtime__evt__s_1a943e74b5053c368d3b201d98b3590c8e" kindref="member">pNext</ref>;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>the<sp/>list<sp/>is<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNew-&gt;<ref refid="structtime__evt__s_1a943e74b5053c368d3b201d98b3590c8e" kindref="member">pNext</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCtx-&gt;<ref refid="structtime__evt__ctx__s_1aa18cab8ddb14dbbe722179b59f11eb94" kindref="member">pCurrent</ref><sp/>=<sp/>pNew;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal">}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_remove(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtime__evt__ctx__s" kindref="compound">time_evt_ctx_s</ref><sp/>*pCtx,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtime__evt__s" kindref="compound">time_evt_s</ref><sp/>*pDel)</highlight></codeline>
<codeline lineno="491"><highlight class="normal">{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtime__evt__s" kindref="compound">time_evt_s</ref><sp/>*p;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pDel<sp/>==<sp/>NULL)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>pCtx-&gt;<ref refid="structtime__evt__ctx__s_1aa18cab8ddb14dbbe722179b59f11eb94" kindref="member">pCurrent</ref>;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>p<sp/>==<sp/>pDel)</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCtx-&gt;<ref refid="structtime__evt__ctx__s_1aa18cab8ddb14dbbe722179b59f11eb94" kindref="member">pCurrent</ref><sp/>=<sp/>pCtx-&gt;<ref refid="structtime__evt__ctx__s_1aa18cab8ddb14dbbe722179b59f11eb94" kindref="member">pCurrent</ref>-&gt;<ref refid="structtime__evt__s_1a943e74b5053c368d3b201d98b3590c8e" kindref="member">pNext</ref>;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pDel-&gt;<ref refid="structtime__evt__s_1a943e74b5053c368d3b201d98b3590c8e" kindref="member">pNext</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structtime__evt__s_1a943e74b5053c368d3b201d98b3590c8e" kindref="member">pNext</ref><sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pDel<sp/>==<sp/>p-&gt;<ref refid="structtime__evt__s_1a943e74b5053c368d3b201d98b3590c8e" kindref="member">pNext</ref>)</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structtime__evt__s_1a943e74b5053c368d3b201d98b3590c8e" kindref="member">pNext</ref><sp/>=<sp/>p-&gt;<ref refid="structtime__evt__s_1a943e74b5053c368d3b201d98b3590c8e" kindref="member">pNext</ref>-&gt;<ref refid="structtime__evt__s_1a943e74b5053c368d3b201d98b3590c8e" kindref="member">pNext</ref>;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pDel-&gt;<ref refid="structtime__evt__s_1a943e74b5053c368d3b201d98b3590c8e" kindref="member">pNext</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>p-&gt;<ref refid="structtime__evt__s_1a943e74b5053c368d3b201d98b3590c8e" kindref="member">pNext</ref>;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>else,<sp/>list<sp/>is<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal">}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal">}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/nono/OpenWize/sources/Samples/TimeEvt/src/time_evt.c"/>
  </compounddef>
</doxygen>
