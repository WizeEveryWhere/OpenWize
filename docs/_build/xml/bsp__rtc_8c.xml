<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="bsp__rtc_8c" kind="file" language="C++">
    <compoundname>bsp_rtc.c</compoundname>
    <includes refid="bsp__rtc_8h" local="yes">bsp_rtc.h</includes>
    <includes refid="platform_8h" local="yes">platform.h</includes>
    <includes local="no">stm32l4xx_hal.h</includes>
    <incdepgraph>
      <node id="5">
        <label>stdbool.h</label>
      </node>
      <node id="8">
        <label>assert.h</label>
      </node>
      <node id="6">
        <label>stdint.h</label>
      </node>
      <node id="3">
        <label>common.h</label>
        <link refid="common_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c</label>
        <link refid="bsp__rtc_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>stm32l4xx_hal.h</label>
      </node>
      <node id="2">
        <label>bsp_rtc.h</label>
        <link refid="bsp__rtc_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>stddef.h</label>
      </node>
      <node id="9">
        <label>time.h</label>
      </node>
      <node id="11">
        <label>platform.h</label>
        <link refid="platform_8h"/>
      </node>
      <node id="4">
        <label>stdio.h</label>
      </node>
      <node id="10">
        <label>machine/endian.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__rtc_1gaa0c7fca836406ade332e1e3f1039d8ab" prot="public" static="no" mutable="no">
        <type>RTC_HandleTypeDef</type>
        <definition>RTC_HandleTypeDef hrtc</definition>
        <argsstring></argsstring>
        <name>hrtc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" line="62" column="26" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/board/src/main.c" bodystart="45" bodyend="-1" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" declline="62" declcolumn="26"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__rtc_1ga1730ffe1e560465665eb47d9264826f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Error_Handler</definition>
        <argsstring>(void)</argsstring>
        <name>Error_Handler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function is executed in case of error occurrence. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" line="61" column="13" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/board/src/main.c" bodystart="459" bodyend="465" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" declline="61" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__rtc_1ga3a4fdb29a6a1305de7d494d9f8b8c1b4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void _rtc_wakeUptimer_handler_</definition>
        <argsstring>(void)</argsstring>
        <name>_rtc_wakeUptimer_handler_</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function is default RTC wake-up timer interrupt handler. </para>
        </briefdescription>
        <detaileddescription>
<para>When wake-up interrupt occurs, both pfUpdateTimeCallBack and pfWakeUpTimerCallBack callback function will be called. The first one is intended to treat the time update (time management). The second one is free to be used. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" line="612" column="13" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" bodystart="612" bodyend="624" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" declline="64" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__rtc_1gab8bf69f4d3224c022cba0f705b7ae730" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BSP_Rtc_Setup_Clk</definition>
        <argsstring>(uint32_t clock_sel)</argsstring>
        <name>BSP_Rtc_Setup_Clk</name>
        <param>
          <type>uint32_t</type>
          <declname>clock_sel</declname>
        </param>
        <briefdescription>
<para>This function setup the RTC clock. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">clock_sel</parametername>
</parameternamelist>
<parameterdescription>
<para>RTC clock selection</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" line="75" column="6" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" bodystart="75" bodyend="84" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/include/bsp_rtc.h" declline="64" declcolumn="6"/>
        <references refid="group__rtc_1ga1730ffe1e560465665eb47d9264826f9" compoundref="main_8c" startline="459" endline="465">Error_Handler</references>
      </memberdef>
      <memberdef kind="function" id="group__rtc_1ga09bcac38c2d28b6a7d5826d64f8ee3bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BSP_Rtc_Setup</definition>
        <argsstring>(uint16_t div_s, uint8_t div_a)</argsstring>
        <name>BSP_Rtc_Setup</name>
        <param>
          <type>uint16_t</type>
          <declname>div_s</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>div_a</declname>
        </param>
        <briefdescription>
<para>This function setup the RTC divider. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">div_s</parametername>
</parameternamelist>
<parameterdescription>
<para>DIV_S factor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">div_a</parametername>
</parameternamelist>
<parameterdescription>
<para>DIV_A factor</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" line="95" column="6" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" bodystart="95" bodyend="115" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/include/bsp_rtc.h" declline="65" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__rtc_1ga6823644967f78ea14d790e3ce73f2070" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BSP_Rtc_Backup_Write</definition>
        <argsstring>(uint32_t regNum, uint32_t data)</argsstring>
        <name>BSP_Rtc_Backup_Write</name>
        <param>
          <type>uint32_t</type>
          <declname>regNum</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>This function write to backup register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">regNum</parametername>
</parameternamelist>
<parameterdescription>
<para>The backup register numbre to write </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to write in</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" line="127" column="6" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" bodystart="127" bodyend="130" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/include/bsp_rtc.h" declline="67" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__rtc_1gaee49ea5a4d64ef1a312a3ad61c2e5c10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t BSP_Rtc_Backup_Read</definition>
        <argsstring>(uint32_t regNum)</argsstring>
        <name>BSP_Rtc_Backup_Read</name>
        <param>
          <type>uint32_t</type>
          <declname>regNum</declname>
        </param>
        <briefdescription>
<para>This function read from backup register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">regNum</parametername>
</parameternamelist>
<parameterdescription>
<para>The backup register numbre to read from</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The read value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" line="140" column="10" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" bodystart="140" bodyend="143" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/include/bsp_rtc.h" declline="68" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__rtc_1ga0600d5f526280d68aa124253fc6645f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BSP_Rtc_Time_Write</definition>
        <argsstring>(time_t t)</argsstring>
        <name>BSP_Rtc_Time_Write</name>
        <param>
          <type>time_t</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>This function set the current time. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">t</parametername>
</parameternamelist>
<parameterdescription>
<para>The current time to set (in epoch)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" line="154" column="6" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" bodystart="154" bodyend="183" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/include/bsp_rtc.h" declline="70" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__rtc_1gac7439f52ab0bc674c01377181ff8f889" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BSP_Rtc_Time_ReadMicro</definition>
        <argsstring>(struct timeval *tp)</argsstring>
        <name>BSP_Rtc_Time_ReadMicro</name>
        <param>
          <type>struct timeval *</type>
          <declname>tp</declname>
        </param>
        <briefdescription>
<para>This function read the current time. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">tp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer on timeval structure to hold the read time</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" line="193" column="6" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" bodystart="193" bodyend="216" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/include/bsp_rtc.h" declline="71" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__rtc_1ga0b0ef3fc21a1fa5d69867f5e3ed33245" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t BSP_Rtc_Time_GetEpochMs</definition>
        <argsstring>(void)</argsstring>
        <name>BSP_Rtc_Time_GetEpochMs</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function get the millisecond epoch time. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the millisecond epoch time </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" line="224" column="10" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" bodystart="224" bodyend="229" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/include/bsp_rtc.h" declline="72" declcolumn="10"/>
        <references refid="group__rtc_1gac7439f52ab0bc674c01377181ff8f889" compoundref="bsp__rtc_8c" startline="193" endline="216">BSP_Rtc_Time_ReadMicro</references>
      </memberdef>
      <memberdef kind="function" id="group__rtc_1ga308138e3762b39d75a5ed67cd99b392a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>time_t</type>
        <definition>time_t BSP_Rtc_Time_Read</definition>
        <argsstring>(void)</argsstring>
        <name>BSP_Rtc_Time_Read</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function get the epoch time. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the epoch time </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" line="237" column="8" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" bodystart="237" bodyend="242" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/include/bsp_rtc.h" declline="73" declcolumn="8"/>
        <references refid="group__rtc_1gac7439f52ab0bc674c01377181ff8f889" compoundref="bsp__rtc_8c" startline="193" endline="216">BSP_Rtc_Time_ReadMicro</references>
      </memberdef>
      <memberdef kind="function" id="group__rtc_1ga606dd9519c44cb6e96d34326ecb68bf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BSP_Rtc_Time_UpdateDaylight</definition>
        <argsstring>(daylight_sav_e daylight_sav)</argsstring>
        <name>BSP_Rtc_Time_UpdateDaylight</name>
        <param>
          <type>daylight_sav_e</type>
          <declname>dayligth_sav</declname>
          <defname>daylight_sav</defname>
        </param>
        <briefdescription>
<para>This function update the RTC clock with summer/winter time. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">daylight_sav</parametername>
</parameternamelist>
<parameterdescription>
<para>The daylight</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" line="252" column="6" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" bodystart="252" bodyend="263" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/include/bsp_rtc.h" declline="75" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__rtc_1ga13d50537cc01ca468d868ee153eb9cca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BSP_Rtc_Time_ForceNotify</definition>
        <argsstring>(void)</argsstring>
        <name>BSP_Rtc_Time_ForceNotify</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function force the RTC wake-up interrupt (in one second) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" line="269" column="6" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" bodystart="269" bodyend="279" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/include/bsp_rtc.h" declline="77" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__rtc_1gad5e39a7e6018fe987c3af412775d9f62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BSP_Rtc_Alarm_ForceNotify</definition>
        <argsstring>(void)</argsstring>
        <name>BSP_Rtc_Alarm_ForceNotify</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function is not implemented. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" line="285" column="6" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" bodystart="285" bodyend="295" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/include/bsp_rtc.h" declline="78" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__rtc_1gac5d9d73502bb1c66d8e1743429ceff86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BSP_Rtc_Time_Update_SetCallback</definition>
        <argsstring>(pfEventCB_t const pfCb)</argsstring>
        <name>BSP_Rtc_Time_Update_SetCallback</name>
        <param>
          <type>pfEventCB_t const</type>
          <declname>pfCb</declname>
        </param>
        <briefdescription>
<para>This function set the callback for &quot;time changed&quot;. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pfCb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" line="304" column="6" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" bodystart="304" bodyend="307" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/include/bsp_rtc.h" declline="80" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__rtc_1ga357a9db41008ca9371b2867977b746fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BSP_Rtc_WakeUpTimer_Enable</definition>
        <argsstring>(void)</argsstring>
        <name>BSP_Rtc_WakeUpTimer_Enable</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function enable the RTC wake-up timer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" line="315" column="6" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" bodystart="315" bodyend="319" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/include/bsp_rtc.h" declline="82" declcolumn="6"/>
        <references refid="group__rtc_1ga78d59e6e6d2256cf59f45ec5fa2d2bbe" compoundref="bsp__rtc_8c" startline="379" endline="389">BSP_Rtc_WakeUpTimer_SetHandler</references>
        <references refid="group__rtc_1gacaa3e57f2865873a5acb790a30c24fa3" compoundref="bsp__rtc_8c" startline="334" endline="360">BSP_Rtc_WakeUptimer_Reload</references>
      </memberdef>
      <memberdef kind="function" id="group__rtc_1gaacd7fa77afc99b4d793d24e836463c6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BSP_Rtc_WakeUpTimer_Disable</definition>
        <argsstring>(void)</argsstring>
        <name>BSP_Rtc_WakeUpTimer_Disable</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function disable the RTC wake-up timer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" line="325" column="6" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" bodystart="325" bodyend="328" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/include/bsp_rtc.h" declline="83" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__rtc_1gacaa3e57f2865873a5acb790a30c24fa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BSP_Rtc_WakeUptimer_Reload</definition>
        <argsstring>(void)</argsstring>
        <name>BSP_Rtc_WakeUptimer_Reload</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function reload the RTC wake-up timer to the next wake-up event (i.e. the next midnight) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" line="334" column="6" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" bodystart="334" bodyend="360" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/include/bsp_rtc.h" declline="84" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__rtc_1ga3dbeb18104e88d0f8ef92ad275cdc52e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BSP_Rtc_WakeUpTimer_SetCallback</definition>
        <argsstring>(pfEventCB_t const pfCb)</argsstring>
        <name>BSP_Rtc_WakeUpTimer_SetCallback</name>
        <param>
          <type>pfEventCB_t const</type>
          <declname>pfCb</declname>
        </param>
        <briefdescription>
<para>This function set the callback for the wake-up timer event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pfCb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback funtion </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" line="368" column="6" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" bodystart="368" bodyend="371" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/include/bsp_rtc.h" declline="85" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__rtc_1ga78d59e6e6d2256cf59f45ec5fa2d2bbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BSP_Rtc_WakeUpTimer_SetHandler</definition>
        <argsstring>(pfHandlerCB_t const pfCb)</argsstring>
        <name>BSP_Rtc_WakeUpTimer_SetHandler</name>
        <param>
          <type>pfHandlerCB_t const</type>
          <declname>pfCb</declname>
        </param>
        <briefdescription>
<para>This function set the RTC wake-up timer interrupt handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pfCb</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt handler </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" line="379" column="6" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" bodystart="379" bodyend="389" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/include/bsp_rtc.h" declline="86" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__rtc_1ga11693c3781506f40cb5eafc0864e5020" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BSP_Rtc_Alarm_Start</definition>
        <argsstring>(const uint8_t u8AlarmId, uint32_t u32Elapse)</argsstring>
        <name>BSP_Rtc_Alarm_Start</name>
        <param>
          <type>const uint8_t</type>
          <declname>u8AlarmId</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>u32Elapse</declname>
        </param>
        <briefdescription>
<para>This function start the given alarm. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">u8AlarmId</parametername>
</parameternamelist>
<parameterdescription>
<para>The alarm id to start </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">u32Elapse</parametername>
</parameternamelist>
<parameterdescription>
<para>The elapse time in second before alarm occurs </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" line="399" column="6" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" bodystart="399" bodyend="453" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/include/bsp_rtc.h" declline="88" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__rtc_1ga83bb46f768ff8abc7d3ab3cb09c7d971" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BSP_Rtc_Alarm_StartMs</definition>
        <argsstring>(const uint8_t u8AlarmId, uint64_t u64Elapse)</argsstring>
        <name>BSP_Rtc_Alarm_StartMs</name>
        <param>
          <type>const uint8_t</type>
          <declname>u8AlarmId</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>u64Elapse</declname>
        </param>
        <briefdescription>
<para>This function start the given alarm at milisecond scale. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">u8AlarmId</parametername>
</parameternamelist>
<parameterdescription>
<para>The alarm id to start </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">u64Elapse</parametername>
</parameternamelist>
<parameterdescription>
<para>The elapse time in millisecond before alarm occurs </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" line="462" column="6" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" bodystart="462" bodyend="533" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/include/bsp_rtc.h" declline="89" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__rtc_1ga696a36ceefeb120e8941376d93bacd0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BSP_Rtc_Alarm_Stop</definition>
        <argsstring>(const uint8_t u8AlarmId)</argsstring>
        <name>BSP_Rtc_Alarm_Stop</name>
        <param>
          <type>const uint8_t</type>
          <declname>u8AlarmId</declname>
        </param>
        <briefdescription>
<para>This function stop the given alarm. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">u8AlarmId</parametername>
</parameternamelist>
<parameterdescription>
<para>The alarm id to stop </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" line="541" column="6" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" bodystart="541" bodyend="553" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/include/bsp_rtc.h" declline="90" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__rtc_1ga06643052df05b11da617b9ff1f3a96d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BSP_Rtc_Alarm_SetHandler</definition>
        <argsstring>(const uint8_t u8AlarmId, pfHandlerCB_t const pfCb)</argsstring>
        <name>BSP_Rtc_Alarm_SetHandler</name>
        <param>
          <type>const uint8_t</type>
          <declname>u8AlarmId</declname>
        </param>
        <param>
          <type>pfHandlerCB_t const</type>
          <declname>pfCb</declname>
        </param>
        <briefdescription>
<para>This function set the alarm interrupt handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">u8AlarmId</parametername>
</parameternamelist>
<parameterdescription>
<para>The alarm id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pfCb</parametername>
</parameternamelist>
<parameterdescription>
<para>The interrupt handler </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" line="562" column="6" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c" bodystart="562" bodyend="572" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/include/bsp_rtc.h" declline="91" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This file contains functions to deal with RTC (Time, Wake-up, Alarm). </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para>2019, GRDF, Inc. All rights reserved.</para>
</simplesect>
Redistribution and use in source and binary forms, with or without modification, are permitted (subject to the limitations in the disclaimer below) provided that the following conditions are met:<itemizedlist>
<listitem><para>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</para>
</listitem><listitem><para>Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</para>
</listitem><listitem><para>Neither the name of GRDF, Inc. nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="par"><title>Revision history</title><para></para>
</simplesect>
<simplesect kind="par"><title>1.0.0 : 2020/08/29 [GBI]</title><para>Initial version </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="36"><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bsp__rtc_8h" kindref="compound">bsp_rtc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="platform_8h" kindref="compound">platform.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stm32l4xx_hal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">__attribute__((weak))<sp/>__attribute__((used))<sp/>daylight_sav_e<sp/>_daylight_sav_<sp/>=<sp/>NONE_TIME_CHANGE;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">__attribute__((weak))<sp/>__attribute__((used))<sp/>uint32_t<sp/>_wakeup_period_<sp/>=<sp/>86400;<sp/></highlight><highlight class="comment">//<sp/>in<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">__attribute__((used))<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>pfEventCB_t<sp/>pfWakeUpTimerCallBack;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">__attribute__((used))<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>pfEventCB_t<sp/>pfUpdateTimeCallBack;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="comment">/*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__rtc_1ga1730ffe1e560465665eb47d9264826f9" kindref="member">Error_Handler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>RTC_HandleTypeDef<sp/>hrtc;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_rtc_wakeUptimer_handler_(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="group__rtc_1gab8bf69f4d3224c022cba0f705b7ae730" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__rtc_1gab8bf69f4d3224c022cba0f705b7ae730" kindref="member">BSP_Rtc_Setup_Clk</ref>(uint32_t<sp/>clock_sel)</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>RCC_PeriphCLKInitTypeDef<sp/>PeriphClkInit<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>PeriphClkInit.PeriphClockSelection<sp/>=<sp/>RCC_PERIPHCLK_RTC;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>PeriphClkInit.RTCClockSelection<sp/>=<sp/>clock_sel<sp/>&amp;<sp/>RCC_BDCR_RTCSEL;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HAL_RCCEx_PeriphCLKConfig(&amp;PeriphClkInit)<sp/>!=<sp/>HAL_OK)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__rtc_1ga1730ffe1e560465665eb47d9264826f9" kindref="member">Error_Handler</ref>();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="group__rtc_1ga09bcac38c2d28b6a7d5826d64f8ee3bd" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__rtc_1ga09bcac38c2d28b6a7d5826d64f8ee3bd" kindref="member">BSP_Rtc_Setup</ref>(uint16_t<sp/>div_s,<sp/>uint8_t<sp/>div_a)</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>hrtc.Instance<sp/>=<sp/>RTC;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>hrtc.Init.HourFormat<sp/>=<sp/>RTC_HOURFORMAT_24;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>hrtc.Init.OutPut<sp/>=<sp/>RTC_OUTPUT_DISABLE;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>hrtc.Init.OutPutRemap<sp/>=<sp/>RTC_OUTPUT_REMAP_NONE;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>hrtc.Init.OutPutPolarity<sp/>=<sp/>RTC_OUTPUT_POLARITY_HIGH;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>hrtc.Init.OutPutType<sp/>=<sp/>RTC_OUTPUT_TYPE_OPENDRAIN;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>hrtc.Init.AsynchPrediv<sp/>=<sp/>div_a<sp/>&amp;<sp/>0x7F;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>hrtc.Init.SynchPrediv<sp/>=<sp/>div_s<sp/>&amp;<sp/>0xFFFF;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HAL_RTC_Init(&amp;hrtc)<sp/>!=<sp/>HAL_OK)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__rtc_1ga1730ffe1e560465665eb47d9264826f9" kindref="member">Error_Handler</ref>();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>HAL_RTCEx_DeactivateRefClock(&amp;hrtc);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>HAL_RTCEx_DeactivateTimeStamp(&amp;hrtc);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>HAL_RTCEx_DeactivateInternalTimeStamp(&amp;hrtc);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>HAL_RTCEx_DeactivateCalibrationOutPut(&amp;hrtc);</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="group__rtc_1ga6823644967f78ea14d790e3ce73f2070" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__rtc_1ga6823644967f78ea14d790e3ce73f2070" kindref="member">BSP_Rtc_Backup_Write</ref>(uint32_t<sp/>regNum,<sp/>uint32_t<sp/>data)</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>HAL_RTCEx_BKUPWrite(&amp;hrtc,<sp/>regNum,<sp/>data);</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="group__rtc_1gaee49ea5a4d64ef1a312a3ad61c2e5c10" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="group__rtc_1gaee49ea5a4d64ef1a312a3ad61c2e5c10" kindref="member">BSP_Rtc_Backup_Read</ref>(uint32_t<sp/>regNum)</highlight></codeline>
<codeline lineno="141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HAL_RTCEx_BKUPRead(&amp;hrtc,<sp/>regNum);</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="group__rtc_1ga0600d5f526280d68aa124253fc6645f4" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__rtc_1ga0600d5f526280d68aa124253fc6645f4" kindref="member">BSP_Rtc_Time_Write</ref>(time_t<sp/>t)</highlight></codeline>
<codeline lineno="155"><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tm<sp/>*pTimeInfo;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>RTC_TimeTypeDef<sp/>sTime<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.DayLightSaving<sp/>=<sp/>RTC_DAYLIGHTSAVING_NONE,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.StoreOperation<sp/>=<sp/>RTC_STOREOPERATION_RESET,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>RTC_DateTypeDef<sp/>sDate;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>pTimeInfo<sp/>=<sp/>localtime(&amp;t);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTimeInfo)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>the<sp/>structure<sp/>for<sp/>the<sp/>RTC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sDate.WeekDay<sp/>=<sp/>pTimeInfo-&gt;tm_wday;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sDate.Month<sp/><sp/><sp/>=<sp/>pTimeInfo-&gt;tm_mon<sp/>+1<sp/>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sDate.Date<sp/><sp/><sp/><sp/>=<sp/>pTimeInfo-&gt;tm_mday;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sDate.Year<sp/><sp/><sp/><sp/>=<sp/>pTimeInfo-&gt;tm_year<sp/>-<sp/>100;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sTime.Hours<sp/><sp/><sp/>=<sp/>pTimeInfo-&gt;tm_hour;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sTime.Minutes<sp/>=<sp/>pTimeInfo-&gt;tm_min;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sTime.Seconds<sp/>=<sp/>pTimeInfo-&gt;tm_sec;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HAL_RTC_SetTime(&amp;hrtc,<sp/>&amp;sTime,<sp/>FORMAT_BIN)<sp/>!=<sp/>HAL_OK)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__rtc_1ga1730ffe1e560465665eb47d9264826f9" kindref="member">Error_Handler</ref>();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HAL_RTC_SetDate(&amp;hrtc,<sp/>&amp;sDate,<sp/>FORMAT_BIN)<sp/>!=<sp/>HAL_OK)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__rtc_1ga1730ffe1e560465665eb47d9264826f9" kindref="member">Error_Handler</ref>();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="group__rtc_1gac7439f52ab0bc674c01377181ff8f889" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__rtc_1gac7439f52ab0bc674c01377181ff8f889" kindref="member">BSP_Rtc_Time_ReadMicro</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timeval<sp/>*<sp/>tp)</highlight></codeline>
<codeline lineno="194"><highlight class="normal">{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>RTC_DateTypeDef<sp/>sDate;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>RTC_TimeTypeDef<sp/>sTime;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tm<sp/>timeinfo;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tp)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>actual<sp/>date<sp/>and<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Warning:<sp/>the<sp/>time<sp/>must<sp/>be<sp/>read<sp/>first!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAL_RTC_GetTime(&amp;hrtc,<sp/>&amp;sTime,<sp/>FORMAT_BIN);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAL_RTC_GetDate(&amp;hrtc,<sp/>&amp;sDate,<sp/>FORMAT_BIN);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>a<sp/>tm<sp/>structure<sp/>based<sp/>on<sp/>the<sp/>RTC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeinfo.tm_wday<sp/>=<sp/>sDate.WeekDay;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeinfo.tm_mon<sp/><sp/>=<sp/>sDate.Month<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeinfo.tm_mday<sp/>=<sp/>sDate.Date;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeinfo.tm_year<sp/>=<sp/>sDate.Year<sp/>+<sp/>100;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeinfo.tm_hour<sp/>=<sp/>sTime.Hours;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeinfo.tm_min<sp/><sp/>=<sp/>sTime.Minutes;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeinfo.tm_sec<sp/><sp/>=<sp/>sTime.Seconds;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>to<sp/>timestamp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tp-&gt;tv_sec<sp/>=<sp/>mktime(&amp;timeinfo);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tp-&gt;tv_usec<sp/>=<sp/>((sTime.SecondFraction<sp/>-<sp/>sTime.SubSeconds)*1000000)/(sTime.SecondFraction<sp/>+1);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="group__rtc_1ga0b0ef3fc21a1fa5d69867f5e3ed33245" refkind="member"><highlight class="normal">uint64_t<sp/><ref refid="group__rtc_1ga0b0ef3fc21a1fa5d69867f5e3ed33245" kindref="member">BSP_Rtc_Time_GetEpochMs</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>tp;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__rtc_1gac7439f52ab0bc674c01377181ff8f889" kindref="member">BSP_Rtc_Time_ReadMicro</ref>(&amp;tp);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>(tp.tv_sec*1000)+<sp/>(tp.tv_usec/1000)<sp/>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="group__rtc_1ga308138e3762b39d75a5ed67cd99b392a" refkind="member"><highlight class="normal">time_t<sp/><ref refid="group__rtc_1ga308138e3762b39d75a5ed67cd99b392a" kindref="member">BSP_Rtc_Time_Read</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>tp;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__rtc_1gac7439f52ab0bc674c01377181ff8f889" kindref="member">BSP_Rtc_Time_ReadMicro</ref>(&amp;tp);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(time_t)(<sp/>tp.tv_sec<sp/>);</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="group__rtc_1ga606dd9519c44cb6e96d34326ecb68bf4" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__rtc_1ga606dd9519c44cb6e96d34326ecb68bf4" kindref="member">BSP_Rtc_Time_UpdateDaylight</ref>(daylight_sav_e<sp/>daylight_sav)</highlight></codeline>
<codeline lineno="253"><highlight class="normal">{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(daylight_sav<sp/>==<sp/>WINTER_TIME_CHANGE)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAL_RTC_DAYLIGHT_SAVING_TIME_SUB1H(&amp;hrtc,<sp/>1);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(daylight_sav<sp/>==<sp/>SUMMER_TIME_CHANGE)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAL_RTC_DAYLIGHT_SAVING_TIME_ADD1H(&amp;hrtc,<sp/>0);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>else,<sp/>do<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="group__rtc_1ga13d50537cc01ca468d868ee153eb9cca" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__rtc_1ga13d50537cc01ca468d868ee153eb9cca" kindref="member">BSP_Rtc_Time_ForceNotify</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="270"><highlight class="normal">{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>HAL_RTCEx_SetWakeUpTimer_IT(&amp;hrtc,<sp/>1,<sp/>RTC_WAKEUPCLOCK_CK_SPRE_16BITS);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>The<sp/>following<sp/>should<sp/>be<sp/>better,<sp/>but<sp/>hal_rtc<sp/>check<sp/>that<sp/>WUTF<sp/>flag,</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>indicating<sp/>that<sp/>wakeup<sp/>timer<sp/>reload.</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>So,<sp/>the<sp/>HAL_RTCEx_WakeUpTimerEventCallback<sp/>is<sp/>not<sp/>called</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>//<sp/>EXTI-&gt;SWIER1<sp/>|=<sp/>RTC_EXTI_LINE_WAKEUPTIMER_EVENT;</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="group__rtc_1gad5e39a7e6018fe987c3af412775d9f62" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__rtc_1gad5e39a7e6018fe987c3af412775d9f62" kindref="member">BSP_Rtc_Alarm_ForceNotify</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="286"><highlight class="normal">{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>The<sp/>following<sp/>should<sp/>be<sp/>better,<sp/>but<sp/>hal_rtc<sp/>check<sp/>that<sp/>RTC_FLAG_ALR(A/B)F<sp/>flag,</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>indicating<sp/>that<sp/>alarm<sp/>timer<sp/>is<sp/>reached.</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>So,<sp/>the<sp/>HAL_RTCEx_Alarm(A/B)EventCallback<sp/>is<sp/>not<sp/>called</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>//<sp/>EXTI-&gt;SWIER1<sp/>|=<sp/>RTC_EXTI_LINE_ALARM_EVENT;</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//HAL_RTC_SetAlarm_IT(&amp;hrtc,<sp/>&amp;sAlarm,<sp/>FORMAT_BIN);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="304" refid="group__rtc_1gac5d9d73502bb1c66d8e1743429ceff86" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__rtc_1gac5d9d73502bb1c66d8e1743429ceff86" kindref="member">BSP_Rtc_Time_Update_SetCallback</ref><sp/>(pfEventCB_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pfCb)</highlight></codeline>
<codeline lineno="305"><highlight class="normal">{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>pfUpdateTimeCallBack<sp/>=<sp/>pfCb;</highlight></codeline>
<codeline lineno="307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="315" refid="group__rtc_1ga357a9db41008ca9371b2867977b746fa" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__rtc_1ga357a9db41008ca9371b2867977b746fa" kindref="member">BSP_Rtc_WakeUpTimer_Enable</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="316"><highlight class="normal">{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__rtc_1ga78d59e6e6d2256cf59f45ec5fa2d2bbe" kindref="member">BSP_Rtc_WakeUpTimer_SetHandler</ref>(NULL);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__rtc_1gacaa3e57f2865873a5acb790a30c24fa3" kindref="member">BSP_Rtc_WakeUptimer_Reload</ref>();</highlight></codeline>
<codeline lineno="319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="325" refid="group__rtc_1gaacd7fa77afc99b4d793d24e836463c6d" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__rtc_1gaacd7fa77afc99b4d793d24e836463c6d" kindref="member">BSP_Rtc_WakeUpTimer_Disable</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>HAL_RTCEx_DeactivateWakeUpTimer(&amp;hrtc);</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="334" refid="group__rtc_1gacaa3e57f2865873a5acb790a30c24fa3" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__rtc_1gacaa3e57f2865873a5acb790a30c24fa3" kindref="member">BSP_Rtc_WakeUptimer_Reload</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="335"><highlight class="normal">{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>RTC_DateTypeDef<sp/>sDate;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>RTC_TimeTypeDef<sp/>sTime;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>actual<sp/>date<sp/>and<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Warning:<sp/>the<sp/>time<sp/>must<sp/>be<sp/>read<sp/>first!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>HAL_RTC_GetTime(&amp;hrtc,<sp/>&amp;sTime,<sp/>FORMAT_BIN);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>HAL_RTC_GetDate(&amp;hrtc,<sp/>&amp;sDate,<sp/>FORMAT_BIN);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>u32Now<sp/>=<sp/>(<sp/>(sTime.Hours)*60<sp/>+<sp/>sTime.Minutes<sp/>)*60<sp/><sp/>+<sp/>sTime.Seconds;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>u32NextWakeUp<sp/>=<sp/>_wakeup_period_<sp/>-<sp/>(u32Now<sp/>%<sp/>_wakeup_period_);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>u32NextWakeUp<sp/>&gt;<sp/>0xFFFF<sp/>)</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>greater<sp/>than<sp/>2^16,<sp/>so<sp/>use<sp/>RTC_WAKEUPCLOCK_CK_SPRE_17BITS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u32NextWakeUp<sp/>-=<sp/>0xFFFF;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u32NextWakeUp<sp/>&amp;=<sp/>0xFFFF;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAL_RTCEx_SetWakeUpTimer_IT(&amp;hrtc,<sp/>u32NextWakeUp,<sp/>RTC_WAKEUPCLOCK_CK_SPRE_17BITS);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u32NextWakeUp<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u32NextWakeUp<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lower<sp/>than<sp/>2^16,<sp/>so<sp/>use<sp/>RTC_WAKEUPCLOCK_CK_SPRE_16BITS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u32NextWakeUp<sp/>&amp;=<sp/>0xFFFF;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAL_RTCEx_SetWakeUpTimer_IT(&amp;hrtc,<sp/>u32NextWakeUp,<sp/>RTC_WAKEUPCLOCK_CK_SPRE_16BITS);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="368" refid="group__rtc_1ga3dbeb18104e88d0f8ef92ad275cdc52e" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__rtc_1ga3dbeb18104e88d0f8ef92ad275cdc52e" kindref="member">BSP_Rtc_WakeUpTimer_SetCallback</ref><sp/>(pfEventCB_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pfCb)</highlight></codeline>
<codeline lineno="369"><highlight class="normal">{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>pfWakeUpTimerCallBack<sp/>=<sp/>pfCb;</highlight></codeline>
<codeline lineno="371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="379" refid="group__rtc_1ga78d59e6e6d2256cf59f45ec5fa2d2bbe" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__rtc_1ga78d59e6e6d2256cf59f45ec5fa2d2bbe" kindref="member">BSP_Rtc_WakeUpTimer_SetHandler</ref><sp/>(pfHandlerCB_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pfCb)</highlight></codeline>
<codeline lineno="380"><highlight class="normal">{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pfCb)</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfWakeUpTimerEvent<sp/>=<sp/>pfCb;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfWakeUpTimerEvent<sp/>=<sp/>_rtc_wakeUptimer_handler_;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="399" refid="group__rtc_1ga11693c3781506f40cb5eafc0864e5020" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__rtc_1ga11693c3781506f40cb5eafc0864e5020" kindref="member">BSP_Rtc_Alarm_Start</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>u8AlarmId,<sp/>uint32_t<sp/>u32Elapse)</highlight></codeline>
<codeline lineno="400"><highlight class="normal">{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>RTC_TimeTypeDef<sp/>sTime;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>RTC_DateTypeDef<sp/>sDate;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>RTC_AlarmTypeDef<sp/>sAlarm<sp/>=</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.AlarmTime<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.DayLightSaving<sp/>=<sp/>RTC_DAYLIGHTSAVING_NONE,</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.StoreOperation<sp/>=<sp/>RTC_STOREOPERATION_RESET,</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.TimeFormat<sp/>=<sp/>RTC_HOURFORMAT12_AM,</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Date<sp/>and<sp/>day<sp/>don&apos;t<sp/>care</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.AlarmMask<sp/>=<sp/>RTC_ALARMMASK_DATEWEEKDAY,<sp/></highlight><highlight class="comment">//<sp/>(RTC_ALARMMASK_HOURS<sp/>|<sp/>RTC_ALARMMASK_MINUTES<sp/>|<sp/>RTC_ALARMMASK_SECONDS),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>select<sp/>date<sp/>(unnecessary)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.AlarmDateWeekDaySel<sp/>=<sp/>RTC_ALARMDATEWEEKDAYSEL_DATE,</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.AlarmDateWeekDay<sp/>=<sp/>0x0,</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sub-second<sp/>take<sp/>care<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.AlarmSubSecondMask<sp/>=<sp/>RTC_ALARMSUBSECONDMASK_NONE,</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>HAL_RTC_GetTime(&amp;hrtc,<sp/>&amp;sTime,<sp/>FORMAT_BIN);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>HAL_RTC_GetDate(&amp;hrtc,<sp/>&amp;sDate,<sp/>FORMAT_BIN);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u32Elapse<sp/>&gt;<sp/>86399){</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u32Elapse<sp/>=<sp/>86399;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>u32Elapse<sp/>=<sp/>86399</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>Hours<sp/>=<sp/>u32Elapse<sp/>/<sp/>3600;<sp/></highlight><highlight class="comment">//<sp/>23</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>reste<sp/>=<sp/>u32Elapse<sp/>%<sp/>3600;<sp/></highlight><highlight class="comment">//<sp/>3599</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>Minutes<sp/>=<sp/>(reste)/60;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>59</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>Seconds<sp/>=<sp/>(reste)%60;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>59</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>Seconds<sp/>=<sp/>Seconds<sp/>+<sp/>sTime.Seconds;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>Minutes<sp/>=<sp/>Minutes<sp/>+<sp/>sTime.Minutes<sp/>+<sp/>Seconds/60;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>Hours<sp/>=<sp/>Hours<sp/>+<sp/>sTime.Hours<sp/>+<sp/>Minutes/60;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>sAlarm.AlarmTime.Hours<sp/>=<sp/>Hours%24;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>sAlarm.AlarmTime.Minutes<sp/>=<sp/>Minutes%60;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>sAlarm.AlarmTime.Seconds<sp/>=<sp/>Seconds%60;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>sAlarm.AlarmTime.SubSeconds<sp/>=<sp/>sTime.SubSeconds;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u8AlarmId)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sAlarm.Alarm<sp/>=<sp/>RTC_ALARM_B;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sAlarm.Alarm<sp/>=<sp/>RTC_ALARM_A;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HAL_RTC_SetAlarm_IT(&amp;hrtc,<sp/>&amp;sAlarm,<sp/>FORMAT_BIN)<sp/>!=<sp/>HAL_OK)</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__rtc_1ga1730ffe1e560465665eb47d9264826f9" kindref="member">Error_Handler</ref>();</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="462" refid="group__rtc_1ga83bb46f768ff8abc7d3ab3cb09c7d971" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__rtc_1ga83bb46f768ff8abc7d3ab3cb09c7d971" kindref="member">BSP_Rtc_Alarm_StartMs</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>u8AlarmId,<sp/>uint64_t<sp/>u64Elapse)</highlight></codeline>
<codeline lineno="463"><highlight class="normal">{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>RTC_TimeTypeDef<sp/>sTime;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>RTC_DateTypeDef<sp/>sDate;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>RTC_AlarmTypeDef<sp/>sAlarm<sp/>=</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.AlarmTime<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.DayLightSaving<sp/>=<sp/>RTC_DAYLIGHTSAVING_NONE,</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.StoreOperation<sp/>=<sp/>RTC_STOREOPERATION_RESET,</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.TimeFormat<sp/>=<sp/>RTC_HOURFORMAT12_AM,</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Date<sp/>and<sp/>day<sp/>don&apos;t<sp/>care</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.AlarmMask<sp/>=<sp/>RTC_ALARMMASK_DATEWEEKDAY,<sp/></highlight><highlight class="comment">//<sp/>(RTC_ALARMMASK_HOURS<sp/>|<sp/>RTC_ALARMMASK_MINUTES<sp/>|<sp/>RTC_ALARMMASK_SECONDS),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>select<sp/>date<sp/>(unnecessary)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.AlarmDateWeekDaySel<sp/>=<sp/>RTC_ALARMDATEWEEKDAYSEL_DATE,</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.AlarmDateWeekDay<sp/>=<sp/>0x0,</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sub-second<sp/>take<sp/>care<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.AlarmSubSecondMask<sp/>=<sp/>RTC_ALARMSUBSECONDMASK_NONE,</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>HAL_RTC_GetTime(&amp;hrtc,<sp/>&amp;sTime,<sp/>FORMAT_BIN);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>HAL_RTC_GetDate(&amp;hrtc,<sp/>&amp;sDate,<sp/>FORMAT_BIN);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>u32Elapse<sp/>=<sp/>u64Elapse/1000;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>u16Hours<sp/>=<sp/>u32Elapse<sp/>/<sp/>3600;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>u16reste<sp/>=<sp/>u32Elapse<sp/>%<sp/>3600;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>u16Minutes<sp/>=<sp/>(u16reste)/60;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>u16Seconds<sp/>=<sp/>(u16reste)%60;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>u32Mseconds<sp/>=<sp/>u64Elapse<sp/>-<sp/>((uint64_t)u32Elapse)*1000;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>A<sp/>=<sp/>(sTime.SecondFraction<sp/>-<sp/>sTime.SubSeconds)*1000;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>B<sp/>=<sp/>A/(sTime.SecondFraction<sp/>+1);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ROUND_CORRECTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>C<sp/>=<sp/>A*10/(sTime.SecondFraction<sp/>+1)<sp/>-<sp/>(B)*10;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>B<sp/>+=<sp/>(C&lt;5)?(0):(1);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>u32Mseconds<sp/>=<sp/>u32Mseconds<sp/>+<sp/>B;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//u32Mseconds<sp/>=<sp/>u32Mseconds<sp/>+<sp/>(sTime.SecondFraction<sp/>-<sp/>sTime.SubSeconds)*1000/(sTime.SecondFraction<sp/>+1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>u16Seconds<sp/>=<sp/>u16Seconds<sp/>+<sp/>sTime.Seconds<sp/>+<sp/>u32Mseconds/1000;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>u16Minutes<sp/>=<sp/>u16Minutes<sp/>+<sp/>sTime.Minutes<sp/>+<sp/>u16Seconds/60;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>u16Hours<sp/>=<sp/>u16Hours<sp/>+<sp/>sTime.Hours<sp/>+<sp/>u16Minutes/60;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>u32Mseconds<sp/>%=<sp/>1000;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>A<sp/>=<sp/>sTime.SecondFraction*1000<sp/>-<sp/><sp/>(<sp/>u32Mseconds<sp/>*<sp/>(sTime.SecondFraction<sp/>+1)<sp/>);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>B<sp/>=<sp/>A/1000;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ROUND_CORRECTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>C<sp/>=<sp/>A/100<sp/>-<sp/>B*10;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>B<sp/>+=<sp/>(C&lt;5)?(0):(1);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>sAlarm.AlarmTime.Hours<sp/>=<sp/>u16Hours%24;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>sAlarm.AlarmTime.Minutes<sp/>=<sp/>u16Minutes%60;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>sAlarm.AlarmTime.Seconds<sp/>=<sp/>u16Seconds%60;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>sAlarm.AlarmTime.SubSeconds<sp/>=<sp/>B;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u8AlarmId)</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sAlarm.Alarm<sp/>=<sp/>RTC_ALARM_B;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sAlarm.Alarm<sp/>=<sp/>RTC_ALARM_A;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HAL_RTC_SetAlarm_IT(&amp;hrtc,<sp/>&amp;sAlarm,<sp/>FORMAT_BIN)<sp/>!=<sp/>HAL_OK)</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__rtc_1ga1730ffe1e560465665eb47d9264826f9" kindref="member">Error_Handler</ref>();</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal">}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="541" refid="group__rtc_1ga696a36ceefeb120e8941376d93bacd0a" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__rtc_1ga696a36ceefeb120e8941376d93bacd0a" kindref="member">BSP_Rtc_Alarm_Stop</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>u8AlarmId)</highlight></codeline>
<codeline lineno="542"><highlight class="normal">{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>Alarm;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u8AlarmId)</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Alarm<sp/>=<sp/>RTC_ALARM_B;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Alarm<sp/>=<sp/>RTC_ALARM_A;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>HAL_RTC_DeactivateAlarm(&amp;hrtc,<sp/>Alarm);</highlight></codeline>
<codeline lineno="553"><highlight class="normal">}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="562" refid="group__rtc_1ga06643052df05b11da617b9ff1f3a96d7" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__rtc_1ga06643052df05b11da617b9ff1f3a96d7" kindref="member">BSP_Rtc_Alarm_SetHandler</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>u8AlarmId,<sp/>pfHandlerCB_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pfCb)</highlight></codeline>
<codeline lineno="563"><highlight class="normal">{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u8AlarmId)</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfAlarmBEvent<sp/>=<sp/>pfCb;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfAlarmAEvent<sp/>=<sp/>pfCb;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal">}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Note<sp/>on<sp/>RTC<sp/>Periodic<sp/>WakeUp</highlight></codeline>
<codeline lineno="576"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="577"><highlight class="comment"><sp/>*<sp/>input<sp/>clock<sp/>:</highlight></codeline>
<codeline lineno="578"><highlight class="comment"><sp/>*<sp/>-<sp/>RTC<sp/>clock<sp/>(RTCCLK<sp/>LSE(32.768kHz))<sp/>divided<sp/>by<sp/>2,<sp/>4,<sp/>8,<sp/>or<sp/>16.</highlight></codeline>
<codeline lineno="579"><highlight class="comment"><sp/>*<sp/>---<sp/>allow<sp/>period<sp/>from<sp/>122<sp/>μs<sp/>to<sp/>32<sp/>s,<sp/>with<sp/>a<sp/>resolution<sp/>down<sp/>to<sp/>61<sp/>μs.</highlight></codeline>
<codeline lineno="580"><highlight class="comment"><sp/>*<sp/>-<sp/>ck_spre<sp/>(usually<sp/>1<sp/>Hz<sp/>internal<sp/>clock)</highlight></codeline>
<codeline lineno="581"><highlight class="comment"><sp/>*<sp/>---<sp/>allow<sp/>period<sp/>from<sp/>1<sp/>s<sp/>to<sp/>around<sp/>36<sp/>hours<sp/>with<sp/>one-second<sp/>resolution.</highlight></codeline>
<codeline lineno="582"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="583"><highlight class="comment"><sp/>*<sp/>First<sp/>time</highlight></codeline>
<codeline lineno="584"><highlight class="comment"><sp/>*<sp/>-<sp/>Get<sp/>the<sp/>current<sp/>date<sp/>and<sp/>time<sp/>(now)</highlight></codeline>
<codeline lineno="585"><highlight class="comment"><sp/>*<sp/>-<sp/>Compute<sp/>the<sp/>delta<sp/>between<sp/>00:00:00<sp/>and<sp/>now</highlight></codeline>
<codeline lineno="586"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>case<sp/>1<sp/>:<sp/>delta<sp/>in<sp/>[0;<sp/>65535]</highlight></codeline>
<codeline lineno="587"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=&gt;<sp/>use<sp/>RTC_WAKEUPCLOCK_CK_SPRE_16BITS<sp/>(i.e.:<sp/>WUCKSEL[2:1]<sp/>=<sp/>10)</highlight></codeline>
<codeline lineno="588"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>case<sp/>2<sp/>:<sp/>delta<sp/>in<sp/>[65536;<sp/>86400]</highlight></codeline>
<codeline lineno="589"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=&gt;<sp/>use<sp/>RTC_WAKEUPCLOCK_CK_SPRE_17BITS<sp/>(i.e.:<sp/>WUCKSEL[2:1]<sp/>=<sp/>11).</highlight></codeline>
<codeline lineno="590"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=&gt;<sp/>Subtract<sp/>0xFFFF<sp/>from<sp/>delta</highlight></codeline>
<codeline lineno="591"><highlight class="comment"><sp/>*<sp/>-<sp/>Program<sp/>the<sp/>wake-up<sp/>timer</highlight></codeline>
<codeline lineno="592"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="593"><highlight class="comment"><sp/>*<sp/>At<sp/>next<sp/>wake-up<sp/>timer<sp/>interrupt<sp/>(time<sp/>and<sp/>date<sp/>should<sp/>be<sp/>00:00:00)</highlight></codeline>
<codeline lineno="594"><highlight class="comment"><sp/>*<sp/>-<sp/>Program<sp/>the<sp/>wake-up<sp/>timer<sp/>to<sp/>be<sp/>in<sp/>86400<sp/>seconds</highlight></codeline>
<codeline lineno="595"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=&gt;<sp/>use<sp/>RTC_WAKEUPCLOCK_CK_SPRE_17BITS</highlight></codeline>
<codeline lineno="596"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=&gt;<sp/>set<sp/>the<sp/>WUTR<sp/>to<sp/>20864<sp/><sp/>(86400<sp/>-<sp/>65536)</highlight></codeline>
<codeline lineno="597"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="598"><highlight class="comment"><sp/>*<sp/>At<sp/>next<sp/>wake-up<sp/>timer<sp/>interrupt</highlight></codeline>
<codeline lineno="599"><highlight class="comment"><sp/>*<sp/>-<sp/>nothing</highlight></codeline>
<codeline lineno="600"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="612"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_rtc_wakeUptimer_handler_(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="613"><highlight class="normal">{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>&quot;new<sp/>clock<sp/>update&quot;<sp/>is<sp/>required,<sp/>set<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pfUpdateTimeCallBack)</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfUpdateTimeCallBack();</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pfWakeUpTimerCallBack)</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfWakeUpTimerCallBack();</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal">}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal">}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_rtc.c"/>
  </compounddef>
</doxygen>
