<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="bsp__boot_8c" kind="file" language="C++">
    <compoundname>bsp_boot.c</compoundname>
    <includes refid="bsp__boot_8h" local="yes">bsp_boot.h</includes>
    <includes refid="platform_8h" local="yes">platform.h</includes>
    <includes local="no">stm32l4xx_hal.h</includes>
    <incdepgraph>
      <node id="5">
        <label>stdbool.h</label>
      </node>
      <node id="8">
        <label>assert.h</label>
      </node>
      <node id="6">
        <label>stdint.h</label>
      </node>
      <node id="3">
        <label>common.h</label>
        <link refid="common_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_boot.c</label>
        <link refid="bsp__boot_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>stm32l4xx_hal.h</label>
      </node>
      <node id="7">
        <label>stddef.h</label>
      </node>
      <node id="9">
        <label>time.h</label>
      </node>
      <node id="11">
        <label>platform.h</label>
        <link refid="platform_8h"/>
      </node>
      <node id="4">
        <label>stdio.h</label>
      </node>
      <node id="10">
        <label>machine/endian.h</label>
      </node>
      <node id="2">
        <label>bsp_boot.h</label>
        <link refid="bsp__boot_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__boot_1ga6d454eccc10b0f5e78da41e846b84fe9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BSP_Boot_Reboot</definition>
        <argsstring>(uint8_t bReset)</argsstring>
        <name>BSP_Boot_Reboot</name>
        <param>
          <type>uint8_t</type>
          <declname>bReset</declname>
        </param>
        <briefdescription>
<para>Reboot. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">bReset</parametername>
</parameternamelist>
<parameterdescription>
<para>Reset the backup domain (1 ;yes, 0: no)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_boot.c" line="62" column="6" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_boot.c" bodystart="62" bodyend="70" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/include/bsp_boot.h" declline="112" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__boot_1ga3eaa2c4653fb4f0fb82e124d3a2a411e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t BSP_Boot_GetState</definition>
        <argsstring>(void)</argsstring>
        <name>BSP_Boot_GetState</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the boot state. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the boot state as u32 (see <ref refid="unionboot__state__t" kindref="compound">boot_state_t</ref>) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_boot.c" line="78" column="10" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_boot.c" bodystart="78" bodyend="142" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/include/bsp_boot.h" declline="113" declcolumn="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Function to boot/reboot the platform. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para>2019, GRDF, Inc. All rights reserved.</para>
</simplesect>
Redistribution and use in source and binary forms, with or without modification, are permitted (subject to the limitations in the disclaimer below) provided that the following conditions are met:<itemizedlist>
<listitem><para>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</para>
</listitem><listitem><para>Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</para>
</listitem><listitem><para>Neither the name of GRDF, Inc. nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="par"><title>Revision history</title><para></para>
</simplesect>
<simplesect kind="par"><title>1.0.0 : 2020/10/05 [GBI]</title><para>Initial version </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="36"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bsp__boot_8h" kindref="compound">bsp_boot.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="platform_8h" kindref="compound">platform.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stm32l4xx_hal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor">#ifndef<sp/>BOOT_STATE_BKPR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOOT_STATE_BKPR<sp/>BKP31R</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="group__boot_1ga6d454eccc10b0f5e78da41e846b84fe9" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__boot_1ga6d454eccc10b0f5e78da41e846b84fe9" kindref="member">BSP_Boot_Reboot</ref>(uint8_t<sp/>bReset)</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bReset)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAL_RCC_BACKUPRESET_FORCE();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>__HAL_RCC_BACKUPRESET_RELEASE();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>NVIC_SystemReset();</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="group__boot_1ga3eaa2c4653fb4f0fb82e124d3a2a411e" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="group__boot_1ga3eaa2c4653fb4f0fb82e124d3a2a411e" kindref="member">BSP_Boot_GetState</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>uint32_t<sp/>u32BootState<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>Boot<sp/>reason</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>u32BootState<sp/>|=<sp/>RCC-&gt;CSR<sp/>&gt;&gt;<sp/>RCC_CSR_FWRSTF_Pos;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>reset<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>__HAL_RCC_CLEAR_RESET_FLAGS();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>if<sp/>it<sp/>was<sp/>in<sp/>Standby<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>u32BootState<sp/>|=<sp/>(PWR-&gt;SR1<sp/>&amp;<sp/>PWR_SR1_SBF)?(STANDBY_WKUP_MSK):(0);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>if<sp/>it<sp/>was<sp/>internal<sp/>wake-up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>u32BootState<sp/>|=<sp/>(PWR-&gt;SR1<sp/>&amp;<sp/>PWR_SR1_WUFI)?(INTERNAL_WKUP_MSK):(0);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>wake-up<sp/>pins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>u32BootState<sp/>|=<sp/>(PWR-&gt;SR1<sp/>&amp;<sp/>PWR_SR1_WUF)<sp/>&lt;&lt;<sp/>WKUP_PIN_POS;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>Standby<sp/>flag<sp/>and<sp/>all<sp/>wake-up<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>SET_BIT(PWR-&gt;SCR,<sp/>(PWR_SCR_CSBF<sp/>|<sp/>PWR_SCR_CWUF)<sp/>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//__HAL_PWR_CLEAR_FLAG(PWR_FLAG_SB);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>wake-up<sp/>internal<sp/>:<sp/>RTC<sp/>ALARM<sp/>or<sp/>RTC<sp/>WAKEUP<sp/>TIMER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u32BootState<sp/>&amp;<sp/>INTERNAL_WKUP_MSK)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>RTC<sp/>protect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RTC-&gt;WPR<sp/>=<sp/>0xCAU;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RTC-&gt;WPR<sp/>=<sp/>0x53U;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>case<sp/>RTC<sp/>WAKEUP<sp/>TIMER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>RTC-&gt;ISR<sp/>&amp;<sp/>RTC_FLAG_WUTF<sp/>)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u32BootState<sp/>|=<sp/>TIMER_WKUP_MSK;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>case<sp/>RTC<sp/>ALARM<sp/>A<sp/>//<sp/>SHOULD<sp/>never<sp/>happen,<sp/>in<sp/>SHUTDOWN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>RTC-&gt;ISR<sp/>&amp;<sp/>RTC_FLAG_ALRAF<sp/>)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u32BootState<sp/>|=<sp/>ALARMA_WKUP_MSK;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>case<sp/>RTC<sp/>ALARM<sp/>B<sp/>//<sp/>SHOULD<sp/>never<sp/>happen,<sp/>in<sp/>SHUTDOWN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>RTC-&gt;ISR<sp/>&amp;<sp/>RTC_FLAG_ALRBF<sp/>)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u32BootState<sp/>|=<sp/>ALARMB_WKUP_MSK;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>Timer<sp/>and<sp/>Alarms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RTC-&gt;CR<sp/>&amp;=<sp/>~(RTC_CR_WUTE<sp/>|<sp/>RTC_CR_ALRAE<sp/>|<sp/>RTC_CR_ALRBE);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>Timer<sp/>and<sp/>Alarms<sp/>interrupt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RTC-&gt;CR<sp/>&amp;=<sp/>~(RTC_CR_WUTIE<sp/>|<sp/>RTC_CR_ALRAIE<sp/>|<sp/>RTC_CR_ALRBIE);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RTC-&gt;ISR<sp/>&amp;=<sp/>~(RTC_ISR_WUTF<sp/>|<sp/>RTC_ISR_ALRAF<sp/>|<sp/>RTC_ISR_ALRBF);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>RTC<sp/>protect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RTC-&gt;WPR<sp/>=<sp/>0xFFU;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>BOOT_STATE_BKPR<sp/>==<sp/>0,<sp/>i.e.<sp/>Backup<sp/>Domain<sp/>Clear/Reset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(<sp/>RTC-&gt;BOOT_STATE_BKPR<sp/>))</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>RTC<sp/>Calendar<sp/>Configure<sp/>is<sp/>required</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u32BootState<sp/>|=<sp/>CALENDAR_UNINIT_MSK<sp/>|<sp/>BACKUP_RESET_MSK;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>the<sp/>SRAM2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAL_SYSCFG_SRAM2_WRP_UNLOCK();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAL_SYSCFG_SRAM2_ERASE();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>the<sp/>BootState</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>RTC-&gt;BOOT_STATE_BKPR<sp/>=<sp/>u32BootState;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u32BootState;</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_boot.c"/>
  </compounddef>
</doxygen>
