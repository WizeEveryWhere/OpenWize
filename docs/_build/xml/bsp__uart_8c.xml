<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="bsp__uart_8c" kind="file" language="C++">
    <compoundname>bsp_uart.c</compoundname>
    <includes refid="bsp__uart_8h" local="yes">bsp_uart.h</includes>
    <includes refid="platform_8h" local="yes">platform.h</includes>
    <includes local="no">stm32l4xx_hal.h</includes>
    <incdepgraph>
      <node id="5">
        <label>stdbool.h</label>
      </node>
      <node id="8">
        <label>assert.h</label>
      </node>
      <node id="6">
        <label>stdint.h</label>
      </node>
      <node id="3">
        <label>common.h</label>
        <link refid="common_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>stm32l4xx_hal.h</label>
      </node>
      <node id="7">
        <label>stddef.h</label>
      </node>
      <node id="2">
        <label>bsp_uart.h</label>
        <link refid="bsp__uart_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_uart.c</label>
        <link refid="bsp__uart_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>time.h</label>
      </node>
      <node id="11">
        <label>platform.h</label>
        <link refid="platform_8h"/>
      </node>
      <node id="4">
        <label>stdio.h</label>
      </node>
      <node id="10">
        <label>machine/endian.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__uart_1ga12c8ff02279e138d18bff6fa3bd34055" prot="public" static="no" mutable="no">
        <type><ref refid="structuart__dev__t" kindref="compound">uart_dev_t</ref></type>
        <definition>uart_dev_t aDevUart[UART_ID_MAX]</definition>
        <argsstring>[UART_ID_MAX]</argsstring>
        <name>aDevUart</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_uart.c" line="44" column="19" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_uart.c" declline="44" declcolumn="19"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__uart_1gaa66fe4e68da559d3297bb8d72b29fd87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BSP_Console_SetTXCallback</definition>
        <argsstring>(pfHandlerCB_t const pfCb)</argsstring>
        <name>BSP_Console_SetTXCallback</name>
        <param>
          <type>pfHandlerCB_t const</type>
          <declname>pfCb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_uart.c" line="47" column="6" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_uart.c" bodystart="47" bodyend="50" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/include/bsp_uart.h" declline="122" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__uart_1ga85958da447b731f0c42d4b0a0cf51697" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BSP_Console_SetRXCallback</definition>
        <argsstring>(pfHandlerCB_t const pfCb)</argsstring>
        <name>BSP_Console_SetRXCallback</name>
        <param>
          <type>pfHandlerCB_t const</type>
          <declname>pfCb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_uart.c" line="52" column="6" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_uart.c" bodystart="52" bodyend="55" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/include/bsp_uart.h" declline="123" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__uart_1ga3db2d192635f078a2185993730d6c9ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BSP_Console_SetWakupCallback</definition>
        <argsstring>(pfHandlerCB_t const pfCb)</argsstring>
        <name>BSP_Console_SetWakupCallback</name>
        <param>
          <type>pfHandlerCB_t const</type>
          <declname>pfCb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_uart.c" line="57" column="6" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_uart.c" bodystart="57" bodyend="60" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/include/bsp_uart.h" declline="124" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__uart_1gae3f357737d58bbdb237e1a37d767b7b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t BSP_Console_Init</definition>
        <argsstring>(void)</argsstring>
        <name>BSP_Console_Init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_uart.c" line="71" column="9" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_uart.c" bodystart="71" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="group__uart_1ga5b95ba303c10c2479e57dc5f55d92a7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t BSP_Console_Send</definition>
        <argsstring>(uint8_t *pData, uint16_t u16Length)</argsstring>
        <name>BSP_Console_Send</name>
        <param>
          <type>uint8_t *</type>
          <declname>pData</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>u16Length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_uart.c" line="79" column="9" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_uart.c" bodystart="79" bodyend="87" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/include/bsp_uart.h" declline="126" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__uart_1ga5b343f73d39c3d5894c0d7465ee5ee5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t BSP_Console_Received</definition>
        <argsstring>(uint8_t *pData, uint16_t u16Length)</argsstring>
        <name>BSP_Console_Received</name>
        <param>
          <type>uint8_t *</type>
          <declname>pData</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>u16Length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_uart.c" line="89" column="9" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_uart.c" bodystart="89" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="group__uart_1ga32b0767c54e21e81809fae1172059938" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void _bsp_com_TxISR_8BIT</definition>
        <argsstring>(UART_HandleTypeDef *huart)</argsstring>
        <name>_bsp_com_TxISR_8BIT</name>
        <param>
          <type>UART_HandleTypeDef *</type>
          <declname>huart</declname>
        </param>
        <briefdescription>
<para>TX interrupt handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">huart</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer on the uart handle</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>DEV_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>if everything is fine (see <ref refid="group__common_1gga94b6f98b42247b3a224a1d66f9d94f45ad29b92de0e82e55fca434978e59296eb" kindref="member">dev_res_e::DEV_SUCCESS</ref>) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DEV_INVALID_PARAM</parametername>
</parameternamelist>
<parameterdescription>
<para>if the given paramater is in valid (see <ref refid="group__common_1gga94b6f98b42247b3a224a1d66f9d94f45a673a34603423863416310db94277acea" kindref="member">dev_res_e::DEV_INVALID_PARAM</ref>) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_uart.c" line="109" column="13" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_uart.c" bodystart="109" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="group__uart_1ga65f6afd096bee2f2af9ae62b14a4548d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void _bsp_com_RxISR_8BIT</definition>
        <argsstring>(UART_HandleTypeDef *huart)</argsstring>
        <name>_bsp_com_RxISR_8BIT</name>
        <param>
          <type>UART_HandleTypeDef *</type>
          <declname>huart</declname>
        </param>
        <briefdescription>
<para>RX interrupt handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">huart</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer on the uart handle</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>DEV_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>if everything is fine (see <ref refid="group__common_1gga94b6f98b42247b3a224a1d66f9d94f45ad29b92de0e82e55fca434978e59296eb" kindref="member">dev_res_e::DEV_SUCCESS</ref>) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DEV_INVALID_PARAM</parametername>
</parameternamelist>
<parameterdescription>
<para>if the given paramater is in valid (see <ref refid="group__common_1gga94b6f98b42247b3a224a1d66f9d94f45a673a34603423863416310db94277acea" kindref="member">dev_res_e::DEV_INVALID_PARAM</ref>) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_uart.c" line="154" column="13" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_uart.c" bodystart="154" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="group__uart_1ga662aa947915a7fa6856c0c52d99c9a48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t BSP_Uart_SetCallback</definition>
        <argsstring>(uint8_t u8DevId, pfEvtCb_t const pfEvtCb, void *pCbParam)</argsstring>
        <name>BSP_Uart_SetCallback</name>
        <param>
          <type>uint8_t</type>
          <declname>u8DevId</declname>
        </param>
        <param>
          <type>pfEvtCb_t const</type>
          <declname>pfEvtCb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pCbParam</declname>
        </param>
        <briefdescription>
<para>Set the Uart interrupt callback. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">u8DevId</parametername>
</parameternamelist>
<parameterdescription>
<para>Uart device id (see <ref refid="group__platform_1ga7a07a9c22cf4b4f755d1e2e35a0ea9c7" kindref="member">uart_id_e</ref>) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pfEvtCb</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer on the callback function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pCbParam</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer on the callback parameter</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>DEV_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>if everything is fine (see <ref refid="group__common_1gga94b6f98b42247b3a224a1d66f9d94f45ad29b92de0e82e55fca434978e59296eb" kindref="member">dev_res_e::DEV_SUCCESS</ref>) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DEV_INVALID_PARAM</parametername>
</parameternamelist>
<parameterdescription>
<para>if the given paramater is in valid (see <ref refid="group__common_1gga94b6f98b42247b3a224a1d66f9d94f45a673a34603423863416310db94277acea" kindref="member">dev_res_e::DEV_INVALID_PARAM</ref>) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_uart.c" line="299" column="9" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_uart.c" bodystart="299" bodyend="309" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/include/bsp_uart.h" declline="128" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__uart_1gac3d30bc25c5c87863d8daee9735e3feb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t BSP_Uart_Init</definition>
        <argsstring>(uint8_t u8DevId, uint8_t u8CharMatch, uint8_t u8Mode, uint32_t u32Tmo)</argsstring>
        <name>BSP_Uart_Init</name>
        <param>
          <type>uint8_t</type>
          <declname>u8DevId</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>u8CharMatch</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>u8Mode</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>u32Tmo</declname>
        </param>
        <briefdescription>
<para>Configure the given uart (interrupt mode) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">u8DevId</parametername>
</parameternamelist>
<parameterdescription>
<para>Uart device id (see <ref refid="group__platform_1ga7a07a9c22cf4b4f755d1e2e35a0ea9c7" kindref="member">uart_id_e</ref>) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">u8CharMatch</parametername>
</parameternamelist>
<parameterdescription>
<para>Character to match </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">u8Mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Uart detection mode (see <ref refid="group__uart_1gaa9b294ac5b0f07a30daa293f5f7ed543" kindref="member">uart_mode_e</ref>) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">u32Tmo</parametername>
</parameternamelist>
<parameterdescription>
<para>Timeout (0 : timeout is not used)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>DEV_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>if everything is fine (see <ref refid="group__common_1gga94b6f98b42247b3a224a1d66f9d94f45ad29b92de0e82e55fca434978e59296eb" kindref="member">dev_res_e::DEV_SUCCESS</ref>) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DEV_INVALID_PARAM</parametername>
</parameternamelist>
<parameterdescription>
<para>if the given parameter is invalid (see <ref refid="group__common_1gga94b6f98b42247b3a224a1d66f9d94f45a673a34603423863416310db94277acea" kindref="member">dev_res_e::DEV_INVALID_PARAM</ref>) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_uart.c" line="323" column="9" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_uart.c" bodystart="323" bodyend="377" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/include/bsp_uart.h" declline="129" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__uart_1ga0d92d892dfc53345decd3dec30a3df62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t BSP_Uart_Transmit</definition>
        <argsstring>(uint8_t u8DevId, uint8_t *pData, uint16_t u16Length)</argsstring>
        <name>BSP_Uart_Transmit</name>
        <param>
          <type>uint8_t</type>
          <declname>u8DevId</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>pData</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>u16Length</declname>
        </param>
        <briefdescription>
<para>Start to transmit on the given uart (interrupt mode) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">u8DevId</parametername>
</parameternamelist>
<parameterdescription>
<para>Uart device id (see <ref refid="group__platform_1ga7a07a9c22cf4b4f755d1e2e35a0ea9c7" kindref="member">uart_id_e</ref>) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pData</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer on the buffer to send </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">u16Length</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the message</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>DEV_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>if everything is fine (see <ref refid="group__common_1gga94b6f98b42247b3a224a1d66f9d94f45ad29b92de0e82e55fca434978e59296eb" kindref="member">dev_res_e::DEV_SUCCESS</ref>) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DEV_INVALID_PARAM</parametername>
</parameternamelist>
<parameterdescription>
<para>if the given parameter is invalid (see <ref refid="group__common_1gga94b6f98b42247b3a224a1d66f9d94f45a673a34603423863416310db94277acea" kindref="member">dev_res_e::DEV_INVALID_PARAM</ref>) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DEV_BUSY</parametername>
</parameternamelist>
<parameterdescription>
<para>if the given device is busy (see <ref refid="group__common_1gga94b6f98b42247b3a224a1d66f9d94f45a75e5063f193825eea38ab72bada8e31e" kindref="member">dev_res_e::DEV_BUSY</ref>) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_uart.c" line="391" column="9" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_uart.c" bodystart="391" bodyend="428" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/include/bsp_uart.h" declline="130" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__uart_1gafaf0c7eae9c99c3a7a3d587e3e80bc34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t BSP_Uart_Receive</definition>
        <argsstring>(uint8_t u8DevId, uint8_t *pData, uint16_t u16Length)</argsstring>
        <name>BSP_Uart_Receive</name>
        <param>
          <type>uint8_t</type>
          <declname>u8DevId</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>pData</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>u16Length</declname>
        </param>
        <briefdescription>
<para>Start to receive on the given uart (interrupt mode) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">u8DevId</parametername>
</parameternamelist>
<parameterdescription>
<para>Uart device id (see <ref refid="group__platform_1ga7a07a9c22cf4b4f755d1e2e35a0ea9c7" kindref="member">uart_id_e</ref>) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pData</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer on receiving buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">u16Length</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of expected message</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>DEV_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>if everything is fine (see <ref refid="group__common_1gga94b6f98b42247b3a224a1d66f9d94f45ad29b92de0e82e55fca434978e59296eb" kindref="member">dev_res_e::DEV_SUCCESS</ref>) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DEV_INVALID_PARAM</parametername>
</parameternamelist>
<parameterdescription>
<para>if the given parameter is invalid (see <ref refid="group__common_1gga94b6f98b42247b3a224a1d66f9d94f45a673a34603423863416310db94277acea" kindref="member">dev_res_e::DEV_INVALID_PARAM</ref>) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DEV_BUSY</parametername>
</parameternamelist>
<parameterdescription>
<para>if the given device is busy (see <ref refid="group__common_1gga94b6f98b42247b3a224a1d66f9d94f45a75e5063f193825eea38ab72bada8e31e" kindref="member">dev_res_e::DEV_BUSY</ref>) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_uart.c" line="442" column="9" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_uart.c" bodystart="442" bodyend="515" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/include/bsp_uart.h" declline="131" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__uart_1ga8fcc5154f7a3bb9425007394c28e799b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t BSP_Uart_AbortReceive</definition>
        <argsstring>(uint8_t u8DevId)</argsstring>
        <name>BSP_Uart_AbortReceive</name>
        <param>
          <type>uint8_t</type>
          <declname>u8DevId</declname>
        </param>
        <briefdescription>
<para>Abort the UART receive (interrupt mode) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">u8DevId</parametername>
</parameternamelist>
<parameterdescription>
<para>Uart device id (see <ref refid="group__platform_1ga7a07a9c22cf4b4f755d1e2e35a0ea9c7" kindref="member">uart_id_e</ref>)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>DEV_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>if everything is fine (see <ref refid="group__common_1gga94b6f98b42247b3a224a1d66f9d94f45ad29b92de0e82e55fca434978e59296eb" kindref="member">dev_res_e::DEV_SUCCESS</ref>) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DEV_INVALID_PARAM</parametername>
</parameternamelist>
<parameterdescription>
<para>if the given parameter is invalid (see <ref refid="group__common_1gga94b6f98b42247b3a224a1d66f9d94f45a673a34603423863416310db94277acea" kindref="member">dev_res_e::DEV_INVALID_PARAM</ref>) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_uart.c" line="526" column="9" bodyfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_uart.c" bodystart="526" bodyend="556" declfile="/home/nono/OpenWize/demo/Nucleo-L476/bsp/include/bsp_uart.h" declline="132" declcolumn="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This file expose public functions of uart devices. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para>2019, GRDF, Inc. All rights reserved.</para>
</simplesect>
Redistribution and use in source and binary forms, with or without modification, are permitted (subject to the limitations in the disclaimer below) provided that the following conditions are met:<itemizedlist>
<listitem><para>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</para>
</listitem><listitem><para>Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</para>
</listitem><listitem><para>Neither the name of GRDF, Inc. nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="par"><title>Revision history</title><para></para>
</simplesect>
<simplesect kind="par"><title>1.0.0 : 2019/12/20 [BPI]</title><para>Initial version </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="36"><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bsp__uart_8h" kindref="compound">bsp_uart.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="platform_8h" kindref="compound">platform.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stm32l4xx_hal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structuart__dev__t" kindref="compound">uart_dev_t</ref><sp/>aDevUart[UART_ID_MAX];</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BSP_Console_SetTXCallback<sp/>(pfHandlerCB_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pfCb)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>pfConsoleTXEvent<sp/>=<sp/>pfCb;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BSP_Console_SetRXCallback<sp/>(pfHandlerCB_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pfCb)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>pfConsoleRXEvent<sp/>=<sp/>pfCb;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BSP_Console_SetWakupCallback<sp/>(pfHandlerCB_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pfCb)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>pfConsoleWakupEvent<sp/>=<sp/>pfCb;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/>TODO:</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/>HAL_UARTEx_StopModeWakeUpSourceConfig(UART_HandleTypeDef<sp/>*huart,<sp/>UART_WakeUpTypeDef<sp/>WakeUpSelection)</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/>HAL_UARTEx_EnableStopMode(UART_HandleTypeDef<sp/>*huart)</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/>HAL_UARTEx_DisableStopMode(UART_HandleTypeDef<sp/>*huart)</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">uint8_t<sp/>BSP_Console_Init(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common_1ga94b6f98b42247b3a224a1d66f9d94f45" kindref="member">dev_res_e</ref><sp/>eRet<sp/>=<sp/><ref refid="group__common_1gga94b6f98b42247b3a224a1d66f9d94f45a673a34603423863416310db94277acea" kindref="member">DEV_INVALID_PARAM</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eRet;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal">uint8_t<sp/>BSP_Console_Send(uint8_t<sp/>*pData,<sp/>uint16_t<sp/>u16Length)</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common_1ga94b6f98b42247b3a224a1d66f9d94f45" kindref="member">dev_res_e</ref><sp/>eRet<sp/>=<sp/><ref refid="group__common_1gga94b6f98b42247b3a224a1d66f9d94f45a673a34603423863416310db94277acea" kindref="member">DEV_INVALID_PARAM</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//eRet<sp/>=<sp/>HAL_UART_Transmit(paUART_BusHandle[UART_ID_CONSOLE],<sp/>pData,<sp/>u16Length,<sp/>CONSOLE_TX_TIMEOUT);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//eRet<sp/>=<sp/>HAL_UART_Transmit_DMA(paUART_BusHandle[UART_ID_CONSOLE],<sp/>pData,<sp/>u16Length);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>eRet<sp/>=<sp/>HAL_UART_Transmit_IT(aDevUart[<ref refid="group__platform_1gga7a07a9c22cf4b4f755d1e2e35a0ea9c7a46340c7c4a5f968d03cad4b8628a294a" kindref="member">UART_ID_CONSOLE</ref>].hHandle,<sp/>pData,<sp/>u16Length);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eRet;</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">uint8_t<sp/>BSP_Console_Received(uint8_t<sp/>*pData,<sp/>uint16_t<sp/>u16Length)</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common_1ga94b6f98b42247b3a224a1d66f9d94f45" kindref="member">dev_res_e</ref><sp/>eRet<sp/>=<sp/><ref refid="group__common_1gga94b6f98b42247b3a224a1d66f9d94f45a673a34603423863416310db94277acea" kindref="member">DEV_INVALID_PARAM</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//eRet<sp/>=<sp/>HAL_UART_Receive(paUART_BusHandle[UART_ID_CONSOLE],<sp/>pData,<sp/>u16Length,<sp/>CONSOLE_RX_TIMEOUT);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>eRet<sp/>=<sp/>HAL_UART_Receive_IT(aDevUart[<ref refid="group__platform_1gga7a07a9c22cf4b4f755d1e2e35a0ea9c7a46340c7c4a5f968d03cad4b8628a294a" kindref="member">UART_ID_CONSOLE</ref>].hHandle,<sp/>pData,<sp/>u16Length);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eRet;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_bsp_com_TxISR_8BIT(UART_HandleTypeDef<sp/>*huart)</highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>tmp;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>a<sp/>Tx<sp/>process<sp/>is<sp/>ongoing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;gState<sp/>==<sp/>HAL_UART_STATE_BUSY_TX)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;TxXferCount<sp/>==<sp/>0U)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>the<sp/>UART<sp/>Transmit<sp/>Data<sp/>Register<sp/>Empty<sp/>Interrupt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLEAR_BIT(huart-&gt;Instance-&gt;CR1,<sp/>USART_CR1_TXEIE);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>the<sp/>UART<sp/>Transmit<sp/>Complete<sp/>Interrupt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SET_BIT(huart-&gt;Instance-&gt;CR1,<sp/>USART_CR1_TCIE);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>(uint16_t)(*huart-&gt;pTxBuffPtr<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(huart-&gt;Instance-&gt;CR1<sp/>&amp;<sp/>UART_WORDLENGTH_9B<sp/>)<sp/>&amp;&amp;<sp/>(huart-&gt;TxXferCount<sp/>==<sp/>huart-&gt;TxXferSize)<sp/>)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>9th<sp/>bit<sp/>as<sp/>address<sp/>marker</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>|=<sp/>0x100;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;Instance-&gt;TDR<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;pTxBuffPtr++;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;TxXferCount--;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TX<sp/>flush<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAL_UART_SEND_REQ(huart,<sp/>UART_TXDATA_FLUSH_REQUEST);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_bsp_com_RxISR_8BIT(UART_HandleTypeDef<sp/>*huart)</highlight></codeline>
<codeline lineno="155"><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>uhMask<sp/>=<sp/>huart-&gt;Mask;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>uhdata;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>evt<sp/>=<sp/><ref refid="group__uart_1gga6f438b1d1767658dc7e9eefb523f6384adc06f6f51824ad1fd940ff02de5afea5" kindref="member">UART_EVT_NONE</ref>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>isrflags<sp/><sp/><sp/>=<sp/>READ_REG(huart-&gt;Instance-&gt;ISR);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>cr1its<sp/><sp/><sp/><sp/><sp/>=<sp/>READ_REG(huart-&gt;Instance-&gt;CR1);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//uint32_t<sp/>cr3its<sp/><sp/><sp/><sp/><sp/>=<sp/>READ_REG(huart-&gt;Instance-&gt;CR3);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>a<sp/>Rx<sp/>process<sp/>is<sp/>ongoing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;RxState<sp/>==<sp/>HAL_UART_STATE_BUSY_RX)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uhdata<sp/>=<sp/>(uint16_t)<sp/>READ_REG(huart-&gt;Instance-&gt;RDR);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Character<sp/>match<sp/>detected<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(isrflags<sp/>&amp;<sp/>USART_ISR_CMF)<sp/>)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(uhdata<sp/>&amp;<sp/>0x100)<sp/>&amp;&amp;<sp/>(cr1its<sp/>&amp;<sp/>UART_WORDLENGTH_9B)<sp/>)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SOB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;pRxBuffPtr<sp/>-=<sp/>huart-&gt;RxXferSize<sp/>-<sp/>huart-&gt;RxXferCount;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;RxXferCount<sp/>=<sp/>huart-&gt;RxXferSize;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>evt<sp/>=<sp/>UART_EVT_RX_HCPLT;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(cr1its<sp/>&amp;<sp/>USART_CR1_CMIE)<sp/><sp/>)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>Character<sp/>Match<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLEAR_BIT(huart-&gt;Instance-&gt;CR1,<sp/>USART_CR1_CMIE);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>EOB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>evt<sp/>=<sp/><ref refid="group__uart_1gga6f438b1d1767658dc7e9eefb523f6384a5c0b5d8ff56f506f748c98e8929ef135" kindref="member">UART_EVT_RX_CPLT</ref>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>Character<sp/>Match<sp/>Flag<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WRITE_REG(huart-&gt;Instance-&gt;ICR,<sp/>USART_ICR_CMCF);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*huart-&gt;pRxBuffPtr<sp/>=<sp/>(uint8_t)(uhdata<sp/>&amp;<sp/>(uint8_t)uhMask);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;pRxBuffPtr++;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;RxXferCount--;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cr1its<sp/>&amp;<sp/>UART_WORDLENGTH_9B)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Frame<sp/>Length<sp/>is<sp/>given<sp/>in<sp/>the<sp/>2nd<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(huart-&gt;RxXferSize<sp/>-<sp/>huart-&gt;RxXferCount)<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(uhdata<sp/>&amp;<sp/>0xFF)<sp/>&lt;<sp/>huart-&gt;RxXferSize<sp/>)<sp/></highlight><highlight class="comment">//<sp/>+2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;RxXferCount<sp/>=<sp/>uhdata<sp/>&amp;<sp/>0xFF;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cancel<sp/>:<sp/>buffer<sp/>will<sp/>overflow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>evt<sp/>=<sp/>UART_EVT_RX_ABT;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(huart-&gt;RxXferCount<sp/>==<sp/>0U)<sp/>&amp;&amp;<sp/>(evt<sp/>!=<sp/>UART_EVT_RX_ABT)<sp/>)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>evt<sp/>=<sp/><ref refid="group__uart_1gga6f438b1d1767658dc7e9eefb523f6384a5c0b5d8ff56f506f748c98e8929ef135" kindref="member">UART_EVT_RX_CPLT</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>evt<sp/>==<sp/><ref refid="group__uart_1gga6f438b1d1767658dc7e9eefb523f6384a5c0b5d8ff56f506f748c98e8929ef135" kindref="member">UART_EVT_RX_CPLT</ref><sp/>)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!(cr1its<sp/>&amp;<sp/>UART_WORDLENGTH_9B))</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*huart-&gt;pRxBuffPtr<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>UART<sp/>Parity<sp/>Error<sp/>Interrupt<sp/>and<sp/>RXNE<sp/>interrupts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLEAR_BIT(huart-&gt;Instance-&gt;CR1,<sp/>(USART_CR1_RXNEIE<sp/>|<sp/>USART_CR1_PEIE<sp/>|<sp/>USART_CR1_CMIE));</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>the<sp/>UART<sp/>Error<sp/>Interrupt:<sp/>(Frame<sp/>error,<sp/>noise<sp/>error,<sp/>overrun<sp/>error)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLEAR_BIT(huart-&gt;Instance-&gt;CR3,<sp/>USART_CR3_EIE);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Rx<sp/>process<sp/>is<sp/>completed,<sp/>restore<sp/>huart-&gt;RxState<sp/>to<sp/>Ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;RxState<sp/>=<sp/>HAL_UART_STATE_READY;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>registered<sp/>Rx<sp/>complete<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;RxCpltCallback(huart);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>legacy<sp/>weak<sp/>Rx<sp/>complete<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAL_UART_RxCpltCallback(huart);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_HAL_UART_REGISTER_CALLBACKS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>evt<sp/>==<sp/>UART_EVT_RX_HCPLT<sp/>)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>registered<sp/>Rx<sp/>complete<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;RxHalfCpltCallback(huart);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Call<sp/>legacy<sp/>weak<sp/>Rx<sp/>half<sp/>complete<sp/>callback*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAL_UART_RxHalfCpltCallback(huart);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_HAL_UART_REGISTER_CALLBACKS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>RX<sp/>flush<sp/>request<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAL_UART_SEND_REQ(huart,<sp/>UART_RXDATA_FLUSH_REQUEST);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(isrflags<sp/>&amp;<sp/>USART_ISR_RTOF)<sp/>&amp;&amp;<sp/>(cr1its<sp/>&amp;<sp/>USART_CR1_RTOIE)<sp/>)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TMO<sp/>detected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>evt<sp/>=<sp/>UART_EVT_RX_ABT;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>Receive<sp/>Timeout<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//CLEAR_BIT(huart-&gt;Instance-&gt;CR1,<sp/>USART_CR1_RTOIE);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>Receive<sp/>Timeout<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//CLEAR_BIT(huart-&gt;Instance-&gt;CR1,<sp/>USART_CR1_IDLEIE);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WRITE_REG(huart-&gt;Instance-&gt;ICR,<sp/>(USART_ICR_RTOCF));<sp/></highlight><highlight class="comment">//|<sp/>USART_ICR_IDLECF)<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>Receive<sp/>Timeout<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//CLEAR_BIT(huart-&gt;Instance-&gt;CR2,<sp/>USART_CR2_RTOEN);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//huart-&gt;gState<sp/>|=<sp/>HAL_UART_STATE_TIMEOUT;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>user<sp/>Abort<sp/>complete<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(evt<sp/>==<sp/>UART_EVT_RX_ABT)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(USE_HAL_UART_REGISTER_CALLBACKS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>registered<sp/>Abort<sp/>Receive<sp/>Complete<sp/>Callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;AbortReceiveCpltCallback(huart);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>legacy<sp/>weak<sp/>Abort<sp/>Receive<sp/>Complete<sp/>Callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAL_UART_AbortReceiveCpltCallback(huart);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_HAL_UART_REGISTER_CALLBACKS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;RxState<sp/>=<sp/>HAL_UART_STATE_READY;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="group__uart_1ga662aa947915a7fa6856c0c52d99c9a48" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="group__uart_1ga662aa947915a7fa6856c0c52d99c9a48" kindref="member">BSP_Uart_SetCallback</ref><sp/>(uint8_t<sp/>u8DevId,<sp/>pfEvtCb_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pfEvtCb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pCbParam)</highlight></codeline>
<codeline lineno="300"><highlight class="normal">{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u8DevId<sp/>&gt;=<sp/>UART_ID_MAX)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common_1gga94b6f98b42247b3a224a1d66f9d94f45a673a34603423863416310db94277acea" kindref="member">DEV_INVALID_PARAM</ref>;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>aDevUart[u8DevId].<ref refid="structuart__dev__t_1aaa36da6cb29431f08c4ceda6da511e30" kindref="member">pfEvent</ref><sp/>=<sp/>pfEvtCb;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>aDevUart[u8DevId].<ref refid="structuart__dev__t_1a6116517953c13fff9acb6da180811d8e" kindref="member">pCbParam</ref><sp/>=<sp/>pCbParam;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common_1gga94b6f98b42247b3a224a1d66f9d94f45ad29b92de0e82e55fca434978e59296eb" kindref="member">DEV_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="323" refid="group__uart_1gac3d30bc25c5c87863d8daee9735e3feb" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="group__uart_1gac3d30bc25c5c87863d8daee9735e3feb" kindref="member">BSP_Uart_Init</ref>(uint8_t<sp/>u8DevId,<sp/>uint8_t<sp/>u8CharMatch,<sp/>uint8_t<sp/>u8Mode,<sp/>uint32_t<sp/>u32Tmo)</highlight></codeline>
<codeline lineno="324"><highlight class="normal">{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>UART_HandleTypeDef<sp/>*huart<sp/>=<sp/>aDevUart[u8DevId].<ref refid="structuart__dev__t_1a8b01596e4f6486747096b23455f99f08" kindref="member">hHandle</ref>;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u8DevId<sp/>&gt;=<sp/>UART_ID_MAX)</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common_1gga94b6f98b42247b3a224a1d66f9d94f45a673a34603423863416310db94277acea" kindref="member">DEV_INVALID_PARAM</ref>;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>__HAL_UART_DISABLE(huart);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>all<sp/>interrupt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>CLEAR_BIT(huart-&gt;Instance-&gt;CR1,<sp/>(</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>USART_CR1_CMIE<sp/>|<sp/>USART_CR1_MME<sp/>|<sp/>USART_CR1_PCE<sp/>|</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>USART_CR1_PEIE<sp/>|<sp/>USART_CR1_TXEIE<sp/>|<sp/>USART_CR1_TCIE<sp/>|</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>USART_CR1_RXNEIE<sp/>|<sp/>USART_CR1_IDLEIE)<sp/>);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>aDevUart[u8DevId].<ref refid="structuart__dev__t_1a93b9b5d094b5dd2af4e83ac3f67727e8" kindref="member">u8CharMatch</ref><sp/>=<sp/>u8CharMatch;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>aDevUart[u8DevId].<ref refid="structuart__dev__t_1a9eadc95135c09a9d5e7f92c523bb8c3e" kindref="member">u8Mode</ref><sp/>=<sp/>u8Mode;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(u32Tmo)</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aDevUart[u8DevId].<ref refid="structuart__dev__t_1a6b3f9e171ee520e0269f73820b602f4d" kindref="member">u32Tmo</ref><sp/>=<sp/>u32Tmo<sp/>&amp;<sp/>0x00FFFFFF;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>Receiver<sp/>timeout<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SET_BIT(huart-&gt;Instance-&gt;CR2,<sp/>USART_CR2_RTOEN);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>Receiver<sp/>timeout<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MODIFY_REG(huart-&gt;Instance-&gt;RTOR,<sp/>USART_RTOR_RTO,<sp/>u32Tmo);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aDevUart[u8DevId].<ref refid="structuart__dev__t_1a6b3f9e171ee520e0269f73820b602f4d" kindref="member">u32Tmo</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLEAR_BIT(huart-&gt;Instance-&gt;CR2,<sp/>USART_CR2_RTOEN);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u8Mode<sp/>!=<sp/><ref refid="group__uart_1ggaa9b294ac5b0f07a30daa293f5f7ed543afda5fb77b66ad0986c5cb492b63ea5ff" kindref="member">UART_MODE_NONE</ref>)</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>Address<sp/>value*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MODIFY_REG(huart-&gt;Instance-&gt;CR2,<sp/>USART_CR2_ADD,<sp/>(u8CharMatch<sp/>&lt;&lt;<sp/>USART_CR2_ADD_Pos)<sp/>);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>7<sp/>bits<sp/>Address<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SET_BIT(huart-&gt;Instance-&gt;CR2,<sp/>USART_CR2_ADDM7);</highlight><highlight class="comment">//UART_ADDRESS_DETECT_7B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u8Mode<sp/>==<sp/><ref refid="group__uart_1ggaa9b294ac5b0f07a30daa293f5f7ed543a60836509eb0414299a4730f0c55d728a" kindref="member">UART_MODE_ADDR</ref>)</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SET_BIT(huart-&gt;Instance-&gt;CR1,<sp/>(USART_CR1_MME<sp/>|<sp/>USART_CR1_WAKE));</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLEAR_BIT(huart-&gt;Instance-&gt;CR1,<sp/>(USART_CR1_PCE));</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>all<sp/>flag<sp/>:<sp/>already<sp/>done<sp/>with<sp/>__HAL_UART_DISABLE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>WRITE_REG(huart-&gt;Instance-&gt;ICR,<sp/>0xFFFFFFFF<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;RxISR<sp/>=<sp/>_bsp_com_RxISR_8BIT;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>huart-&gt;TxISR<sp/>=<sp/>_bsp_com_TxISR_8BIT;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>__HAL_UART_ENABLE(huart);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common_1gga94b6f98b42247b3a224a1d66f9d94f45ad29b92de0e82e55fca434978e59296eb" kindref="member">DEV_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="391" refid="group__uart_1ga0d92d892dfc53345decd3dec30a3df62" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="group__uart_1ga0d92d892dfc53345decd3dec30a3df62" kindref="member">BSP_Uart_Transmit</ref>(uint8_t<sp/>u8DevId,<sp/>uint8_t<sp/>*pData,<sp/>uint16_t<sp/>u16Length)</highlight></codeline>
<codeline lineno="392"><highlight class="normal">{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>UART_HandleTypeDef<sp/>*huart<sp/>=<sp/>aDevUart[u8DevId].<ref refid="structuart__dev__t_1a8b01596e4f6486747096b23455f99f08" kindref="member">hHandle</ref>;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u8DevId<sp/>&gt;=<sp/>UART_ID_MAX)</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common_1gga94b6f98b42247b3a224a1d66f9d94f45a673a34603423863416310db94277acea" kindref="member">DEV_INVALID_PARAM</ref>;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>a<sp/>Tx<sp/>process<sp/>is<sp/>not<sp/>already<sp/>ongoing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;gState<sp/>==<sp/>HAL_UART_STATE_READY)</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pData<sp/>==<sp/>NULL)<sp/>||<sp/>(u16Length<sp/>==<sp/>0U))</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common_1gga94b6f98b42247b3a224a1d66f9d94f45a673a34603423863416310db94277acea" kindref="member">DEV_INVALID_PARAM</ref>;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAL_LOCK(huart);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;pTxBuffPtr<sp/><sp/>=<sp/>pData;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;TxXferSize<sp/><sp/>=<sp/>u16Length;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;TxXferCount<sp/>=<sp/>u16Length;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;TxISR<sp/>=<sp/>_bsp_com_TxISR_8BIT;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;ErrorCode<sp/>=<sp/>HAL_UART_ERROR_NONE;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;gState<sp/>=<sp/>HAL_UART_STATE_BUSY_TX;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAL_UNLOCK(huart);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>Transmit<sp/>Data<sp/>Register<sp/>Empty<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SET_BIT(huart-&gt;Instance-&gt;CR1,<sp/>USART_CR1_TXEIE);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common_1gga94b6f98b42247b3a224a1d66f9d94f45ad29b92de0e82e55fca434978e59296eb" kindref="member">DEV_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common_1gga94b6f98b42247b3a224a1d66f9d94f45a75e5063f193825eea38ab72bada8e31e" kindref="member">DEV_BUSY</ref>;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal">}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="442" refid="group__uart_1gafaf0c7eae9c99c3a7a3d587e3e80bc34" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="group__uart_1gafaf0c7eae9c99c3a7a3d587e3e80bc34" kindref="member">BSP_Uart_Receive</ref>(uint8_t<sp/>u8DevId,<sp/>uint8_t<sp/>*pData,<sp/>uint16_t<sp/>u16Length)</highlight></codeline>
<codeline lineno="443"><highlight class="normal">{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>UART_HandleTypeDef<sp/>*huart<sp/>=<sp/>aDevUart[u8DevId].<ref refid="structuart__dev__t_1a8b01596e4f6486747096b23455f99f08" kindref="member">hHandle</ref>;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u8DevId<sp/>&gt;=<sp/>UART_ID_MAX)</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common_1gga94b6f98b42247b3a224a1d66f9d94f45a673a34603423863416310db94277acea" kindref="member">DEV_INVALID_PARAM</ref>;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>uint32_t<sp/>itflags<sp/>=<sp/>READ_REG(huart-&gt;Instance-&gt;CR1);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>a<sp/>Rx<sp/>process<sp/>is<sp/>not<sp/>already<sp/>ongoing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(huart-&gt;RxState<sp/>==<sp/>HAL_UART_STATE_READY)</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pData<sp/>==<sp/>NULL)<sp/>||<sp/>(u16Length<sp/>==<sp/>0U))</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common_1gga94b6f98b42247b3a224a1d66f9d94f45a673a34603423863416310db94277acea" kindref="member">DEV_INVALID_PARAM</ref>;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAL_LOCK(huart);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;pRxBuffPtr<sp/><sp/>=<sp/>pData;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;RxXferSize<sp/><sp/>=<sp/>u16Length;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;RxXferCount<sp/>=<sp/>u16Length;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//huart-&gt;RxISR<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;RxISR<sp/>=<sp/>_bsp_com_RxISR_8BIT;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Computation<sp/>of<sp/>UART<sp/>mask<sp/>to<sp/>apply<sp/>to<sp/>RDR<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UART_MASK_COMPUTATION(huart);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;ErrorCode<sp/>=<sp/>HAL_UART_ERROR_NONE;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;RxState<sp/>=<sp/>HAL_UART_STATE_BUSY_RX;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>UART<sp/>Error<sp/>Interrupt:<sp/>(Frame<sp/>error,<sp/>noise<sp/>error,<sp/>overrun<sp/>error)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SET_BIT(huart-&gt;Instance-&gt;CR3,<sp/>USART_CR3_EIE);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>Receiver<sp/>timeout<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(aDevUart[u8DevId].u32Tmo)</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>Receiver<sp/>timeout<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MODIFY_REG(huart-&gt;Instance-&gt;RTOR,<sp/>USART_RTOR_RTO,<sp/>aDevUart[u8DevId].<ref refid="structuart__dev__t_1a6b3f9e171ee520e0269f73820b602f4d" kindref="member">u32Tmo</ref>);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>Receiver<sp/>timeout<sp/>interrupt*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itflags<sp/>|=<sp/>USART_CR1_RTOIE;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itflags<sp/>|=<sp/>USART_CR1_RTOIE;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(aDevUart[u8DevId].u8Mode<sp/>!=<sp/><ref refid="group__uart_1ggaa9b294ac5b0f07a30daa293f5f7ed543aa5515a16810232ac2219ba281da8d366" kindref="member">UART_MODE_EOB</ref>)</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(aDevUart[u8DevId].u8Mode<sp/>==<sp/>UART_MODE_NONE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itflags<sp/>&amp;=<sp/>~(USART_CR1_CMIE);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>Character<sp/>Match<sp/>interrupt*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itflags<sp/>|=<sp/>USART_CR1_CMIE;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//huart-&gt;RxISR<sp/>=<sp/>_bsp_com_RxISR_8BIT;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>the<sp/>UART<sp/>Parity<sp/>Error<sp/>interrupt<sp/>and<sp/>Data<sp/>Register<sp/>Not<sp/>Empty<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itflags<sp/>|=<sp/>USART_CR1_PEIE<sp/>|<sp/>USART_CR1_RXNEIE;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAL_UNLOCK(huart);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WRITE_REG(huart-&gt;Instance-&gt;CR1,<sp/>itflags);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAL_UART_SEND_REQ(huart,<sp/>UART_MUTE_MODE_REQUEST);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common_1gga94b6f98b42247b3a224a1d66f9d94f45ad29b92de0e82e55fca434978e59296eb" kindref="member">DEV_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common_1gga94b6f98b42247b3a224a1d66f9d94f45a75e5063f193825eea38ab72bada8e31e" kindref="member">DEV_BUSY</ref>;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="526" refid="group__uart_1ga8fcc5154f7a3bb9425007394c28e799b" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="group__uart_1ga8fcc5154f7a3bb9425007394c28e799b" kindref="member">BSP_Uart_AbortReceive</ref>(uint8_t<sp/>u8DevId)</highlight></codeline>
<codeline lineno="527"><highlight class="normal">{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>UART_HandleTypeDef<sp/>*huart<sp/>=<sp/>aDevUart[u8DevId].<ref refid="structuart__dev__t_1a8b01596e4f6486747096b23455f99f08" kindref="member">hHandle</ref>;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u8DevId<sp/>&gt;=<sp/>UART_ID_MAX)</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common_1gga94b6f98b42247b3a224a1d66f9d94f45a673a34603423863416310db94277acea" kindref="member">DEV_INVALID_PARAM</ref>;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>uint32_t<sp/>itflags<sp/>=<sp/>READ_REG(huart-&gt;Instance-&gt;CR1);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(itflags<sp/>&amp;<sp/>USART_CR1_RXNEIE)</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLEAR_BIT(huart-&gt;Instance-&gt;CR1,<sp/>(USART_CR1_RXNEIE<sp/>|<sp/>USART_CR1_PEIE));</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLEAR_BIT(huart-&gt;Instance-&gt;CR3,<sp/>USART_CR3_EIE);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>Rx<sp/>transfer<sp/>counter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;RxXferCount<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>RxISR<sp/>function<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;pRxBuffPtr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>the<sp/>Error<sp/>flags<sp/>in<sp/>the<sp/>ICR<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAL_UART_CLEAR_FLAG(huart,<sp/>UART_CLEAR_OREF<sp/>|<sp/>UART_CLEAR_NEF<sp/>|<sp/>UART_CLEAR_PEF<sp/>|<sp/>UART_CLEAR_FEF);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Discard<sp/>the<sp/>received<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__HAL_UART_SEND_REQ(huart,<sp/>UART_RXDATA_FLUSH_REQUEST);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Restore<sp/>huart-&gt;RxState<sp/>to<sp/>Ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huart-&gt;RxState<sp/>=<sp/>HAL_UART_STATE_READY;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common_1gga94b6f98b42247b3a224a1d66f9d94f45ad29b92de0e82e55fca434978e59296eb" kindref="member">DEV_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="556"><highlight class="normal">}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal">}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/nono/OpenWize/demo/Nucleo-L476/bsp/src/bsp_uart.c"/>
  </compounddef>
</doxygen>
