<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="img__storage_8h" kind="file" language="C++">
    <compoundname>img_storage.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">stddef.h</includes>
    <includedby refid="img__storage__private_8h" local="yes">/home/nono/OpenWize/sources/Samples/ImgStorage/include/private/img_storage_private.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>stdint.h</label>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
      <node id="1">
        <label>/home/nono/OpenWize/sources/Samples/ImgStorage/include/img_storage.h</label>
        <link refid="img__storage_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>/home/nono/OpenWize/sources/Samples/ImgStorage/include/img_storage.h</label>
        <link refid="img__storage_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/nono/OpenWize/sources/Samples/ImgStorage/src/img_storage.c</label>
        <link refid="img__storage_8c"/>
      </node>
      <node id="2">
        <label>/home/nono/OpenWize/sources/Samples/ImgStorage/include/private/img_storage_private.h</label>
        <link refid="img__storage__private_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__ing__storage_1gaed3139f981a477515ce7a28b5f655f6d" prot="public" static="no" strong="no">
        <type></type>
        <name>img_pend_e</name>
        <enumvalue id="group__ing__storage_1ggaed3139f981a477515ce7a28b5f655f6da5b8f48c5b2a8ca3b36770d2c81926be6" prot="public">
          <name>PENDING_SETUP</name>
          <initializer>= 0x00</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ing__storage_1ggaed3139f981a477515ce7a28b5f655f6dae0d143df348e9057f8ea564791cfd01a" prot="public">
          <name>PENDING_NONE</name>
          <initializer>= 0x01</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ing__storage_1ggaed3139f981a477515ce7a28b5f655f6da7294a049a78f1877711e1d6717263d6f" prot="public">
          <name>PENDING_LOCAL</name>
          <initializer>= 0x11</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ing__storage_1ggaed3139f981a477515ce7a28b5f655f6da5cf21bc17b17fdc88a61846c9f7919b7" prot="public">
          <name>PENDING_REMOTE</name>
          <initializer>= 0x21</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>This enum define pending image entry. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/ImgStorage/include/img_storage.h" line="47" column="14" bodyfile="/home/nono/OpenWize/sources/Samples/ImgStorage/include/img_storage.h" bodystart="47" bodyend="52"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__ing__storage_1ga0d07748bda413074bcac18f7bf9d6d9f" prot="public" static="no">
        <type>uint8_t(*</type>
        <definition>typedef uint8_t(* pfWriteFlash_t) (uint32_t u32Addr, uint64_t *pData, uint32_t u32NbDoubleWord)</definition>
        <argsstring>)(uint32_t u32Addr, uint64_t *pData, uint32_t u32NbDoubleWord)</argsstring>
        <name>pfWriteFlash_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/ImgStorage/include/img_storage.h" line="54" column="9" bodyfile="/home/nono/OpenWize/sources/Samples/ImgStorage/include/img_storage.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__ing__storage_1gaf176b93567ea3afd20dbaf01a6c273a6" prot="public" static="no">
        <type>uint8_t(*</type>
        <definition>typedef uint8_t(* pfEraseFlash_t) (uint32_t u32Addr, uint32_t u32Size)</definition>
        <argsstring>)(uint32_t u32Addr, uint32_t u32Size)</argsstring>
        <name>pfEraseFlash_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/ImgStorage/include/img_storage.h" line="55" column="9" bodyfile="/home/nono/OpenWize/sources/Samples/ImgStorage/include/img_storage.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__ing__storage_1ga144e1e6dcc412c77efbf7d010f88475f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ImgStore_StoreBlock</definition>
        <argsstring>(uint16_t u16_BlkId, uint8_t *p_Blk)</argsstring>
        <name>ImgStore_StoreBlock</name>
        <param>
          <type>uint16_t</type>
          <declname>u16_BlkId</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>p_Blk</declname>
        </param>
        <briefdescription>
<para>Save the given software block and set its corresponding bit &quot;on&quot; into the bitmap. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">u16_BlkId</parametername>
</parameternamelist>
<parameterdescription>
<para>The Id of the given block. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*p_Blk</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer on the software block. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/ImgStorage/src/img_storage.c" line="77" column="6" bodyfile="/home/nono/OpenWize/sources/Samples/ImgStorage/src/img_storage.c" bodystart="77" bodyend="253" declfile="/home/nono/OpenWize/sources/Samples/ImgStorage/include/img_storage.h" declline="57" declcolumn="6"/>
        <references refid="structimg__mgr__ctx__s_1a4220013bebebb4eba2144a3b8fdc8d46" compoundref="img__storage__private_8h" startline="193">img_mgr_ctx_s::u32Size</references>
        <references refid="group__ing__storage_1ga804d3a2653800be126e7c68a0465e996" compoundref="img__storage_8c" startline="425" endline="432">_get_bitmap_bit</references>
      </memberdef>
      <memberdef kind="function" id="group__ing__storage_1gaefbe2245b4976f5040f48a3c3ef84289" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t ImgStore_IsComplete</definition>
        <argsstring>(void)</argsstring>
        <name>ImgStore_IsComplete</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Check if the given software image is complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Not complete </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Complete </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/ImgStorage/src/img_storage.c" line="261" column="9" bodyfile="/home/nono/OpenWize/sources/Samples/ImgStorage/src/img_storage.c" bodystart="261" bodyend="264" declfile="/home/nono/OpenWize/sources/Samples/ImgStorage/include/img_storage.h" declline="58" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__ing__storage_1ga338ec5b155cfe028d5bc961be39d27b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t ImgStore_Verify</definition>
        <argsstring>(uint8_t *pImgHash, uint8_t u8DigestSz)</argsstring>
        <name>ImgStore_Verify</name>
        <param>
          <type>uint8_t *</type>
          <declname>pImgHash</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>u8DigestSz</declname>
        </param>
        <briefdescription>
<para>Verify the sw image integrity (sha256). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pImgHash</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer on expected image sha256 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">u8DigestSz</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of expected image sha256</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Success </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Failed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/ImgStorage/src/img_storage.c" line="275" column="9" bodyfile="/home/nono/OpenWize/sources/Samples/ImgStorage/src/img_storage.c" bodystart="275" bodyend="288" declfile="/home/nono/OpenWize/sources/Samples/ImgStorage/include/img_storage.h" declline="59" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__ing__storage_1ga664014c354a334ba246eae430c1a4bc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t ImgStore_GetBitmapLine</definition>
        <argsstring>(uint16_t u16_Id)</argsstring>
        <name>ImgStore_GetBitmapLine</name>
        <param>
          <type>uint16_t</type>
          <declname>u16_Id</declname>
        </param>
        <briefdescription>
<para>Get the line value (from bitmap) of the given block Id. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">u16_Id</parametername>
</parameternamelist>
<parameterdescription>
<para>The Id of the block. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>8 bits bitmap line </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/ImgStorage/src/img_storage.c" line="296" column="9" bodyfile="/home/nono/OpenWize/sources/Samples/ImgStorage/src/img_storage.c" bodystart="296" bodyend="299" declfile="/home/nono/OpenWize/sources/Samples/ImgStorage/include/img_storage.h" declline="60" declcolumn="9"/>
        <references refid="group__ing__storage_1ga56506675106069d6cc90d292ecd75ceb" compoundref="img__storage_8c" startline="410" endline="413">_get_bitmap_line</references>
      </memberdef>
      <memberdef kind="function" id="group__ing__storage_1gacf9ff477ebe1648d6836257fd7b79068" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t ImgStore_GetMaxBlockNb</definition>
        <argsstring>(void)</argsstring>
        <name>ImgStore_GetMaxBlockNb</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the maximum admissible block number. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum block number </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/ImgStorage/src/img_storage.c" line="306" column="10" bodyfile="/home/nono/OpenWize/sources/Samples/ImgStorage/src/img_storage.c" bodystart="306" bodyend="309" declfile="/home/nono/OpenWize/sources/Samples/ImgStorage/include/img_storage.h" declline="61" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__ing__storage_1ga80bd20490da8b18fcd16ff20c7c52e5f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__ing__storage_1gaed3139f981a477515ce7a28b5f655f6d" kindref="member">img_pend_e</ref></type>
        <definition>img_pend_e ImgStore_GetPending</definition>
        <argsstring>(void)</argsstring>
        <name>ImgStore_GetPending</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the pending flag. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>return</parametername>
</parameternamelist>
<parameterdescription>
<para>img_pend_e::PENDING_SETUP return img_pend_e::PENDING_NONE return img_pend_e::PENDING_LOCAL return img_pend_e::PENDING_REMOTE </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/ImgStorage/src/img_storage.c" line="318" column="19" bodyfile="/home/nono/OpenWize/sources/Samples/ImgStorage/src/img_storage.c" bodystart="318" bodyend="321" declfile="/home/nono/OpenWize/sources/Samples/ImgStorage/include/img_storage.h" declline="62" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__ing__storage_1ga94c00390e210d422d7cfd7a9fc8326c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ImgStore_SetPending</definition>
        <argsstring>(img_pend_e ePend)</argsstring>
        <name>ImgStore_SetPending</name>
        <param>
          <type><ref refid="group__ing__storage_1gaed3139f981a477515ce7a28b5f655f6d" kindref="member">img_pend_e</ref></type>
          <declname>ePend</declname>
        </param>
        <briefdescription>
<para>Set the pending flag. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ePend</parametername>
</parameternamelist>
<parameterdescription>
<para>The pending flag to set</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/ImgStorage/src/img_storage.c" line="330" column="13" bodyfile="/home/nono/OpenWize/sources/Samples/ImgStorage/src/img_storage.c" bodystart="330" bodyend="333" declfile="/home/nono/OpenWize/sources/Samples/ImgStorage/include/img_storage.h" declline="63" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ing__storage_1gaee930c8f4195669e1675ab9ab4c4f2dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t ImgStore_Init</definition>
        <argsstring>(uint16_t u16NbExpectedBlk)</argsstring>
        <name>ImgStore_Init</name>
        <param>
          <type>uint16_t</type>
          <declname>u16NbExpectedBlk</declname>
        </param>
        <briefdescription>
<para>Initialize the image manager context. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">u16NbExpectedBlk</parametername>
</parameternamelist>
<parameterdescription>
<para>The number block for expected new sw image</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Success </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Failed (at least one of given parameters is out of range) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>Fatal (unable to erase the flash memory area) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/ImgStorage/src/img_storage.c" line="344" column="8" bodyfile="/home/nono/OpenWize/sources/Samples/ImgStorage/src/img_storage.c" bodystart="344" bodyend="367" declfile="/home/nono/OpenWize/sources/Samples/ImgStorage/include/img_storage.h" declline="64" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__ing__storage_1gab6c617026df784eca3da265773c5f12c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t ImgStore_Setup</definition>
        <argsstring>(uint32_t u32ImgAdd, pfWriteFlash_t pfWrite, pfEraseFlash_t pfErase)</argsstring>
        <name>ImgStore_Setup</name>
        <param>
          <type>uint32_t</type>
          <declname>u32ImgAdd</declname>
        </param>
        <param>
          <type>pfWriteFlash_t</type>
          <declname>pfWrite</declname>
        </param>
        <param>
          <type>pfEraseFlash_t</type>
          <declname>pfErase</declname>
        </param>
        <briefdescription>
<para>Initialize the image manager context. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">u32ImgAdd</parametername>
</parameternamelist>
<parameterdescription>
<para>Software Image address (64 bits aligned) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pfWrite</parametername>
</parameternamelist>
<parameterdescription>
<para>Function pointer on write sub function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pfErase</parametername>
</parameternamelist>
<parameterdescription>
<para>Function pointer on erase sub function</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Success </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Failed (at least one of given parameters is out of range) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/ImgStorage/src/img_storage.c" line="379" column="8" bodyfile="/home/nono/OpenWize/sources/Samples/ImgStorage/src/img_storage.c" bodystart="379" bodyend="397" declfile="/home/nono/OpenWize/sources/Samples/ImgStorage/include/img_storage.h" declline="65" declcolumn="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This file define function api to deal with Software image storage. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para>2019, GRDF, Inc. All rights reserved.</para>
</simplesect>
Redistribution and use in source and binary forms, with or without modification, are permitted (subject to the limitations in the disclaimer below) provided that the following conditions are met:<itemizedlist>
<listitem><para>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</para>
</listitem><listitem><para>Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</para>
</listitem><listitem><para>Neither the name of GRDF, Inc. nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="par"><title>Revision history</title><para></para>
</simplesect>
<simplesect kind="par"><title>1.0.0 : 2020/10/11[GBI]</title><para>Initial version </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="35"><highlight class="preprocessor">#ifndef<sp/>_IMG_STORAGE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_IMG_STORAGE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="group__ing__storage_1gaed3139f981a477515ce7a28b5f655f6d" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>PENDING_SETUP<sp/><sp/>=<sp/>0x00,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>PENDING_NONE<sp/><sp/><sp/>=<sp/>0x01,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>PENDING_LOCAL<sp/><sp/>=<sp/>0x11,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>PENDING_REMOTE<sp/>=<sp/>0x21,</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}<sp/><ref refid="group__ing__storage_1gaed3139f981a477515ce7a28b5f655f6d" kindref="member">img_pend_e</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/>(*pfWriteFlash_t)(uint32_t<sp/>u32Addr,<sp/>uint64_t<sp/>*pData,<sp/>uint32_t<sp/>u32NbDoubleWord);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/>(*pfEraseFlash_t)(uint32_t<sp/>u32Addr,<sp/>uint32_t<sp/>u32Size);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ing__storage_1ga144e1e6dcc412c77efbf7d010f88475f" kindref="member">ImgStore_StoreBlock</ref>(uint16_t<sp/>u16_BlkId,<sp/>uint8_t<sp/>*p_Blk);</highlight></codeline>
<codeline lineno="58"><highlight class="normal">uint8_t<sp/><ref refid="group__ing__storage_1gaefbe2245b4976f5040f48a3c3ef84289" kindref="member">ImgStore_IsComplete</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal">uint8_t<sp/><ref refid="group__ing__storage_1ga338ec5b155cfe028d5bc961be39d27b8" kindref="member">ImgStore_Verify</ref>(uint8_t<sp/>*pImgHash,<sp/>uint8_t<sp/>u8DigestSz);</highlight></codeline>
<codeline lineno="60"><highlight class="normal">uint8_t<sp/><ref refid="group__ing__storage_1ga664014c354a334ba246eae430c1a4bc5" kindref="member">ImgStore_GetBitmapLine</ref>(uint16_t<sp/>u16_Id);</highlight></codeline>
<codeline lineno="61"><highlight class="normal">uint16_t<sp/><ref refid="group__ing__storage_1gacf9ff477ebe1648d6836257fd7b79068" kindref="member">ImgStore_GetMaxBlockNb</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><ref refid="group__ing__storage_1gaed3139f981a477515ce7a28b5f655f6d" kindref="member">img_pend_e</ref><sp/><ref refid="group__ing__storage_1ga80bd20490da8b18fcd16ff20c7c52e5f" kindref="member">ImgStore_GetPending</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ing__storage_1ga94c00390e210d422d7cfd7a9fc8326c0" kindref="member">ImgStore_SetPending</ref>(<ref refid="group__ing__storage_1gaed3139f981a477515ce7a28b5f655f6d" kindref="member">img_pend_e</ref><sp/>ePend);</highlight></codeline>
<codeline lineno="64"><highlight class="normal">int8_t<sp/><ref refid="group__ing__storage_1gaee930c8f4195669e1675ab9ab4c4f2dc" kindref="member">ImgStore_Init</ref>(uint16_t<sp/>u16NbExpectedBlk);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">int8_t<sp/><ref refid="group__ing__storage_1gab6c617026df784eca3da265773c5f12c" kindref="member">ImgStore_Setup</ref>(uint32_t<sp/>u32ImgAdd,<sp/>pfWriteFlash_t<sp/>pfWrite,<sp/>pfEraseFlash_t<sp/>pfErase);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_IMG_STORAGE_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/nono/OpenWize/sources/Samples/ImgStorage/include/img_storage.h"/>
  </compounddef>
</doxygen>
