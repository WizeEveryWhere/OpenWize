<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="confidentiality_8c" kind="file" language="C++">
    <compoundname>confidentiality.c</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">stddef.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="key__priv_8h" local="yes">key_priv.h</includes>
    <includes refid="utils__secure_8h" local="yes">utils_secure.h</includes>
    <includes local="yes">tinycrypt/ctr_mode.h</includes>
    <incdepgraph>
      <node id="2">
        <label>stdint.h</label>
      </node>
      <node id="7">
        <label>utils_secure.h</label>
        <link refid="utils__secure_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
      <node id="8">
        <label>tinycrypt/ctr_mode.h</label>
      </node>
      <node id="4">
        <label>string.h</label>
      </node>
      <node id="1">
        <label>/home/nono/OpenWize/sources/Samples/Crypto/src/confidentiality.c</label>
        <link refid="confidentiality_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>key_priv.h</label>
        <link refid="key__priv_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>crypto.h</label>
        <link refid="crypto_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__crypto_1gafb8dbd75bee17780e4a3a8eafec71b2f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t _crypt_</definition>
        <argsstring>(uint8_t *p_Out, uint8_t *p_In, uint8_t u8_Sz, uint8_t p_Ctr[CTR_SIZE], uint8_t u8_KeyId)</argsstring>
        <name>_crypt_</name>
        <param>
          <type>uint8_t *</type>
          <declname>p_Out</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>p_In</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>u8_Sz</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>p_Ctr</declname>
          <array>[CTR_SIZE]</array>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>u8_KeyId</declname>
        </param>
        <briefdescription>
<para>This function en/de crypt with the AES128 in CTR mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">p_Out</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer on output buffer. Plain text for decrypt, cipher text for encrypt. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">p_In</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer on input buffer. Cipher text for encrypt, plain text for decrypt. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">u8_Sz</parametername>
</parameternamelist>
<parameterdescription>
<para>Input buffer size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_Ctr</parametername>
</parameternamelist>
<parameterdescription>
<para>Counter buffer. Warning : it will be altered by this function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">u8_KeyId</parametername>
</parameternamelist>
<parameterdescription>
<para>The key id to use for encrypt or decrypt </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>return</parametername>
</parameternamelist>
<parameterdescription>
<para>crypto_code_e::CRYPTO_OK (1) if everything is fine return crypto_code_e::CRYPTO_KO (0) if something goes wrong return crypto_code_e::CRYPTO_KID_UNK_ERR (2) id the key id is out of box return crypto_code_e::CRYPTO_INT_NULL_ERR (4) if one of the given pointer is NULL </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/Crypto/src/confidentiality.c" line="111" column="16" bodyfile="/home/nono/OpenWize/sources/Samples/Crypto/src/confidentiality.c" bodystart="111" bodyend="137" declfile="/home/nono/OpenWize/sources/Samples/Crypto/src/confidentiality.c" declline="51" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="group__crypto_1gaa323defb572bfa6496f11d714395ae3d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t Crypto_Encrypt</definition>
        <argsstring>(uint8_t *p_Out, uint8_t *p_In, uint8_t u8_Sz, uint8_t p_Ctr[CTR_SIZE], uint8_t u8_KeyId)</argsstring>
        <name>Crypto_Encrypt</name>
        <param>
          <type>uint8_t *</type>
          <declname>p_Out</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>p_In</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>u8_Sz</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>p_Ctr</declname>
          <array>[CTR_SIZE]</array>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>u8_KeyId</declname>
        </param>
        <briefdescription>
<para>Wrapper around <emphasis>crypt</emphasis> function. </para>
        </briefdescription>
        <detaileddescription>
<para>This function encrypt (with the AES128 in CTR mode) a given message.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">p_Out</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer on output buffer (Cipher text). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">p_In</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer on input buffer (Plain text). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">u8_Sz</parametername>
</parameternamelist>
<parameterdescription>
<para>Input buffer size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_Ctr</parametername>
</parameternamelist>
<parameterdescription>
<para>Counter buffer. Warning : it will be altered by this function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">u8_KeyId</parametername>
</parameternamelist>
<parameterdescription>
<para>The key id to use for encrypt </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>return</parametername>
</parameternamelist>
<parameterdescription>
<para>crypto_code_e::CRYPTO_OK (1) if everything is fine return crypto_code_e::CRYPTO_KO (0) if something goes wrong return crypto_code_e::CRYPTO_KID_UNK_ERR (2) id the key id is out of box return crypto_code_e::CRYPTO_INT_NULL_ERR (4) if one of the given pointer is NULL </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/Crypto/src/confidentiality.c" line="70" column="16" bodyfile="/home/nono/OpenWize/sources/Samples/Crypto/src/confidentiality.c" bodystart="70" bodyend="74" declfile="/home/nono/OpenWize/sources/Samples/Crypto/include/crypto.h" declline="152" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__crypto_1ga95cb4ca092b168f220d4bc0c5caae92f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t Crypto_Decrypt</definition>
        <argsstring>(uint8_t *p_Out, uint8_t *p_In, uint8_t u8_Sz, uint8_t p_Ctr[CTR_SIZE], uint8_t u8_KeyId)</argsstring>
        <name>Crypto_Decrypt</name>
        <param>
          <type>uint8_t *</type>
          <declname>p_Out</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>p_In</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>u8_Sz</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>p_Ctr</declname>
          <array>[CTR_SIZE]</array>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>u8_KeyId</declname>
        </param>
        <briefdescription>
<para>Wrapper around the <emphasis>crypt</emphasis> function. </para>
        </briefdescription>
        <detaileddescription>
<para>This function decrypt (with the AES128 in CTR mode) a given message.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">p_Out</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer on output buffer (Plain text). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">p_In</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer on input buffer (Cipher text). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">u8_Sz</parametername>
</parameternamelist>
<parameterdescription>
<para>Input buffer size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p_Ctr</parametername>
</parameternamelist>
<parameterdescription>
<para>Counter buffer. Warning : it will be altered by this function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">u8_KeyId</parametername>
</parameternamelist>
<parameterdescription>
<para>The key id to use for decrypt </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>return</parametername>
</parameternamelist>
<parameterdescription>
<para>crypto_code_e::CRYPTO_OK (1) if everything is fine return crypto_code_e::CRYPTO_KO (0) if something goes wrong return crypto_code_e::CRYPTO_KID_UNK_ERR (2) id the key id is out of box return crypto_code_e::CRYPTO_INT_NULL_ERR (4) if one of the given pointer is NULL </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nono/OpenWize/sources/Samples/Crypto/src/confidentiality.c" line="91" column="16" bodyfile="/home/nono/OpenWize/sources/Samples/Crypto/src/confidentiality.c" bodystart="91" bodyend="95" declfile="/home/nono/OpenWize/sources/Samples/Crypto/include/crypto.h" declline="155" declcolumn="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This file expose functions to encrypt or decrypt a given message. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para>2019, GRDF, Inc. All rights reserved.</para>
</simplesect>
Redistribution and use in source and binary forms, with or without modification, are permitted (subject to the limitations in the disclaimer below) provided that the following conditions are met:<itemizedlist>
<listitem><para>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</para>
</listitem><listitem><para>Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</para>
</listitem><listitem><para>Neither the name of GRDF, Inc. nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="par"><title>Revision history</title><para></para>
</simplesect>
<simplesect kind="par"><title>1.0.0 : 2019/11/25[GBI]</title><para>Initial version </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="35"><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="key__priv_8h" kindref="compound">key_priv.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="utils__secure_8h" kindref="compound">utils_secure.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tinycrypt/ctr_mode.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>TC_AES_BLOCK_SIZE<sp/>!=<sp/>CTR_SIZE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;Incompatible<sp/>AES<sp/>block<sp/>size!!&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>_crypt_(uint8_t<sp/>*p_Out,<sp/>uint8_t<sp/>*p_In,<sp/>uint8_t<sp/>u8_Sz,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>p_Ctr[CTR_SIZE],<sp/>uint8_t<sp/>u8_KeyId);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="group__crypto_1gaa323defb572bfa6496f11d714395ae3d" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="group__crypto_1gaa323defb572bfa6496f11d714395ae3d" kindref="member">Crypto_Encrypt</ref>(uint8_t<sp/>*p_Out,<sp/>uint8_t<sp/>*p_In,<sp/>uint8_t<sp/>u8_Sz,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>p_Ctr[CTR_SIZE],<sp/>uint8_t<sp/>u8_KeyId)</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_crypt_(p_Out,<sp/>p_In,<sp/>u8_Sz,<sp/><sp/>p_Ctr,<sp/>u8_KeyId);</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="group__crypto_1ga95cb4ca092b168f220d4bc0c5caae92f" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="group__crypto_1ga95cb4ca092b168f220d4bc0c5caae92f" kindref="member">Crypto_Decrypt</ref>(uint8_t<sp/>*p_Out,<sp/>uint8_t<sp/>*p_In,<sp/>uint8_t<sp/>u8_Sz,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>p_Ctr[CTR_SIZE],<sp/>uint8_t<sp/>u8_KeyId)</highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_crypt_(p_Out,<sp/>p_In,<sp/>u8_Sz,<sp/>p_Ctr,<sp/>u8_KeyId);</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>_crypt_(uint8_t<sp/>*p_Out,<sp/>uint8_t<sp/>*p_In,<sp/>uint8_t<sp/>u8_Sz,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>p_Ctr[CTR_SIZE],<sp/>uint8_t<sp/>u8_KeyId)</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tc_aes_key_sched_struct<sp/>s_sched;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>u8_ret<sp/>=<sp/><ref refid="group__crypto_1ggaba880ecd29a19ea1bfe55d32bf0176c9a60a843bc26ee85510e68d53b85e52683" kindref="member">CRYPTO_OK</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>key<sp/>id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u8_KeyId<sp/>&gt;<sp/><ref refid="group__crypto_1ga189381496bdc6329d20d84cb8dd755e4" kindref="member">KEY_MAX_NB</ref>)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8_ret<sp/>=<sp/><ref refid="group__crypto_1ggaba880ecd29a19ea1bfe55d32bf0176c9a77c3cd579f2a2120039dc18a0958771a" kindref="member">CRYPTO_KID_UNK_ERR</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>sanity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_Out<sp/>==<sp/>NULL<sp/>||<sp/>p_In<sp/>==<sp/>NULL<sp/>||<sp/>u8_Sz<sp/>==<sp/>0<sp/>||<sp/>p_Ctr<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8_ret<sp/>=<sp/><ref refid="group__crypto_1ggaba880ecd29a19ea1bfe55d32bf0176c9a0cb87f7d3f8ec289a92832dea4fdcda6" kindref="member">CRYPTO_INT_NULL_ERR</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><sp/>u8_ret<sp/>==<sp/><ref refid="group__crypto_1ggaba880ecd29a19ea1bfe55d32bf0176c9a60a843bc26ee85510e68d53b85e52683" kindref="member">CRYPTO_OK</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u8_KeyId<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8_ret<sp/>=<sp/>tc_aes128_set_encrypt_key(&amp;s_sched,<sp/><ref refid="group__crypto_1ga21956ce69b049977e54c004831c9bdcb" kindref="member">_a_Key_</ref>[u8_KeyId].key);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8_ret<sp/>=<sp/>(u8_ret<sp/>!=<sp/>TC_CRYPTO_SUCCESS)?(<ref refid="group__crypto_1ggaba880ecd29a19ea1bfe55d32bf0176c9a25cff552c7f5b5a4502b9e25cc0f9093" kindref="member">CRYPTO_KO</ref>):(tc_ctr_mode(</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_Out,<sp/>u8_Sz,<sp/>p_In,<sp/>u8_Sz,<sp/>p_Ctr,<sp/>&amp;s_sched));</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8_ret<sp/>=<sp/>(u8_ret<sp/>!=<sp/>TC_CRYPTO_SUCCESS)?(<ref refid="group__crypto_1ggaba880ecd29a19ea1bfe55d32bf0176c9a25cff552c7f5b5a4502b9e25cc0f9093" kindref="member">CRYPTO_KO</ref>):(<ref refid="group__crypto_1ggaba880ecd29a19ea1bfe55d32bf0176c9a60a843bc26ee85510e68d53b85e52683" kindref="member">CRYPTO_OK</ref>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(p_Out,<sp/>p_In,<sp/>u8_Sz);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u8_ret;</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/nono/OpenWize/sources/Samples/Crypto/src/confidentiality.c"/>
  </compounddef>
</doxygen>
